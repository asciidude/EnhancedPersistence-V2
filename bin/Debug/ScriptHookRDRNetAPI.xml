<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScriptHookRDRNetAPI</name>
    </assembly>
    <members>
        <member name="T:RDR2.eEulerRotationOrder">
            <summary>
            Enums for the order in which to apply rotations in local space, just like how Rockstar Games define <c>EULER_ROT_ORDER</c>.
            </summary>
        </member>
        <member name="T:RDR2.Math.Matrix">
            <summary>
            Defines a 4x4 matrix.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M11">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and first column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M12">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and second column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M13">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and third column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M14">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and fourth column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M21">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and first column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M22">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and second column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M23">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and third column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M24">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and fourth column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M31">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and first column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M32">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and second column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M33">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and third column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M34">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and fourth column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M41">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and first column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M42">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and second column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M43">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and third column.
            </summary>
        </member>
        <member name="F:RDR2.Math.Matrix.M44">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and fourth column.
            </summary>
        </member>
        <member name="M:RDR2.Math.Matrix.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.Math.Matrix"/> structure.
            </summary>
            <param name="values">The values to assign to the components of the matrix. This must be an array with sixteen elements.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="values"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="values"/> contains more or less than sixteen elements.</exception>
        </member>
        <member name="P:RDR2.Math.Matrix.Identity">
            <summary>
            The identity <see cref="T:RDR2.Math.Matrix"/>.
            </summary>
        </member>
        <member name="P:RDR2.Math.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the matrix component, depending on the index.</value>
            <param name="row">The row of the matrix to access.</param>
            <param name="column">The column of the matrix to access.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="row"/> or <paramref name="column"/>is out of the range [0, 3].</exception>
        </member>
        <member name="M:RDR2.Math.Matrix.FromArray(System.Single[])">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="P:RDR2.Math.Matrix.IsIdentity">
            <summary>
            Gets a value indicating whether this instance is an identity matrix.
            </summary>
            <value>
            <c>true</c> if this instance is an identity matrix; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.Math.Matrix.HasInverse">
            <summary>
            Gets a value indicating whether this instance has an inverse matrix.
            </summary>
        </member>
        <member name="M:RDR2.Math.Matrix.Determinant">
            <summary>
            Calculates the determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Inverse">
            <summary>
            Inverts the matrix.
            </summary>
        </member>
        <member name="M:RDR2.Math.Matrix.Add(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Determines the sum of two matrices.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Subtract(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Determines the difference between two matrices.
            </summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Multiply(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Determines the product of two matrices.
            </summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Multiply(RDR2.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by the given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Divide(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Determines the quotient of two matrices.
            </summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Divide(RDR2.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by the given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Negate(RDR2.Math.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="matrix">The matrix to be negated.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Inverse(RDR2.Math.Matrix)">
            <summary>
            Calculates the inverse of a matrix if it exists.
            </summary>
            <returns>The inverse of the matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Lerp(RDR2.Math.Matrix,RDR2.Math.Matrix,System.Single)">
            <summary>
            Performs a linear interpolation between two matrices.
            </summary>
            <param name="start">Start matrix.</param>
            <param name="end">End matrix.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two matrices.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationX(System.Single)">
            <summary>
            Creates a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationY(System.Single)">
            <summary>
            Creates a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationZ(System.Single)">
            <summary>
            Creates a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationAxis(RDR2.Math.Vector3,System.Single)">
            <summary>
            Creates a matrix that rotates around an arbitrary axis.
            </summary>
            <param name="axis">The axis around which to rotate.</param>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationQuaternion(RDR2.Math.Quaternion)">
            <summary>
            Creates a rotation matrix from a rotation.
            </summary>
            <param name="rotation">The quaternion to use to build the matrix.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a rotation matrix with a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Scaling(System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix that scales along the x-axis, y-axis, and y-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Scaling(RDR2.Math.Vector3)">
            <summary>
            Creates a matrix that scales along the x-axis, y-axis, and y-axis.
            </summary>
            <param name="scale">Scaling factor for all three axes.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Translation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a translation matrix using the specified offsets.
            </summary>
            <param name="x">X-coordinate offset.</param>
            <param name="y">Y-coordinate offset.</param>
            <param name="z">Z-coordinate offset.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Translation(RDR2.Math.Vector3)">
            <summary>
            Creates a translation matrix using the specified offsets.
            </summary>
            <param name="amount">The offset for all three coordinate planes.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Transpose(RDR2.Math.Matrix)">
            <summary>
            Calculates the transpose of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_UnaryNegation(RDR2.Math.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="matrix">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Addition(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Subtraction(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Subtracts two matrices.
            </summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Division(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Divides two matrices.
            </summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Division(RDR2.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Multiply(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Multiply(RDR2.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Multiply(System.Single,RDR2.Math.Matrix)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="right">The matrix to scale.</param>
            <param name="left">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Equality(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.op_Inequality(RDR2.Math.Matrix,RDR2.Math.Matrix)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.ToArray">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="M:RDR2.Math.Matrix.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Equals(RDR2.Math.Matrix)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Matrix.Equals(RDR2.Math.Matrix@,RDR2.Math.Matrix@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns><c>true</c> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:RDR2.Math.Quaternion.X">
            <summary>
            Gets or sets the X component of the quaternion.
            </summary>
            <value>The X component of the quaternion.</value>
        </member>
        <member name="F:RDR2.Math.Quaternion.Y">
            <summary>
            Gets or sets the Y component of the quaternion.
            </summary>
            <value>The Y component of the quaternion.</value>
        </member>
        <member name="F:RDR2.Math.Quaternion.Z">
            <summary>
            Gets or sets the Z component of the quaternion.
            </summary>
            <value>The Z component of the quaternion.</value>
        </member>
        <member name="F:RDR2.Math.Quaternion.W">
            <summary>
            Gets or sets the W component of the quaternion.
            </summary>
            <value>The W component of the quaternion.</value>
        </member>
        <member name="M:RDR2.Math.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.Math.Quaternion"/> structure.
            </summary>
            <param name="x">The X component of the quaternion.</param>
            <param name="y">The Y component of the quaternion.</param>
            <param name="z">The Z component of the quaternion.</param>
            <param name="w">The W component of the quaternion.</param>
        </member>
        <member name="M:RDR2.Math.Quaternion.#ctor(RDR2.Math.Vector3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.Math.Quaternion"/> structure.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
        </member>
        <member name="P:RDR2.Math.Quaternion.Identity">
            <summary>
            The identity <see cref="T:RDR2.Math.Quaternion"/> (0, 0, 0, 1).
            </summary>
        </member>
        <member name="P:RDR2.Math.Quaternion.Axis">
            <summary>
            Gets the axis components of the quaternion.
            </summary>
        </member>
        <member name="P:RDR2.Math.Quaternion.Angle">
            <summary>
            Gets the angle of the quaternion.
            </summary>
        </member>
        <member name="M:RDR2.Math.Quaternion.Length">
            <summary>
            Calculates the length of the quaternion.
            </summary>
            <returns>The length of the quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.LengthSquared">
            <summary>
            Calculates the squared length of the quaternion.
            </summary>
            <returns>The squared length of the quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Normalize">
            <summary>
            Converts the quaternion into a unit quaternion.
            </summary>
        </member>
        <member name="M:RDR2.Math.Quaternion.Conjugate">
            <summary>
            Conjugates the quaternion.
            </summary>
        </member>
        <member name="M:RDR2.Math.Quaternion.Invert">
            <summary>
            Conjugates and renormalizes the quaternion.
            </summary>
        </member>
        <member name="M:RDR2.Math.Quaternion.Negate(RDR2.Math.Quaternion)">
            <summary>
            Reverses the direction of a given quaternion.
            </summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Add(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Subtract(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Subtracts two quaternions.
            </summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Multiply(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Modulates a quaternion by another.
            </summary>
            <param name="left">The first quaternion to modulate.</param>
            <param name="right">The second quaternion to modulate.</param>
            <returns>The modulated quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Multiply(RDR2.Math.Quaternion,System.Single)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Divide(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Divides a quaternion by another.
            </summary>
            <param name="left">The first quaternion to divide.</param>
            <param name="right">The second quaternion to divide.</param>
            <returns>The divided quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Normalize(RDR2.Math.Quaternion)">
            <summary>
            Converts the quaternion into a unit quaternion.
            </summary>
            <param name="quaternion">The quaternion to normalize.</param>
            <returns>The normalized quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Conjugate(RDR2.Math.Quaternion)">
            <summary>
            Creates the conjugate of a specified Quaternion.
            </summary>
            <param name="value">The Quaternion of which to return the conjugate.</param>
            <returns>A new Quaternion that is the conjugate of the specified one.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Invert(RDR2.Math.Quaternion)">
            <summary>
            Conjugates and renormalizes the quaternion.
            </summary>
            <param name="quaternion">The quaternion to conjugate and re-normalize.</param>
            <returns>The conjugated and renormalized quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Dot(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Calculates the dot product of two quaternions.
            </summary>
            <param name="left">First source quaternion.</param>
            <param name="right">Second source quaternion.</param>
            <returns>The dot product of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Lerp(RDR2.Math.Quaternion,RDR2.Math.Quaternion,System.Single)">
            <summary>
            Performs a linear interpolation between two quaternion.
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two quaternions.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:RDR2.Math.Quaternion.Slerp(RDR2.Math.Quaternion,RDR2.Math.Quaternion,System.Single)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation..
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The spherical linear interpolation of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.SlerpUnclamped(RDR2.Math.Quaternion,RDR2.Math.Quaternion,System.Single)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation. The parameter /t/ is not clamped.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
        </member>
        <member name="M:RDR2.Math.Quaternion.FromToRotation(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Creates a rotation which rotates from fromDirection to toDirection.
            </summary>
        </member>
        <member name="M:RDR2.Math.Quaternion.RotateTowards(RDR2.Math.Quaternion,RDR2.Math.Quaternion,System.Single)">
            <summary>
            Rotates a rotation from towards to.
            </summary>
            <param name="from">From Quaternion.</param>
            <param name="to">To Quaternion.</param>
            <param name ="maxDegreesDelta"></param>
        </member>
        <member name="M:RDR2.Math.Quaternion.AngleBetween(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Returns the angle in degrees between two rotations a and b.
            </summary>
            <param name="a">The first quaternion to calculate angle.</param>
            <param name="b">The second quaternion to calculate angle.</param>
            <returns>The angle in degrees between two rotations a and b.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Euler(System.Single,System.Single,System.Single)">
            <summary>
            Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).
            </summary>
            <param name="zaxis">Z degrees.</param>
            <param name ="xaxis">X degrees.</param>
            <param name ="yaxis">Y degrees.</param>
        </member>
        <member name="M:RDR2.Math.Quaternion.Euler(RDR2.Math.Vector3)">
            <summary>
            Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).
            </summary>
            <param name="euler">Euler angles in degrees. euler.X = around X axis, euler.Y = around Y axis, euler.Z = around Z axis</param>
        </member>
        <member name="M:RDR2.Math.Quaternion.RotationAxis(RDR2.Math.Vector3,System.Single)">
            <summary>
            Creates a quaternion given a rotation and an axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.RotationMatrix(RDR2.Math.Matrix)">
            <summary>
            Creates a quaternion given a rotation matrix.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a Quaternion from the given yaw, pitch, and roll, in radians.
            </summary>
            <param name="yaw">The yaw angle, in radians, around the Z-axis.</param>
            <param name="pitch">The pitch angle, in radians, around the X-axis.</param>
            <param name="roll">The roll angle, in radians, around the Y-axis.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_UnaryNegation(RDR2.Math.Quaternion)">
            <summary>
            Reverses the direction of a given quaternion.
            </summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Addition(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Subtraction(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Subtracts two quaternions.
            </summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Multiply(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Multiplies a quaternion by another.
            </summary>
            <param name="left">The first quaternion to multiply.</param>
            <param name="right">The second quaternion to multiply.</param>
            <returns>The multiplied quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Multiply(RDR2.Math.Quaternion,System.Single)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Multiply(System.Single,RDR2.Math.Quaternion)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Division(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Divides a Quaternion by another Quaternion.
            </summary>
            <param name="left">The source Quaternion.</param>
            <param name="right">The divisor.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Equality(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.op_Inequality(RDR2.Math.Quaternion,RDR2.Math.Quaternion)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.ToString(System.String)">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <param name="format">The format.</param>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Equals(RDR2.Math.Quaternion)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Quaternion.Equals(RDR2.Math.Quaternion@,RDR2.Math.Quaternion@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns><c>true</c> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:RDR2.Math.Vector2.X">
            <summary>
            Gets or sets the X component of the vector.
            </summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="F:RDR2.Math.Vector2.Y">
            <summary>
            Gets or sets the Y component of the vector.
            </summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="M:RDR2.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.Math.Vector2"/> class.
            </summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
        </member>
        <member name="P:RDR2.Math.Vector2.Normalized">
            <summary>
            Returns this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Zero">
            <summary>
            Returns a null vector. (0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Up">
            <summary>
            Returns the up vector. (0,1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Down">
            <summary>
            Returns the down vector. (0,-1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Right">
            <summary>
            Returns the right vector. (1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Left">
            <summary>
            Returns the left vector. (-1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the X or Y component, depending on the index.</value>
            <param name="index">The index of the component to access. Use 0 for the X component and 1 for the Y component.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="index"/> is out of the range [0, 1].</exception>
        </member>
        <member name="M:RDR2.Math.Vector2.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.LengthSquared">
            <summary>
            Calculates the squared length of the vector.
            </summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Normalize">
            <summary>
            Converts the vector into a unit vector.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.DistanceTo(RDR2.Math.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.DistanceToSquared(RDR2.Math.Vector2)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the squared distance to.</param>
            <returns>The squared distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Distance(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.DistanceSquared(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Angle(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Returns the angle in degrees between from and to.
            The angle returned is always the acute angle between the two vectors.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.SignedAngle(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Returns the signed angle in degrees between from and to.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.ToHeading">
            <summary>
            Converts a vector to a heading.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.RandomXY">
            <summary>
            Returns a new normalized vector with random X and Y components.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.Add(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Subtract(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Multiply(RDR2.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Modulate(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Modulates a vector by another.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The modulated vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Divide(RDR2.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Negate(RDR2.Math.Vector2)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Clamp(RDR2.Math.Vector2,RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Lerp(RDR2.Math.Vector2,RDR2.Math.Vector2,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:RDR2.Math.Vector2.Normalize(RDR2.Math.Vector2)">
            <summary>
            Converts the vector into a unit vector.
            </summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Dot(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Reflect(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine
            whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:RDR2.Math.Vector2.Minimize(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Returns a vector containing the smallest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Maximize(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Returns a vector containing the largest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Addition(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Subtraction(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_UnaryNegation(RDR2.Math.Vector2)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Multiply(RDR2.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Multiply(System.Single,RDR2.Math.Vector2)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Division(RDR2.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Equality(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Inequality(RDR2.Math.Vector2,RDR2.Math.Vector2)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.op_Implicit(RDR2.Math.Vector2)~RDR2.Math.Vector3">
            <summary>
            Converts a Vector2 to a Vector3 implicitly.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector2.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.ToString(System.String)">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <param name="format">The format.</param>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Equals(RDR2.Math.Vector2)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Vector2.Equals(RDR2.Math.Vector2@,RDR2.Math.Vector2@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="F:RDR2.Math.Vector3.X">
            <summary>
            Gets or sets the X component of the vector.
            </summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="F:RDR2.Math.Vector3.Y">
            <summary>
            Gets or sets the Y component of the vector.
            </summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:RDR2.Math.Vector3.Z">
            <summary>
            Gets or sets the Z component of the vector.
            </summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="M:RDR2.Math.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.Math.Vector3"/> class.
            </summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
            <param name="z">Initial value for the Z component of the vector.</param>
        </member>
        <member name="P:RDR2.Math.Vector3.Normalized">
            <summary>
            Returns this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.Zero">
            <summary>
            Returns a null vector. (0,0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldUp">
            <summary>
            Returns the world Up vector. (0,0,1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldDown">
            <summary>
            Returns the world Down vector. (0,0,-1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldNorth">
            <summary>
            Returns the world North vector. (0,1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldSouth">
            <summary>
            Returns the world South vector. (0,-1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldEast">
            <summary>
            Returns the world East vector. (1,0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.WorldWest">
            <summary>
            Returns the world West vector. (-1,0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeRight">
            <summary>
            Returns the relative Right vector. (1,0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeLeft">
            <summary>
            Returns the relative Left vector. (-1,0,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeFront">
            <summary>
            Returns the relative Front vector. (0,1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeBack">
            <summary>
            Returns the relative Back vector. (0,-1,0)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeTop">
            <summary>
            Returns the relative Top vector. (0,0,1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.RelativeBottom">
            <summary>
            Returns the relative Bottom vector as used. (0,0,-1)
            </summary>
        </member>
        <member name="P:RDR2.Math.Vector3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the X, Y or Z component, depending on the index.</value>
            <param name="index">The index of the component to access. Use 0 for the X component, 1 for the Y component and 2 for the Z component.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="index"/> is out of the range [0, 2].</exception>
        </member>
        <member name="M:RDR2.Math.Vector3.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.LengthSquared">
            <summary>
            Calculates the squared length of the vector.
            </summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Normalize">
            <summary>
            Converts the vector into a unit vector.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceTo(RDR2.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceToSquared(RDR2.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceTo2D(RDR2.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceToSquared2D(RDR2.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position">The second vector to calculate the squared distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Distance(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceSquared(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Distance2D(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.DistanceSquared2D(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Angle(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Returns the angle in degrees between from and to.
            The angle returned is always the acute angle between the two vectors.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.SignedAngle(RDR2.Math.Vector3,RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Returns the signed angle in degrees between from and to.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.ToHeading">
            <summary>
            Converts a vector to a heading.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.Around(System.Single)">
            <summary>
            Creates a random vector inside the circle around this position.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.RandomXY">
            <summary>
            Returns a new normalized vector with random X and Y components.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.RandomXYZ">
            <summary>
            Returns a new normalized vector with random X, Y and Z components.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.Add(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Subtract(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Multiply(RDR2.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Modulate(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Modulates a vector by another.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The multiplied vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Divide(RDR2.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Negate(RDR2.Math.Vector3)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Clamp(RDR2.Math.Vector3,RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Lerp(RDR2.Math.Vector3,RDR2.Math.Vector3,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:RDR2.Math.Vector3.Normalize(RDR2.Math.Vector3)">
            <summary>
            Converts the vector into a unit vector.
            </summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Dot(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Cross(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The cross product of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Project(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Projects a vector onto another vector.
            </summary>
            <param name="vector">The vector to project.</param>
            <param name="onNormal">Vector to project onto, does not assume it is normalized.</param>
            <returns>The projected vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.ProjectOnPlane(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Projects a vector onto a plane defined by a normal orthogonal to the plane.
            </summary>
            <param name="vector">The vector to project.</param>
            <param name="planeNormal">Normal of the plane,  does not assume it is normalized.</param>
            <returns>The Projection of vector onto plane.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Reflect(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The vector to project onto the plane.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine
            whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:RDR2.Math.Vector3.Minimize(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Returns a vector containing the smallest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Maximize(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Returns a vector containing the largest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Addition(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Subtraction(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_UnaryNegation(RDR2.Math.Vector3)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="vector">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Multiply(RDR2.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Multiply(System.Single,RDR2.Math.Vector3)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Division(RDR2.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Equality(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Inequality(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.op_Implicit(RDR2.Math.Vector3)~RDR2.Math.Vector2">
            <summary>
            Converts a Vector3 to a Vector2 implicitly.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.ToArray">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="M:RDR2.Math.Vector3.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Equals(RDR2.Math.Vector3)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><c>true</c> if the current instance is equal to the specified object; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:RDR2.Math.Vector3.Equals(RDR2.Math.Vector3@,RDR2.Math.Vector3@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns><c>true</c> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <c>null</c> references or if <c>value1.Equals(value2)</c> returns <c>true</c>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.Native.BUILTIN.TIMERA">
            <summary>
            Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.TIMESTEP">
            <summary>
            Gets the current frame time.
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.LOG10(System.Single)">
            <summary>
            Old name: _LOG10
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.VMAG(System.Single,System.Single,System.Single)">
            <summary>
            Calculates the magnitude of a vector.
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.VMAG2(System.Single,System.Single,System.Single)">
            <summary>
            Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.VDIST(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates distance between vectors.
            The value returned will be in meters.
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.VDIST2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
            The value returned will be in RAGE units.
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.FLOOR(System.Single)">
            <summary>
            Rounds a float value down to the next whole number
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.CEIL(System.Single)">
            <summary>
            Rounds a float value up to the next whole number
            </summary>
        </member>
        <member name="M:RDR2.Native.BUILTIN.SET_THIS_THREAD_PRIORITY(System.Int32)">
            <summary>
            THREAD_PRIO_HIGHEST = 0
            THREAD_PRIO_NORMAL = 1
            THREAD_PRIO_LOWEST = 2
            THREAD_PRIO_MANUAL_UPDATE = 100
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._0x64340DC208D671D5(System.String)">
            <summary>
            coverLayer: see levels_0/levels/rdr3/coverlayers
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._0x7A1FDCF35EAA140F(System.String)">
            <summary>
            coverLayer: see levels_0/levels/rdr3/coverlayers
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._REQUEST_FLINCH_COVER_ANIM(System.Int32)">
            <summary>
            Makes ped flinch (if in cover) like they have been shot at
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._0x140B3CB1D424A945(System.Int32,System.UInt32)">
            <summary>
            weaponHash can also be -1
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._STOP_RUNNING_COVER_ANIMS(System.Int32)">
            <summary>
            Stops running cover anims and releases them
            _STOP_RENDERING_* - _STOP_SCRIPTED*
            </summary>
        </member>
        <member name="M:RDR2.Native.AICOVERPOINT._0x733077295AB51304(System.UInt64*)">
            <summary>
            args: f_0 = Volume Handle, f_2 = integer (-1, 32 used in R* Scripts)
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT.SET_PED_ON_TRANSPORT_SEAT(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            seat: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT.SET_TRANSPORT_CONFIG_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flagId:
            enum eTransportConfigFlags
            {
            	TCF_NotConsideredForEntryByLocalPlayer,
            	TCF_0xB78D6624,
            	TCF_0xA9700425,
            	TCF_0x8D7E4641,
            	TCF_0xF24BAA1F,
            	TCF_0x63B77935,
            	TCF_NotConsideredForEntryByAllPlayers,
            	TCF_0xD17A2AFD,
            	TCF_0xD4E4FDD5,
            	TCF_0x8227C929,
            	TCF_0x812C1070,
            	TCF_0x0E1AB26F,
            	TCF_0xBF4EC863,
            	TCF_0x75660C36,
            	TCF_0xA2539E20,
            	TCF_0x9162C633,
            	TCF_DisableHonorModifiers,
            	TCF_0xF9E71CB6,
            	TCF_0x933ECD3F,
            	TCF_0x18513A34
            };
            https://github.com/femga/rdr3_discoveries/tree/master/AI/TRANSPORT_CONFIG_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT.GET_TRANSPORT_CONFIG_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flagId: see SET_TRANSPORT_CONFIG_FLAG
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._GET_TRANSPORT_USAGE_FLAGS(System.Int32,System.Int32*)">
            <summary>
            See _SET_TRANSPORT_USAGE_FLAGS
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.AITRANSPORT._SET_TRANSPORT_USAGE_FLAGS(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.AITRANSPORT._IS_PED_ON_TRANSPORT_ENTITY(System.Int32,System.Int32)">
            <summary>
            Checks if ped is placed on target transportEntity
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._IS_TRANSPORT_SEAT_FREE(System.Int32,System.Int32)">
            <summary>
            Called together with IS_VEHICLE_SEAT_FREE
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._GET_PED_IN_TRANSPORT_SEAT(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._0x4248AB2EEB3C75AD(System.Int32,System.Int32,System.Boolean)">
            <summary>
            _SET_TRANSPORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._0x5639FBEA922788DA(System.Int32)">
            <summary>
            _CLEAR_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._0x8C8371EDFAF014A0(System.Int32,System.Single)">
            <summary>
            _SET_TRANSPORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._0xF8C20282B237E3F7(System.Int32)">
            <summary>
            _SET_TRANSPORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.AITRANSPORT._0x13F138225C202F66(System.Int32,System.Int32)">
            <summary>
            NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE: Setting vehicle transition enabled
            _SET_TRANSPORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._CREATE_ANIM_SCENE(System.String,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimSceneFlag
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x4B85B3CF91972222(System.Int32)">
            <summary>
            Used in Script Function CUTSCENE_MANAGE_SKIP
            _CHECK_* (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x73616E64696C132E(System.Int32,System.Boolean)">
            <summary>
            Used in SP R* Scripts only
            _CO* - _CR*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xD70C7A30412F8FA0(System.Int32)">
            <summary>
            Used in SP R* Scripts only
            _IS_ANIM_SCENE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x9AAE3C1148A09BCA(System.Int32)">
            <summary>
            Used in SP R* Scripts only
            _IS_ANIM_SCENE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xA96619FE85159ED2(System.Int32)">
            <summary>
            Used in SP R* Scripts only
            _WAS_ANIM_SCENE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._HAS_ENTITY_ENTERED_ANIM_SCENE(System.Int32,System.String)">
            <summary>
            _HAS_L* (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x1C5D33A4293E6DDE(System.Int32,System.String)">
            <summary>
            Used in SP R* Scripts only
            _IS_ANIM_SCENE_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x1407F5115FB9583E(System.Int32,System.String)">
            <summary>
            Used in SP R* Scripts only
            Params: p1 = 2B-LowHonor, 2A-HighHonor
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x1AD896BF43619551">
            <summary>
            Used in braithwaites2 SP R* Scripts only
            _A*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x5D7BFDA2290B4E39(System.String)">
            <summary>
            Used in SP R* Scripts only
            _IS_ANIM_SCENE_R* - _IS_ANIM_SCENE_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._IS_MGM_SYSTEM_LOADED(System.String)">
            <summary>
            MGM stands for MiniGameMoments.
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._LOAD_MGM_ASSETS(System.String)">
            <summary>
            Used to request MiniGameMoments Assets.
            
            mgmFilename's:
            Poker
            PokerArthur
            PokerArthurCamp
            PokerJohn
            PokerJohnCamp
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._CREATE_MGM_SYSTEM(System.String)">
            <summary>
            Returns mgmHandle
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xB1A196BAFE650402(System.Int32,System.Int32)">
            <summary>
            _PREPARE_* - _REGISTER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xAE6DE22DE0ED4554(System.Int32,System.Int32)">
            <summary>
            _UNLOAD_* - _WAS_ANIM_SCENE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x61B2AAEF645DDAF0(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Only used in tg_p R* Script
            Returns true when mgm event success
            _PREPARE_* - _REGISTER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x3641FCD53E59B335(System.Int32,System.Int32,System.String)">
            <summary>
            p2: MINIGAME_GET_SECONDARY_VOICE_STRING
            _SET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x3B393716C3FD8237(System.Int32)">
            <summary>
            Used in SP R* Scripts only
            _IS_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xE12D7B4B959644CD">
            <summary>
            Used in SP R* Scripts only
            _SET_B* - _SET_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xC1193521E3B9FADD(System.Int32,System.Boolean)">
            <summary>
            Used in SP R* Scripts only
            _RESUME_* - _SET_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0x2DB524750DC41ED4">
            <summary>
            Used in SP R* Scripts only
            _IS_PED_* - _IS_SC*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xEA41D44A8D42057B">
            <summary>
            Used in SP R* Scripts only
            _PAUSE_* - _PLAY_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._PAUSE_SCRIPT_THREADS(System.Boolean)">
            <summary>
            Pauses all script threads except the one that called it.
            </summary>
        </member>
        <member name="M:RDR2.Native.ANIMSCENE._0xCDCD7B2D49AEE73A(System.Boolean)">
            <summary>
            Used in SP R* Scripts only
            _SET_P*
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE4._REPORT_PLAYER_BAD_SPORT_BEHAVIOR(System.UInt64*,System.Int32)">
            <summary>
            nullsub, doesn't do anything
            however it is being used in tty scripts: [NET_BAD_SPORT_REPORT_PLAYER] Detected bad sport behavior from Player
            badSportBehavior: BS_QUITTER = 0, BS_VEHICLE_DESTRUCTION = 1, BS_VOTED_OUT = 2
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.SET_ATTRIBUTE_BASE_RANK(System.Int32,System.Int32,System.Int32)">
            <summary>
            attributeIndex:
            enum ePedAttribute
            {
            	PA_HEALTH,
            	PA_STAMINA,
            	PA_SPECIALABILITY,
            	PA_COURAGE,
            	PA_AGILITY,
            	PA_SPEED,
            	PA_ACCELERATION,
            	PA_BONDING,
            	SA_HUNGER,
            	SA_FATIGUED,
            	SA_INEBRIATED,
            	SA_POISONED,
            	SA_BODYHEAT,
            	SA_BODYWEIGHT,
            	SA_OVERFED,
            	SA_SICKNESS,
            	SA_DIRTINESS,
            	SA_DIRTINESSHAT,
            	MTR_STRENGTH,
            	MTR_GRIT,
            	MTR_INSTINCT,
            	PA_UNRULINESS,
            	SA_DIRTINESSSKIN
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_ATTRIBUTE_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_ATTRIBUTE_BASE_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_ATTRIBUTE_BONUS_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_MAX_ATTRIBUTE_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.SET_ATTRIBUTE_BONUS_RANK(System.Int32,System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_DEFAULT_ATTRIBUTE_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_DEFAULT_MAX_ATTRIBUTE_RANK(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.ADD_ATTRIBUTE_POINTS(System.Int32,System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.SET_ATTRIBUTE_POINTS(System.Int32,System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_ATTRIBUTE_POINTS(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_MAX_ATTRIBUTE_POINTS(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._SET_ATTRIBUTE_CORE_VALUE(System.Int32,System.Int32,System.Int32)">
            <summary>
            coreIndex:
            enum eAttributeCore
            {
            	ATTRIBUTE_CORE_HEALTH,
            	ATTRIBUTE_CORE_STAMINA,
            	ATTRIBUTE_CORE_DEADEYE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._GET_ATTRIBUTE_CORE_VALUE(System.Int32,System.Int32)">
            <summary>
            Gets the ped's core value on a scale of 0 to 100.
            coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.GET_DEFAULT_ATTRIBUTE_POINTS_NEEDED_FOR_RANK(System.UInt32,System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.ENABLE_ATTRIBUTE_OVERPOWER(System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            
            Old name: _SET_ATTRIBUTE_OVERPOWER_VALUE
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._ENABLE_ATTRIBUTE_CORE_OVERPOWER(System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            coreIndex: see _SET_ATTRIBUTE_CORE_VALUE
            
            Previously incorrectly named ENABLE_ATTRIBUTE_OVERPOWER
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE.DISABLE_ATTRIBUTE_OVERPOWER(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._IS_ATTRIBUTE_OVERPOWERED(System.Int32,System.Int32)">
            <summary>
            attributeIndex: see SET_ATTRIBUTE_BASE_RANK
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._START_ITEM_PREVIEW(System.UInt64,System.Int32)">
            <summary>
            Params: p1 is related to satchel_category
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._SET_STATUS_EFFECT_CORE_ICON(System.Int32)">
            <summary>
            Displays status effects on core icons (includes warnings).
            
            enum eUiRpgStatusEffect
            {
            	STATUS_NONE,
            	STATUS_COLD,
            	STATUS_HOT,
            	STATUS_OVERFED,
            	STATUS_DIRTY,
            	STATUS_SNAKE_VENOM,
            	STATUS_ARROW_WOUNDED,
            	STATUS_ARROW_DRAINED,
            	STATUS_ARROW_DISORIENTED,
            	STATUS_ARROW_TRACKED,
            	STATUS_ARROW_CONFUSION,
            	STATUS_UNDERWEIGHT,
            	STATUS_OVERWEIGHT,
            	STATUS_SICK_1,
            	STATUS_SICK_2,
            	STATUS_PREDATOR_INVULNERABLE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._SET_STATUS_EFFECT_PERIODIC_ICON(System.Int32)">
            <summary>
            Starts core periodic icon.
            statusEffectType: see 0xA4D3A1C008F250DF
            </summary>
        </member>
        <member name="M:RDR2.Native.ATTRIBUTE._STOP_STATUS_EFFECT_PERIODIC_ICON(System.Int32)">
            <summary>
            Stops periodic icon.
            statusEffectType: see 0xA4D3A1C008F250DF
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x7455CD705F7E933E">
            <summary>
            _AUDIO_IS_* - _AUDIO_TRIGGER*
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x79F9C57B8D0DFE90(System.String,System.Int32)">
            <summary>
            Only used in R* SP Script cv_mus_shared
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0xD0730C1FA40348D9(System.String)">
            <summary>
            _IS_SCRIPTED_CONVERSATION_*
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.REGISTER_SCRIPT_WITH_AUDIO(System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.UNREGISTER_SCRIPT_WITH_AUDIO">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.PLAY_SOUND_FRONTEND(System.String,System.String,System.Boolean,System.UInt64)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/audio/frontend_soundsets
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._PLAY_SOUND_FROM_ITEM(System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            item: value returned from 0x2E1CDC1FF3B8473E
            soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x580D71DFE0088E34(System.String,System.String)">
            <summary>
            _IS_SOUND_RUNNING(?)
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._IS_SCRIPTED_AUDIO_CUSTOM(System.UInt32,System.UInt32)">
            <summary>
            item: FUSE, value returned from 0x2E1CDC1FF3B8473E
            soundSet: HUD_SHOP_SOUNDSET, COMPANIONS_ROBBERIES_SOUNDSET
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._SET_WHISTLE_CONFIG_FOR_PED(System.Int32,System.String,System.Single)">
            <summary>
            whistleConfig: Ped.WhistlePitch (0.0 - 1.0), Ped.WhistleClarity (0.0 - 1.0), Ped.WhistleShape (0.0 - 10.0)
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._SET_SOUND_RELATIONSHIP_ON_PED(System.Int32,System.String,System.String)">
            <summary>
            p1: Entity.Relationship
            p2: Player, Enemy, Teammate, Neutral
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._PLAY_SOUND_FROM_ENTITY_WITH_SET(System.Int32,System.String,System.Int32,System.String,System.Boolean,System.UInt64)">
            <summary>
            Params: p5 seems to be always 0
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._PLAY_SOUND_FROM_POSITION_WITH_ID(System.Int32,System.String,System.Single,System.Single,System.Single,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Starts Audio Loop
            _PLAY_SOUND_FROM_ENTITY* - _PLAY_SOUND_FRONTEND*
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._UPDATE_SOUND_POSITION(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.PREPARE_SOUNDSET(System.String,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/audio/soundsets
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.AUDIO.PLAY_PED_AMBIENT_SPEECH_NATIVE(System.Int32,System.UInt64*)" -->
        <member name="M:RDR2.Native.AUDIO.PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(System.Single,System.Single,System.Single,System.UInt64*)">
            <summary>
            Old name: _PLAY_AMBIENT_SPEECH_AT_COORDS
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x0D7FD6A55FD63AEF(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Related to audio events of some sort
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.PLAY_PAIN(System.Int32,System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Valid pain IDs: 0..12
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0xF092B6030D6FD49C(System.Int32,System.String)">
            <summary>
            Name: ROPE_SETTINGS_DEFAULT
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._SET_VOFX_PED_VOICE(System.Int32,System.UInt32)">
            <summary>
            Hashes: VOFX_PLAYER_MALE01, VOFX_PLAYER_MALE02, VOFX_PLAYER_MALE03, VOFX_PLAYER_FEMALE01, VOFX_PLAYER_FEMALE02, VOFX_PLAYER_FEMALE03
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.DOES_CONTEXT_EXIST_FOR_THIS_PED(System.Int32,System.String,System.Boolean)">
            <summary>
            Checks if the ped can play the speech or has the speech file, last parameter is usually false.
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x864A842B86993851(System.Int32)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.SET_ANIMAL_MOOD(System.Int32,System.Int32)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.IS_HORN_ACTIVE(System.Int32)">
            <summary>
            Checks whether the horn of a vehicle is currently played.
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.FORCE_USE_AUDIO_GAME_OBJECT(System.Int32,System.String)">
            <summary>
            Old name: _FORCE_VEHICLE_ENGINE_AUDIO
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.SET_GPS_ACTIVE(System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0x6AB944DF68B512D3(System.UInt64)">
            <summary>
            _STOP_AUDIO_*
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.AUDIO_IS_MUSIC_PLAYING">
            <summary>
            Old name: AUDIO_IS_SCRIPTED_MUSIC_PLAYING
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0xBE28DB99556FF8D9(System.Int32)">
            <summary>
            Checks for MOONSHINE_BAND
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._0xB93A769B8B726950(System.Int32,System.UInt32)">
            <summary>
            Used in Script Function NET_CAMP_CLIENT_UPDATE_PED_ROLE_STATE_SHOP: hash exists! Playing hash
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.TRIGGER_MUSIC_EVENT(System.String)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/audio/music_events/music_events.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.SET_PED_WALLA_DENSITY(System.Single,System.Single)">
            <summary>
            https://en.m.wikipedia.org/wiki/Walla
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO.SET_AUDIO_FLAG(System.String,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/audio/audio_flags
            </summary>
        </member>
        <member name="M:RDR2.Native.AUDIO._GET_LOADED_STREAM_ID_FROM_CREATION(System.String,System.String)">
            <summary>
            Creates stream and returns streamId handle to be used with PLAY_STREAM_* natives
            https://github.com/femga/rdr3_discoveries/tree/master/audio/create_stream
            </summary>
        </member>
        <member name="M:RDR2.Native.BOUNTY._BOUNTY_REQUEST_SELF_REPORT_CRIME(System.UInt64*,System.UInt32,System.Boolean)">
            <summary>
            crimeType: see _REPORT_CRIME
            </summary>
        </member>
        <member name="M:RDR2.Native.BOUNTY._0x86EC5F83867C4B70(System.UInt64*)">
            <summary>
            _BOUNTY_C* or _BOUNTY_GET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.BOUNTY._0x27D3A0E1FE090A43(System.UInt64*)">
            <summary>
            _BOUNTY_IS_* or _BOUNTY_REQUEST_*
            </summary>
        </member>
        <member name="M:RDR2.Native.BOUNTY._0xF8BCC5ECA33AC9C1">
            <summary>
            _BOUNTY_GET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.BOUNTY._0xD6A67E2FF373D0E3(System.Int32)">
            <summary>
            _BOUNTY_GET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN.REGISTER_OBJECT_SCRIPT_BRAIN(System.String,System.UInt32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Registers a script for any object with a specific model hash.
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN._START_PRELOADED_SCRIPT_BRAIN(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns threadId
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN._START_SCRIPT_BRAIN(System.Int32,System.String,System.Int32,System.UInt64*,System.Int32,System.Boolean)">
            <summary>
            Returns threadId
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN._0xA6AC35DB4A7957A8(System.Int32)">
            <summary>
            Common flags: 250, 99999
            _SET_SCRIPT_BRAIN*
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN._0x4AA5EA1EDFB25786(System.Int32)">
            <summary>
            Called with flag 0 before 0xA6AC35DB4A7957A8 in net_entity_brain
            _SET_SCRIPT_BRAIN*
            </summary>
        </member>
        <member name="M:RDR2.Native.BRAIN.REACTIVATE_ALL_OBJECT_BRAINS_THAT_ARE_WAITING_TILL_OUT_OF_RANGE">
            <summary>
            Called before starting a new thread_monitor script thread in startup_mp/startup_tlg
            Alternative name _REGISTER_SCRIPT_BRAIN
            
            Old name: _PREPARE_SCRIPT_BRAIN
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.RENDER_SCRIPT_CAMS(System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            ease - smooth transition between the camera's positions
            easeTime - Time in milliseconds for the transition to happen
            
            If you have created a script (rendering) camera, and want to go back to the 
            character (gameplay) camera, call this native with render set to FALSE.
            Setting ease to TRUE will smooth the transition.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(System.Boolean,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This native makes the gameplay camera zoom into first person/third person with a special effect.
            blendBackSmoothingType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eBlendBackSmoothing
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DESTROY_CAM(System.Int32,System.Boolean)">
            <summary>
            BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DESTROY_ALL_CAMS(System.Boolean)">
            <summary>
            BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DOES_CAM_EXIST(System.Int32)">
            <summary>
            Returns whether or not the passed camera handle exists.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_CAM_ACTIVE(System.Int32,System.Boolean)">
            <summary>
            Set camera as active/inactive.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.IS_CAM_ACTIVE(System.Int32)">
            <summary>
            Returns whether or not the passed camera handle is active.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.GET_CAM_ROT(System.Int32,System.Int32)">
            <summary>
            rotationOrder: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEulerRotationOrder
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_CAM_COORD(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Sets the position of the cam.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_CAM_ROT(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Sets the rotation of the cam.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_CAM_FOV(System.Int32,System.Single)">
            <summary>
            Sets the field of view of the cam.
            
            Min: 1.0f
            Max: 130.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.ATTACH_CAM_TO_ENTITY(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Last param determines if its relative to the Entity
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.ATTACH_CAM_TO_PED_BONE(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            boneIndex: https://github.com/femga/rdr3_discoveries/tree/master/boneNames
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_CAM_AFFECTS_AIMING(System.Int32,System.Boolean)">
            <summary>
            Allows you to aim and shoot at the direction the camera is facing.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.ADD_CAM_SPLINE_NODE(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
            
            p8 big values ~100 will slow down the camera movement before reaching this node
            
            p9 != 0 seems to override the rotation/pitch (bool?)
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.GET_CAM_SPLINE_PHASE(System.Int32)">
            <summary>
            Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
            
            (returns 1.0f when no nodes has been added, reached end of non existing spline)
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._IS_ANIM_SCENE_CAM_ACTIVE">
            <summary>
            Only used in R* Script camera_photomode
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DO_SCREEN_FADE_IN(System.Int32)">
            <summary>
            Fades the screen in.
            
            duration: The time the fade should take, in milliseconds.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DO_SCREEN_FADE_OUT(System.Int32)">
            <summary>
            Fades the screen out.
            
            duration: The time the fade should take, in milliseconds.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.HAS_LETTER_BOX">
            <summary>
            More info: https://en.wikipedia.org/wiki/Letterboxing_(filming)
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._REQUEST_LETTER_BOX_NOW(System.Boolean,System.Boolean)">
            <summary>
            Creates Cinematic Black Bars (at top and bottom)
            Disable instantly: false/false, Enable instantly: true/true
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.GET_LETTER_BOX_RATIO">
            <summary>
            More info: see HAS_LETTER_BOX
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_CAM_RELATIVE_HEADING(System.Single,System.Single)">
            <summary>
            Sets the camera position relative to heading in float from -360 to +360.
            
            Heading is always 0 in aiming camera.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_CAM_RELATIVE_PITCH(System.Single,System.Single)">
            <summary>
            Sets the camera pitch.
            
            Parameters:
            x = pitches the camera on the x axis.
            Value2 = always seems to be hex 0x3F800000 (1.000000 float).
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._IS_IN_FULL_FIRST_PERSON_MODE">
            <summary>
            Returns true if player is in first person
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0xC3E9E5D4F413B773(System.String,System.Single)">
            <summary>
            shakeName: REINFORCED_LASSO_STRUGGLE_SHAKE
            _RES*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x0060B31968E60E41(System.String)">
            <summary>
            shakeNames in script_rel: CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, POV_DRUNK_SHAKE, DRUNK_SHAKE, MINIGAME_TRAIN_SHAKE
            _IS_GAMEPLAY_*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(System.Single)">
            <summary>
            Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0xFEFDDC6E8FDF8A75(System.String,System.Single)">
            <summary>
            _SET_GAMEPLAY_P* - _SET_GAMEPLAY_V*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x4285804FD65D8066(System.String,System.Boolean)">
            <summary>
            script_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE, CORRECTOR_SHAKE, MINIGAME_BOUNTY_SHAKE, HAND_SHAKE, MINIGAME_TRAIN_SHAKE
            script_mp_rel: DRUNK_SHAKE, REINFORCED_LASSO_STRUGGLE_SHAKE
            _STOP_GAMEPLAY_CAM* - _STOP_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(System.Int32)">
            <summary>
            Forces gameplay cam to specified ped as if you were the ped or spectating it
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_CAM_IGNORE_ENTITY_COLLISION_THIS_UPDATE(System.Int32)">
            <summary>
            Old name: _DISABLE_CAM_COLLISION_FOR_ENTITY
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x0F1FFEF5D54AE832">
            <summary>
            NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
            _DISABLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._SET_GAMEPLAY_CAM_INITIAL_ZOOM(System.Single)">
            <summary>
            Used in Script Function SHOP_CAMERA_SUPPORT_START_NEW_ORBIT
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(System.Single,System.Single)">
            <summary>
            minimum: Degrees between -180f and 180f.
            maximum: Degrees between -180f and 180f.
            
            Clamps the gameplay camera's current yaw.
            
            Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
            
            Old name: _CLAMP_GAMEPLAY_CAM_YAW
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(System.Single,System.Single)">
            <summary>
            minimum: Degrees between -90f and 90f.
            maximum: Degrees between -90f and 90f.
            
            Clamps the gameplay camera's current pitch.
            
            Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
            
            Old name: _CLAMP_GAMEPLAY_CAM_PITCH
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(System.Single,System.Single)">
            <summary>
            Old name: _ANIMATE_GAMEPLAY_CAM_ZOOM
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(System.Int32,System.Int32)">
            <summary>
            Forces gameplay cam to specified vehicle as if you were in it
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE">
            <summary>
            Old name: _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.DISABLE_FIRST_PERSON_FLASH_EFFECT_THIS_UPDATE">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._FORCE_THIRD_PERSON_CAM_THIS_FRAME">
            <summary>
            Forces camera position to second furthest 3rd person
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._FORCE_THIRD_PERSON_CAM_FAR_THIS_FRAME">
            <summary>
            Forces camera position to furthest 3rd person
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._FORCE_FIRST_PERSON_CAM_THIS_FRAME">
            <summary>
            Returns true if first person camera is active in saloon1.ysc
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._DISABLE_FIRST_PERSON_CAM_THIS_FRAME_2">
            <summary>
            Does the same as 0x9C473089A934C930
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_FIRST_PERSON_AIM_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(System.Single,System.Single)">
            <summary>
            Old name: _SET_FIRST_PERSON_CAM_PITCH_RANGE
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.CAM.SET_GAMEPLAY_ENTITY_HINT(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Int32,System.Int32,System.Int32,System.UInt64)" -->
        <member name="M:RDR2.Native.CAM._0x88544C0E3291DCAE(System.Boolean)">
            <summary>
            UPDATE_PLAYER_PLAYING_STATE - Releasing Lasso Hint Cam
            Return type char in ida
            _SET_GAMEPLAY_HINT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_HINT_CAMERA_RELATIVE_SIDE_OFFSET(System.Single)">
            <summary>
            Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETX
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.SET_GAMEPLAY_HINT_CAMERA_RELATIVE_VERTICAL_OFFSET(System.Single)">
            <summary>
            Old name: _SET_GAMEPLAY_HINT_ANIM_OFFSETY
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.CAM._START_CAMERA_ORBIT(System.UInt64*)" -->
        <member name="M:RDR2.Native.CAM.DISABLE_CINEMATIC_BONNET_CAMERA_THIS_UPDATE">
            <summary>
            Old name: _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.INVALIDATE_CINEMATIC_VEHICLE_IDLE_MODE">
            <summary>
            Old name: _INVALIDATE_VEHICLE_IDLE_CAM
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x975F6EBB62632FE3">
            <summary>
            _IS_SCRIPTED_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._FORCE_CINEMATIC_DEATH_CAM_ON_PED(System.Int32)">
            <summary>
            Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
            Params: targetPed = death cam focuses on it
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._SET_START_CINEMATIC_DEATH_CAM(System.Boolean)">
            <summary>
            Used for DUELING_MANAGE_DEATH_CAMERA - Initializing death camera
            _SET_P* - _SET_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x1204EB53A5FBC63D">
            <summary>
            Used for DUELING_LOCK_CAMERA_CONTROLS_THIS_FRAME: Disabling look/aim controls
            _IS_SC(REEN_)* (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._CREATE_KILL_CAM(System.Int32)">
            <summary>
            Creates Kill Cam for specified Ped Handle
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0xA8BA2E0204D8486F">
            <summary>
            NPLOI_UPDATE__GUN_SPINNING_PREVIEW - Adjusting Camera / Ped Reset Flags This Frame
            _DISABLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0xC3742F1FDF0A6824">
            <summary>
            Camera will be or is running
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM._0x595550376B7EA230(System.String)">
            <summary>
            Checks data related to Cinematic Cam Locations, if the check fails, the location is being loaded using 0x1B3C2D961F5FC0E1.
            </summary>
        </member>
        <member name="M:RDR2.Native.CAM.CINEMATIC_LOCATION_OVERRIDE_TARGET_ENTITY_THIS_UPDATE(System.String,System.Int32)">
            <summary>
            Only used in R* Script fm_mission_controller
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK.SET_CLOCK_TIME(System.Int32,System.Int32,System.Int32)">
            <summary>
            SET_CLOCK_TIME(12, 34, 56);
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK.GET_CLOCK_HOURS">
            <summary>
            Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK.GET_CLOCK_MINUTES">
            <summary>
            Gets the current ingame clock minute.
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK.GET_CLOCK_SECONDS">
            <summary>
            Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in RDR is only 48 minutes in real life.
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK._GET_SECONDS_SINCE_BASE_YEAR">
            <summary>
            Base year is 1898.
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK.GET_CLOCK_DAY_OF_WEEK">
            <summary>
            Gets the current day of the week.
            
            0: Sunday
            1: Monday
            2: Tuesday
            3: Wednesday
            4: Thursday
            5: Friday
            6: Saturday
            </summary>
        </member>
        <member name="M:RDR2.Native.CLOCK._GET_POSIX_TIME_STRUCT(System.UInt64*)">
            <summary>
            Same as GET_POSIX_TIME except that it takes a single pointer to a struct.
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._COLLECTABLE_GET_CATEGORY(System.UInt32)">
            <summary>
            Used in Script Function NET_COLLECTABLES_HANDLE_ITEM_ADDED
            Returns collectableCategory Hash
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._0x755901C7598B97BC(System.UInt32,System.Int32)">
            <summary>
            Returns p2 (index?) for 0xB9020EC89C07DF04
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._0xB9020EC89C07DF04(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Accepts more hashes than 0xCC644BC1DD655269
            Such as: CAROLINA_PARAKEETS, DINO_BONES, EGRET_FEATHERS, ...
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._0x6BAB7ACED1017204(System.UInt32,System.Int32)">
            <summary>
            Params: collectableCategory = WEEKLY_COLLECTABLES
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._0x61BEFBA3CE7A3BC8(System.UInt32,System.Int32)">
            <summary>
            Params: collectableCategory = WEEKLY_COLLECTABLES
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION.COLLECTABLE_GET_CATEGORY_ITEM_SET_BUY_AWARD(System.UInt32,System.UInt32)">
            <summary>
            collectableCategory: ANTIQUE_BOTTLES, BIRD_EGGS, ARROWHEADS, FAMILY_HEIRLOOMS, WILD_FLOWERS, COINS, LOST_JEWELRY_RINGS, LOST_JEWELRY_BRACELETS, LOST_JEWELRY_EARRINGS, LOST_JEWELRY_NECKLACES, TAROT_CARDS_CUPS, TAROT_CARDS_PENTACLES, TAROT_CARDS_SWORDS, TAROT_CARDS_WANDS, FOSSILS_COMMON, FOSSILS_UNCOMMON, FOSSILS_RARE
            </summary>
        </member>
        <member name="M:RDR2.Native.COLLECTION._0x9ADEE485726025D4(System.UInt32)">
            <summary>
            Params: collectableCategory = WEEKLY_COLLECTABLES
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPANION._0xDEB369F6AD168C58(System.Int32,System.Int32)">
            <summary>
            Used for Script Function NET_FETCH_CLIENT_ACTIVATE_COMAPNION_ANALYSIS: Hiding! Ped
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPENDIUM._0x725D52F21A5E9E22(System.UInt32)">
            <summary>
            _COMPENDIUM_GET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPENDIUM._0x729D52461AEA9E22(System.UInt32)">
            <summary>
            _COMPENDIUM_GET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPENDIUM.COMPENDIUM_HERB_PICKED(System.UInt32,System.Single,System.Single,System.Single)">
            <summary>
            herbType: https://alloc8or.re/rdr3/doc/enums/eHerbType.txt
            Vector3: Player Location
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPENDIUM.COMPENDIUM_HORSE_WILD_BROKEN(System.Int32)">
            <summary>
            NET_PLAYER_HORSE_PROCESS_EVENT_HORSE_BREAKING
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPENDIUM.COMPENDIUM_HORSE_OBSERVED(System.Int32,System.Boolean)">
            <summary>
            Only gets called if bSetObserved is true and animalType is matching
            </summary>
        </member>
        <member name="M:RDR2.Native.CRASHLOG._0xDA05310EA94DC8C6(System.String,System.String)">
            <summary>
            unused = true
            </summary>
        </member>
        <member name="M:RDR2.Native.DATABINDING._DATABINDING_ADD_DATA_CONTAINER(System.UInt32,System.String)">
            <summary>
            Returns entryId Hash
            </summary>
        </member>
        <member name="M:RDR2.Native.DATABINDING._0xBFC83DA249BEFCC9(System.UInt64,System.UInt32,System.UInt64)">
            <summary>
            _DATABINDING_WRITE_DATA_*
            </summary>
        </member>
        <member name="M:RDR2.Native.DATABINDING._0x05AC9E1E02975AFB(System.UInt64,System.String,System.Single)">
            <summary>
            _DATABINDING_WRITE_DATA_*
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.DATAFILE_WATCH_REQUEST_ID(System.Int32)">
            <summary>
            Adds the given request ID to the watch list.
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.DATAFILE_UGC_SELECT_DATA(System.UInt64,System.Int32,System.UInt64)">
            <summary>
            Reloops value returned by UGC_QUERY_GET_CONTENT_NUM
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.DATADICT_GET_TYPE(System.UInt64*,System.String)">
            <summary>
            Types:
            1 = Boolean
            2 = Integer
            3 = Float
            4 = String
            5 = Vector3
            6 = Object
            7 = Array
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.DATAARRAY_GET_TYPE(System.UInt64*,System.Int32)">
            <summary>
            Types:
            1 = Boolean
            2 = Integer
            3 = Float
            4 = String
            5 = Vector3
            6 = Object
            7 = Array
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_LOAD_FILE_HASH(System.UInt32)">
            <summary>
            LOAD_PARSEDDATA_FILE_FAILSAFE_HASH
            Returns parseddata script fileHandle
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._0x3168BA5D6DECE323">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.PARSEDDATA_RQ_FILLOUT_NODE(System.Int32*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_DATA_NODE_INDEX
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE.PARSEDDATA_RQ_FILLOUT_HASH(System.UInt32*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_HASH
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_RQ_FILLOUT_STRING_63(System.String,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_STRING
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_RQ_FILLOUT_VECTOR(RDR2.Math.Vector3*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_VECTOR
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_RQ_FILLOUT_FLOAT(System.Single*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_FLOAT
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_RQ_FILLOUT_INT(System.Int32*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_INT
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_RQ_FILLOUT_BOOL(System.Boolean*,System.UInt64*)">
            <summary>
            Old name: _DATAFILE_GET_BOOL
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_GET_FILE(System.UInt64*)">
            <summary>
            Opens file.
            </summary>
        </member>
        <member name="M:RDR2.Native.DATAFILE._PARSEDDATA_GET_ENTRIES(System.UInt64*)">
            <summary>
            Returns false when there are no entries.
            </summary>
        </member>
        <member name="M:RDR2.Native.DEBUG._0xACF9CB705BEFA8CB">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.DEBUG._0xA8D970D8A72640A6">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.DEBUG.GET_GAME_VERSION_NAME">
            <summary>
            Return example: 1207.69_dev_pc, 1436.28_dev_live_tu
            
            Old name: _GET_GAME_BUILD_STRING
            </summary>
        </member>
        <member name="M:RDR2.Native.DECORATOR.DECOR_SET_BOOL(System.Int32,System.String,System.Boolean)">
            <summary>
            This function sets metadata of type bool to specified entity.
            
            </summary>
        </member>
        <member name="M:RDR2.Native.DECORATOR.DECOR_SET_INT(System.Int32,System.String,System.Int32)">
            <summary>
            Sets property to int.
            </summary>
        </member>
        <member name="M:RDR2.Native.DECORATOR.DECOR_EXIST_ON(System.Int32,System.String)">
            <summary>
            Returns whether or not the specified property is set for the entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.DECORATOR.DECOR_IS_REGISTERED_AS_TYPE(System.String,System.Int32)">
            <summary>
            type: see DECOR_REGISTER
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.DOES_ENTITY_EXIST(System.Int32)">
            <summary>
            Checks if the Entity exists
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x3EC28DA1FFAC9DDD(System.Int32,System.Int32,System.UInt64,System.UInt64)">
            <summary>
            Used in Script Function DUELING_DID_PLAYER_DISARM_OPPONENT
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(System.Int32,System.Int32,System.Int32)">
            <summary>
            Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_COORDS(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets the current coordinates for a specified entity.
            `entity` = The entity to get the coordinates from.
            `alive` = Unused by the game, potentially used by debug builds in order to assert whether or not an entity was alive.
            
            If entity is a ped and it's in a vehicle or on a mount the coords of that entity are returned. Set 'realCoords' to true when you need the true ped coords.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_FORWARD_VECTOR(System.Int32)">
            <summary>
            Gets the entity's forward vector.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_FORWARD_X(System.Int32)">
            <summary>
            Gets the X-component of the entity's forward vector.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_FORWARD_Y(System.Int32)">
            <summary>
            Gets the Y-component of the entity's forward vector.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_HEADING(System.Int32)">
            <summary>
            Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_ENTITY_HEALTH_FLOAT(System.Int32)">
            <summary>
            Returns (CUR_HEALTH / MAX_HEALTH)
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._CHANGE_ENTITY_HEALTH(System.Int32,System.Single,System.Int32,System.UInt32)">
            <summary>
            Alters entity's health by 'amount'. Can be negative (to drain health).
            In the scripts entity2 and weaponHash are unused (zero).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_MODEL(System.Int32)">
            <summary>
            Returns the model hash from the entity
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_PED_ANIMAL_TYPE(System.Int32)">
            <summary>
            Returns the ped's animal type hash: https://alloc8or.re/rdr3/doc/enums/eAnimalType.txt
            Combine this with GET_STRING_FROM_HASH_KEY to display localized entity names
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Offset values are relative to the entity.
            
            x = left/right
            y = forward/backward
            z = up/down
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_ROLL(System.Int32)">
            <summary>
            Displays the current ROLL axis of the entity [-180.0000/180.0000+]
            (Sideways Roll) such as a vehicle tipped on its side
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_SPEED(System.Int32)">
            <summary>
            Result is in meters per second (m/s)
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_OBJECT_INDEX_FROM_ENTITY_INDEX(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_PED_INDEX_FROM_ENTITY_INDEX(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_WORLD_POSITION_OF_ENTITY_BONE(System.Int32,System.Int32)">
            <summary>
            Returns the coordinates of an entity-bone.
            https://github.com/femga/rdr3_discoveries/tree/master/boneNames
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x5E214112806591EA(System.Int32,System.Int32)">
            <summary>
            Attaches scenario to bone with an offset
            _GET_I* - _GET_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_TYPE(System.Int32)">
            <summary>
            Returns entityType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityType
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.IS_ENTITY_AT_COORD(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Checks if entity is within x/y/zSize distance of x/y/z. 
            
            Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.IS_ENTITY_AT_ENTITY(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Checks if entity1 is within the box defined by x/y/zSize of entity2.
            
            Last three parameters are almost always p5 = 0, p6 = 1, p7 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.IS_ENTITY_IN_ANGLED_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.UInt64)">
            <summary>
            Creates a spherical cone at origin that extends to surface with the angle specified. Then returns true if the entity is inside the spherical cone
            
            Angle is measured in degrees.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_SUBMERGED_LEVEL(System.Int32)">
            <summary>
            Get how much of the entity is submerged.  1.0f is whole entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0xFF9965C47FA404DA(System.Int32,System.Boolean)">
            <summary>
            SET_ENTITY_LO*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT(System.Int32,System.UInt32)">
            <summary>
            Sets the loot table an entity will carry. Returns true if loot table has been successfully set. Returns false if entity is not a ped or object.
            https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/loot_rewards.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_SCRIPT_OVERRIDE_ENTITY_LOOT_TABLE_PERMANENT(System.Int32,System.UInt32*)">
            <summary>
            Returns false if entity is not a ped or object.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_CARRIABLE_ENTITY_STATE(System.Int32)">
            <summary>
            enum eCarriableState
            {
            	CARRIABLE_STATE_NONE,
            	CARRIABLE_STATE_TRANSITIONING_TO_HOGTIED,
            	CARRIABLE_STATE_CARRIABLE_INTRO,
            	CARRIABLE_STATE_CARRIABLE,
            	CARRIABLE_STATE_BEING_PICKED_UP_FROM_GROUND,
            	CARRIABLE_STATE_CARRIED_BY_HUMAN,
            	CARRIABLE_STATE_BEING_PLACED_ON_GROUND,
            	CARRIABLE_STATE_CARRIED_BY_MOUNT,
            	CARRIABLE_STATE_BEING_PLACED_ON_MOUNT,
            	CARRIABLE_STATE_BEING_PICKED_UP_FROM_MOUNT,
            	CARRIABLE_STATE_BEING_CUT_FREE,
            	CARRIABLE_STATE_BEING_PLACED_ON_GROUND_ESCAPE,
            	CARRIABLE_STATE_BEING_PLACED_IN_VEHICLE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_OPTIMAL_CARRY_CONFIG(System.Int32,System.Int32)">
            <summary>
            Valid indices: 0 - 3
            Index 1 always returns a `hogtied` config, doesn't matter the entity.
            It's for humans only and the ped must be resurrected first if it's dead.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_ENTITY_CARRY_CONFIG(System.Int32)">
            <summary>
            Returns zero if the entity is not a carriable
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_CARRIABLE_FROM_ENTITY(System.Int32)">
            <summary>
            Returns a hash of an entity's name. (Alternative Name: _GET_ENTITY_PROMPT_NAME_HASH)
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._SET_ENTITY_CARCASS_TYPE(System.Int32,System.UInt32)">
            <summary>
            Changes type and quality of skins
            type hashes: https://pastebin.com/C1WvQjCy
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x383F64263F946E45(System.Int32*,System.Int32,System.Int32,System.Int32,System.UInt64,System.Int32)">
            <summary>
            Used when checking if ped is in water
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_ENTITY_CARRYING_FLAG(System.Int32,System.Int32)">
            <summary>
            flagId: see _SET_ENTITY_CARRYING_FLAG
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._SET_ENTITY_CARRYING_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flagId: https://github.com/femga/rdr3_discoveries/tree/master/AI/CARRYING_FLAGS
            https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CCarryingFlags__Flags
            
            enum eCarryingFlag
            {
            	CARRYING_FLAG_CAN_BE_CUT_FREE = 1,
            	CARRYING_FLAG_CAN_BE_CARRIED_ON_FOOT = 2,
            	CARRYING_FLAG_CAN_BE_DROPPED = 4,
            	CARRYING_FLAG_CAN_BE_CARRIED_WHEN_DEAD = 7,
            	CARRYING_FLAG_CAN_CARRY_ANYTHING = 9,
            	CARRYING_FLAG_DISABLE_PROMPT_LOS_CHECKS = 19,
            	CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION = 23,
            	CARRYING_FLAG_PICKUPS_IGNORE_HEIGHT_RESTRICTIONS = 26,
            	CARRYING_FLAG_CLEAN_UP_WHEN_NOT_CARRIED = 27,
            	CARRYING_FLAG_BLOCK_KNOCK_OFF_PED_VARIATIONS_FROM_CARRIABLE_INTERACTIONS = 29,
            	CARRYING_FLAG_HIT_WHEN_CARRIABLE = 31,
            	CARRYING_FLAG_DISABLE_CARRIABLE_INTERACTIONS_ON_THIS_MOUNT = 34,
            	CARRYING_FLAG_FORCE_HIDE_PROMPT_GROUP = 37,
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0xC3ABCFBC7D74AFA5(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns BOOL in ida
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x371D179701D9C082(System.Int32)">
            <summary>
            Called if entity is in water and submerged level is larger than 1f. If CARRYING_FLAG_FORCE_ALLOW_WARP_TO_SAFE_GROUND_LOCATION is true, it gets disabled as well.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            p6/relative - makes the xyz force not relative to world coords, but to something else
            p7/highForce - setting false will make the force really low
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.ATTACH_ENTITY_TO_ENTITY(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Attaches entity1 to bone (boneIndex) of entity2.
            
            boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
            https://github.com/femga/rdr3_discoveries/tree/master/boneNames
            
            useSoftPinning - if set to false attached entity will not detach when fixed
            collision - controls collision between the two entities (FALSE disables collision).
            isPed - pitch doesn't work when false and roll will only work on negative numbers (only peds)
            vertexIndex - position of vertex
            fixedRot - if false it ignores entity vector
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.DELETE_ENTITY(System.Int32*)">
            <summary>
            Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._DELETE_ENTITY_2(System.Int32*)">
            <summary>
            Must be called from a background script, otherwise it will do nothing.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._IS_ENTITY_FROZEN(System.Int32)">
            <summary>
            Getter for FREEZE_ENTITY_POSITION
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_SHOULD_FREEZE_WAITING_ON_COLLISION(System.Int32,System.Boolean)">
            <summary>
            Old name: _SET_ENTITY_CLEANUP_BY_ENGINE
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_AS_MISSION_ENTITY(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_AS_NO_LONGER_NEEDED(System.Int32*)">
            <summary>
            Marks the specified entity (ped, vehicle or object) as no longer needed.
            Entities marked as no longer needed, will be deleted as the engine sees fit.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_PED_AS_NO_LONGER_NEEDED(System.Int32*)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_VEHICLE_AS_NO_LONGER_NEEDED(System.Int32*)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_OBJECT_AS_NO_LONGER_NEEDED(System.Int32*)">
            <summary>
            This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._DOES_THREAD_OWN_THIS_ENTITY(System.Int32)">
            <summary>
            Returns true if calling script owns specified entity
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0xC0EDEF16D90661EE(System.Int32,System.Single)">
            <summary>
            SET_ENTITY_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(System.Int32,System.Boolean)">
            <summary>
            Sets whether the entity can be targeted without being in line-of-sight.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_COORDS_NO_OFFSET(System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Axis - Invert Axis Flags
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_HEALTH(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the entity's health. healthAmount sets the health value to that, and sets the maximum health core value. Setting healthAmount to 0 will kill the entity. entityKilledBy parameter can also be 0
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_INVINCIBLE(System.Int32,System.Boolean)">
            <summary>
            Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0xAF7F3099B9FEB535(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            SET_ENTITY_LO*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._SET_ENTITY_THREAT_TIER(System.Int32,System.Int32,System.Boolean)">
            <summary>
            tier: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEntityThreatTier
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.HAS_COLLISION_LOADED_AROUND_POSITION(System.Single,System.Single,System.Single)">
            <summary>
            Old name: _HAS_COLLISION_LOADED_AT_COORDS
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_PROOFS(System.Int32,System.Int32,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/AI/ENTITY_PROOFS
            BOOL p2: handles an additional special proofs flag, so it simply indicates whether it should be enabled or disabled, not sure what exactly it proofs the entity from though
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_ENTITY_PROOFS(System.Int32)">
            <summary>
            Note: this native was removed in 1232 but added back in 1311
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_VELOCITY(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_LOD_DIST(System.Int32,System.Int32)">
            <summary>
            LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.GET_ENTITY_LOD_DIST(System.Int32)">
            <summary>
            Returns the LOD distance of an entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_ALPHA(System.Int32,System.Int32,System.Boolean)">
            <summary>
            skin - everything alpha except skin
            Set entity alpha level. Ranging from 0 to 255 but changes occur after every 20 percent (after every 51).
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x37B01666BAE8F7EF(System.Int32)">
            <summary>
            Seems to return true if entity is burned / scorched
            _GET_ENTITY_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.CREATE_MODEL_SWAP(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Only works with objects!
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.SET_ENTITY_NOWEAPONDECALS(System.Int32,System.Boolean)">
            <summary>
            Old name: _SET_ENTITY_DECALS_DISABLED
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._SEARCH_BUILDING_POOL_FOR_ENTITY_WITH_THIS_MODEL(System.UInt32)">
            <summary>
            Alternative Name: _GET_ENTITY_FROM_MAP_OBJECT; You can get existing objects and manipulate them using this native.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._GET_ENTITY_BY_DOORHASH(System.UInt32,System.Int32)">
            <summary>
            Params: p1 = 0 in R* Scripts (GET_DOOR_ENTITY_FROM_ID)
            https://github.com/femga/rdr3_discoveries/blob/master/doorHashes/doorhashes.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x8E46E18AA828334F(System.Int32,System.String,System.String)">
            <summary>
            Used in Script Function GENERIC_ITEM_HAS_ANIM_COMPLETED
            _GET_ENTITY_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0xDF8E49EA89A01DB1(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY.PLAY_ENTITY_ANIM(System.Int32,System.String,System.String,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.UInt64)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/animations
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._SET_ENTITY_ANIM_CURRENT_TIME(System.Int32,System.String,System.String,System.Single)">
            <summary>
            https://gfycat.com/amazingmiserlyamericanquarterhorse
            </summary>
        </member>
        <member name="M:RDR2.Native.ENTITY._0x5826EFD6D73C4DE5(System.Int32)">
            <summary>
            _REMOVE_DECALS_* - _REMOVE_FORCED*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT.ADD_SHOCKING_EVENT_AT_POSITION(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT.ADD_SHOCKING_EVENT_FOR_ENTITY(System.UInt32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT.IS_SHOCKING_EVENT_IN_SPHERE(System.UInt32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE_IN_AREA(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT.REMOVE_ALL_SHOCKING_EVENTS_OF_TYPE(System.UInt32,System.Boolean)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x36D0F2BA2C0D9BDE(System.Int32,System.Int32)">
            <summary>
            _ADD* (_ADD_SHOCKING_EVENT_* ?)
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x7C511E91738A0828(System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Only used in R* SP Scripts
            Hash only used in R* Script mob3.ysc: ROBBERY
            _ADD_PED*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0xB6F4825153920582">
            <summary>
            _S* (_SUPPRESS_EVENTS_NEXT_FRAME?)
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x4B2B1A891D437CA7(System.Single)">
            <summary>
            Only used in R* SP Script coachrobberies
            _SET_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x9520175B35E2268D(System.Int32,System.Boolean)">
            <summary>
            _SET_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x18E93EBFC1FCFA48(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Only used in R* SP Script beat_rat_infestation and homeinvasion
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x56B3410626A473E7(System.UInt64)">
            <summary>
            Only used in R* SP Script beat_rat_infestation
            Params: p0 = value returned by 0x18E93EBFC1FCFA48
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._ADD_MODEL_TO_EVENT_MONITOR(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Models used in the scripts: P_REGISTER05X, P_REGISTER06X, P_REGISTER03X, PLAYER_ZERO, PLAYER_THREE, A_C_HORSE_MORGAN_FLAXENCHESTNUT
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0xAD17A18215DD23D6(System.Int32,System.Int32,System.Int32)">
            <summary>
            Might return time since some (?) event.
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._EVENT_GET_RECENT_EVENT(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns eventType
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x797B3D4D92E56094(System.String,System.UInt32)">
            <summary>
            _IS_EVENT
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x1D1B448D719415AB(System.Int32)">
            <summary>
            _GET*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x83D43F0FD5276E4D(System.Int32,System.Int32)">
            <summary>
            _GET*
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0xE28D7FC9FD32ABEB(System.Int32,System.UInt32,System.Int32)">
            <summary>
            HAS_ACTOR_RECEIVED_TRACKED_EVENT_THAT_SHOULD_ALERT - iTimeSinceEvent >= iTimeLimitMS
            </summary>
        </member>
        <member name="M:RDR2.Native.EVENT._0x1A5C5D350068A673(System.Int32,System.Int32)">
            <summary>
            AGGRO_CHECK_PROPERTY_DAMAGE: Property damage found with event
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.START_SCRIPT_FIRE(System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.String,System.Single,System.Int32)">
            <summary>
            Starts a fire:
            
            xyz: Location of fire
            maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
            isGasFire: Whether or not the fire is powered by gasoline.
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.ADD_EXPLOSION(System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/graphics/explosions
            
            explosionType:
            enum eExplosionTag
            {
            	EXP_TAG_DONTCARE = -1,
            	EXP_TAG_GRENADE,
            	EXP_TAG_STICKYBOMB,
            	EXP_TAG_MOLOTOV,
            	EXP_TAG_MOLOTOV_VOLATILE,
            	EXP_TAG_HI_OCTANE,
            	EXP_TAG_CAR,
            	EXP_TAG_PLANE,
            	EXP_TAG_PETROL_PUMP,
            	EXP_TAG_DIR_STEAM,
            	EXP_TAG_DIR_FLAME,
            	EXP_TAG_DIR_WATER_HYDRANT,
            	EXP_TAG_BOAT,
            	EXP_TAG_BULLET,
            	EXP_TAG_SMOKEGRENADE,
            	EXP_TAG_BZGAS,
            	EXP_TAG_GAS_CANISTER,
            	EXP_TAG_EXTINGUISHER,
            	EXP_TAG_TRAIN,
            	EXP_TAG_DIR_FLAME_EXPLODE,
            	EXP_TAG_VEHICLE_BULLET,
            	EXP_TAG_BIRD_CRAP,
            	EXP_TAG_FIREWORK,
            	EXP_TAG_TORPEDO,
            	EXP_TAG_TORPEDO_UNDERWATER,
            	EXP_TAG_LANTERN,
            	EXP_TAG_DYNAMITE,
            	EXP_TAG_DYNAMITESTACK,
            	EXP_TAG_DYNAMITE_VOLATILE,
            	EXP_TAG_RIVER_BLAST,
            	EXP_TAG_PLACED_DYNAMITE,
            	EXP_TAG_FIRE_ARROW,
            	EXP_TAG_DYNAMITE_ARROW,
            	EXP_TAG_PHOSPHOROUS_BULLET,
            	EXP_TAG_LIGHTNING_STRIKE,
            	EXP_TAG_TRACKING_ARROW,
            	EXP_TAG_POISON_BOTTLE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.ADD_OWNED_EXPLOSION(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE._0xB7DF150605EEDC9B(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            _ADD_EXPLOSION_*(ON ENTITY?)
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.ADD_EXPLOSION_WITH_USER_VFX(System.Single,System.Single,System.Single,System.Int32,System.UInt32,System.Single,System.Boolean,System.Boolean,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            Change explosionFx (Visual Effect) for specified explosionType
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.IS_EXPLOSION_IN_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.IS_EXPLOSION_ACTIVE_IN_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.IS_EXPLOSION_IN_SPHERE(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.IS_EXPLOSION_IN_ANGLED_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE._IS_EXPLOSION_IN_VOLUME(System.Int32,System.Int32)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE.GET_OWNER_OF_EXPLOSION_IN_ANGLED_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            explosionType: see ADD_EXPLOSION
            </summary>
        </member>
        <member name="M:RDR2.Native.FIRE._0x24DB6B9F2B719043(System.Single)">
            <summary>
            Only used in R* SP Related Camp Scripts
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.FIRE._IS_PED_SHOCKING_EVENT_ACTIVE(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.FLOCK.GET_ANIMAL_TUNING_FLOAT_PARAM(System.Int32,System.Int32)">
            <summary>
            index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningFloats
            https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_FLOAT_PARAMS
            </summary>
        </member>
        <member name="M:RDR2.Native.FLOCK.GET_ANIMAL_TUNING_BOOL_PARAM(System.Int32,System.Int32)">
            <summary>
            index: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eAnimalTuningBools
            https://github.com/femga/rdr3_discoveries/tree/master/AI/ANIMAL_TUNING_BOOL_PARAMS
            </summary>
        </member>
        <member name="M:RDR2.Native.FLOCK._0xF2CCA7B68CFAB2B9(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            species: SPECIES_BIRD_CROW
            </summary>
        </member>
        <member name="M:RDR2.Native.FLOCK._GET_ANIMAL_IS_WILD(System.Int32)">
            <summary>
            Ped (horse) will run away from players and mounting will trigger them to buck until disabled.
            Used for: REL_DOMESTICATED_ANIMAL
            </summary>
        </member>
        <member name="M:RDR2.Native.FLOCK._GET_ANIMAL_RARITY(System.Int32)">
            <summary>
            enum eAnimalRarityLevel
            {
            	ARL_COMMON,
            	ARL_RARE,
            	ARL_LEGENDARY,
            	ARL_NUMRARITYLEVELS
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.FLOCK._SET_ANIMAL_RARITY(System.Int32,System.Int32)">
            <summary>
            rarityLevel: see _GET_ANIMAL_RARITY
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(System.String)">
            <summary>
            contentId: returned by NETWORK::_UGC_QUERY_GET_CREATOR_PHOTO(uVar0, 0, sParam3)
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x0D5B19C34068FEE7(System.UInt64)">
            <summary>
            Gets set to 1 when GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO = PHOTO_OPERATION_SUCCEEDED
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO">
            <summary>
            0 = succeeded
            1 = getting status
            2 = failed
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.BEGIN_CREATE_LOW_QUALITY_COPY_OF_PHOTO(System.Int32)">
            <summary>
            Called together with FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.GET_STATUS_OF_CREATE_LOW_QUALITY_COPY_OF_PHOTO(System.UInt64)">
            <summary>
            Old name: _GET_STATUS_OF_DRAW_LOW_QUALITY_PHOTO
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._GET_MAX_NUMBER_OF_LOCAL_PHOTOS">
            <summary>
            Always returns 200.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.GET_STATUS_OF_SORTED_LIST_OPERATION">
            <summary>
            0 = succeeded
            1 = getting status
            2 = failed
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_LIGHTS_COLOR_FOR_ENTITY(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            https://gfycat.com/meagerfaireyra
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_LIGHTS_TYPE_FOR_ENTITY(System.Int32,System.Int32)">
            <summary>
            type must be less than or equal to 20
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._DRAW_MARKER(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/markers/marker_types.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_CHECKPOINT_RGBA(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the checkpoint color.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_CHECKPOINT_RGBA2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the checkpoint icon color.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.DRAW_RECT(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle on the screen.
            
            -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
            
            -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
            
            -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
            
            -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
            
            -R: Red part of the color. (0-255)
            
            -G: Green part of the color. (0-255)
            
            -B: Blue part of the color. (0-255)
            
            -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(System.Boolean)">
            <summary>
            Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for draw commands that are used with a world render target.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_SCRIPT_GFX_DRAW_ORDER(System.Int32)">
            <summary>
            Sets the draw order for script draw commands.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.DRAW_SPRITE(System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws a 2D sprite on the screen.
            
            Parameters:
            textureDict - Name of texture dictionary to load texture from
            
            textureName - Name of texture to load from texture dictionary
            
            screenX/Y - Screen offset (0.5 = center)
            scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
            
            heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
            
            red,green,blue - Sprite color (default = 255/255/255)
            
            alpha - opacity level
            
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_TV_AUDIO_FRONTEND(System.Boolean)">
            <summary>
            Probably changes tvs from being a 3d audio to being "global" audio
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.GET_SCREEN_RESOLUTION(System.Int32*,System.Int32*)">
            <summary>
            Hardcoded to always set x to 1280 and y to 720.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_ARTIFICIAL_LIGHTS_STATE(System.Boolean)">
            <summary>
            Does not affect weapons, particles, fire/explosions, flashlights or the sun.
            When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
            
            state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x1A9F09AB458D49C6(System.Boolean)">
            <summary>
            Used in shop scripts for CATALOG_BOOK
            false = Normal -> [CATALOG_BOOK_SHUTDOWN]
            true = Trees flickering? -> [CATALOG_BOOK_OPEN]
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.CREATE_TRACKED_POINT">
            <summary>
            Creates a tracked point, useful for checking the visibility of a 3D point on screen.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xDFE332A5DA6FE7C9(System.Int32)">
            <summary>
            Returns iNumPixels, iPixelsVisible
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_GRASS_CULL_SPHERE(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Returns handle to be used with REMOVE_GRASS_CULL_SPHERE
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ADD_VEG_MODIFIER_ZONE(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds Vegetation Blocking Zone, Added Snow Flattening veg mod Zone
            Returns veg modifier handle
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.ADD_VEG_MODIFIER_SPHERE(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns veg modifier handle
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._GENERATE_SWATCH_TEXTURE_DIRECTLY(System.Int32,System.UInt64)">
            <summary>
            Example: https://pastebin.com/tTgpER9A
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._GENERATE_SWATCH_TEXTURE(System.Int32,System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Example:
            local hash = GetHashKey("CLOTHING_ITEM_M_EYES_001_TINT_001")
            _GENERATE_SWATCH_TEXTURE(0, hash, 0, true)
            metapedType: see 0xEC9A1261BF0CE510
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(System.Boolean)">
            <summary>
            When this is set to ON, shadows only draw as you get nearer.
            
            When OFF, they draw from a further distance.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(System.String)">
            <summary>
            Possible values:
            "CSM_ST_POINT"
            "CSM_ST_LINEAR"
            "CSM_ST_BOX3x3"
            "CSM_ST_BOX4x4"
            "CSM_ST_DITHER2_LINEAR"
            "CSM_ST_CUBIC"
            "CSM_ST_POISSON16"
            "CSM_ST_SOFT8"
            "CSM_ST_SOFT16"
            "CSM_ST_SOFT32"
            "CSM_ST_DITHER16_RPDB"
            "CSM_ST_POISSON16_RPDB_GNORM"
            "CSM_ST_HIGHRES_BOX4x4"
            "CSM_ST_ESM"
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.RESET_ADAPTATION(System.Int32)">
            <summary>
            Sets an unknown value related to timecycles.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_HIDOF_OVERRIDE(System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Old name: _SET_HIDOF_ENV_BLUR_PARAMS
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x21F00E08CBB5F37B(System.String)">
            <summary>
            Params: component - used in odriscolls1 and sean1 R* SP Script: COMPONENT_BINOCULARS_SCOPE01
            Triggers the binocular scaleform
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x5AC6E0FA028369DE">
            <summary>
            Closes the the binocular scaleform
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.START_PARTICLE_FX_NON_LOOPED_AT_COORD(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_non_looped.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.START_PARTICLE_FX_LOOPED_AT_COORD(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/ptfx/ptfx_assets_looped.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_PARTICLE_FX_LOOPED_UPDATE_DISTANT_SMOKE(System.Int32,System.Single)">
            <summary>
            _SET_PARTICLE_FX_LOOPED_FA* - _SET_PARTICLE_FX_LOOPED_OF*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.USE_PARTICLE_FX_ASSET(System.String)">
            <summary>
            fxName: see data_0/data/effects/ptfx/fxlists/
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.RESET_PARTICLE_FX_OVERRIDE(System.String)">
            <summary>
            Resets the effect of SET_PARTICLE_FX_OVERRIDE
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x4FB67D172C4476F3(System.Int32,System.String,System.String,System.Single)">
            <summary>
            p1: AMB_ANN_COAL_CHUTE_DIVE, AMB_ANN_COAL_CHUTE
            p2: EMIT
            p3: either 0.0f or 1.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_PARTICLE_FX_AMBIENT_COLOUR(System.Int32,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Related to Campfires.
            p1: AMB_BONFIRE_MP, AMB_CAMPFIRE_LRG_MP
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xD1472AFF30C103D6(System.Single)">
            <summary>
            Only used in R* Script nb_stalking_hunter
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x4046493D2EEACA0E">
            <summary>
            _DISABLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_PICKUP_LIGHT(System.Int32,System.Boolean)">
            <summary>
            https://imgur.com/a/I2swSDJ
            
            Old name: _SET_PICKUP_OBJECT_GLOW_ENABLED
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_PEARLESCENT_FX_ENABLED(System.Int32,System.Boolean)">
            <summary>
            Enables/disables a kind of 'shiny' effect on metals.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.REMOVE_DECALS_IN_RANGE(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ADD_BLOOD_POOL(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            https://i.imgur.com/ULQU9US.jpg
            More rounded and small puddle
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ADD_BLOOD_POOL_2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            https://i.imgur.com/rPITUCV.jpg
            More customizable and more like quadrants
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ADD_BLOOD_POOLS_FOR_PED(System.Int32)">
            <summary>
            Creates blood pools for the given ped in some interval for a few seconds.
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xB032C085D9A03907">
            <summary>
            _SET_D* or _SET_E*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xFB680A9B33D0EDBE(System.Boolean)">
            <summary>
            _DISABLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x41F88A85A579A61D(System.Single)">
            <summary>
            Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._BLOOD_TRAIL_FOR_WAYPOINT(System.String,System.Single)">
            <summary>
            p1: 0.3f in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x812C1563185C6FB2">
            <summary>
            Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
            _ENABLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x4BD66B4E3427689B(System.String)">
            <summary>
            Used in CREATE_BEZIER_BLOOD_TRAIL_OF_TYPE
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x1460B644397453EB">
            <summary>
            _RESET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._DISABLE_FAR_ARTIFICIAL_LIGHTS(System.Boolean)">
            <summary>
            Only used in guama1 R* Script
            Disables lod/distant lights when BOOL is set to true
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xC06F2F45A73EABCD(System.Int32)">
            <summary>
            Used in NET_CAMP_SPIRIT_ANIMAL_CLEAR_ANIMAL_VISIBILITY
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.SET_TIMECYCLE_MODIFIER(System.String)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/timecycles
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._GET_MODIFIED_VISIBILITY_DISTANCE">
            <summary>
            _GET_C* - _GET_E*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.ENABLE_MOON_CYCLE_OVERRIDE(System.Single)">
            <summary>
            Old name: _ENABLE_EXTRA_TIMECYCLE_MODIFIER_STRENGTH
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.IS_TVSHOW_CURRENTLY_PLAYING(System.UInt32)">
            <summary>
            Old name: _IS_TV_PLAYLIST_ITEM_PLAYING
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.ENABLE_MOVIE_SUBTITLES(System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS.ANIMPOSTFX_PLAY(System.String)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/animpostfx
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x26DD2FB0A88CC412(System.String,System.String,System.UInt64,System.UInt64)">
            <summary>
            effectName2, p2 and p3 are unused
            
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ANIMPOSTFX_SET_STRENGTH(System.String,System.Single)">
            <summary>
            must be called after ANIMPOSTFX_PLAY, strength 0.0f - 1.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ANIMPOSTFX_SET_POTENCY(System.String,System.Int32,System.Single)">
            <summary>
            Health Core Effect Filter Potency: p1 = 1
            Stamina Core Effect Filter Potency: p1 = 2
            Multiple Core Effect Filter Potency: p1 = 3
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xB958D97A0DFAA0C2(System.String)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xA201A3D0AC087C37(System.String)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xFBF161FCFEC8589E(System.String,System.Int32,System.Boolean,System.Boolean*)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._ANIMPOSTFX_GET_STACKHASH(System.String)">
            <summary>
            Known effects: MP_Trans_SceneToPhoto
            MP_Trans_WinLose
            SpectateFilter
            MP_CharacterCreatorPhoto
            MP_Trans_PhotoToScene
            InterrogationHit
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x38D9D50F2085E9B3(System.UInt32)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xC76FC4C2FC5F4405(System.UInt32)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xE75CDDEBF618C8FF(System.UInt32)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x71845905BCCDE781(System.UInt32)">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xFF584F097C17FA8F">
            <summary>
            Returns whether the 'killFX' setting is enabled.
            
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x3DA7A10583A4BEC0">
            <summary>
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xC37792A3F9C90771">
            <summary>
            Doesn't actually return anything.
            
            ANIMPOSTFX_*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xC38B4952B728397A(System.Int32,System.Boolean)">
            <summary>
            Only used in guama1 R* SP Script while spawning the ship
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xFD05B1DDE83749FA(System.String)">
            <summary>
            R* Script spd_agnesdow1: p0 = SPD_AGNES_DOWD_01
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x402E1A61D2587FCD(System.UInt64,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only used in R* SP Script spd_agnesdown1
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x5C9C3A466B3296A8(System.UInt64)">
            <summary>
            Only used in R* SP Script spd_agnesdown1
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_PROXY_INTERIOR_INDEX_ARTIFICIAL_LIGHTS_STATE(System.Int32,System.Boolean)">
            <summary>
            state: false disables artificial interior light sources for specific proxyInteriorIndex
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._GET_PROXY_INTERIOR_INDEX(System.Int32)">
            <summary>
            Returns proxyInteriorIndex
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_CLOUD_POSITION(System.Single,System.Single,System.Single)">
            <summary>
            Only used in finale2, smuggler2, winter4
            _SET_CLOUD_A* - _SET_CLOUD_H*
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0x94B261F1F35293E1(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._0xAF4D239B8903FCBE">
            <summary>
            Used for script function RPG_GLOBAL_STATS__PRIVATE__DEACTIVATE_STAT_FLAG - Inspiration Aura unequip
            </summary>
        </member>
        <member name="M:RDR2.Native.GRAPHICS._SET_SNOW_COVERAGE_TYPE(System.Int32)">
            <summary>
            enum class eSnowCoverageType
            {
            	Primary,
            	Secondary,
            	Xmas,
            	XmasSecondary // since b1232
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.GANG._NETWORK_START_GANG(System.Boolean,System.Int32)">
            <summary>
            openStatus = true -> sets privacyType = 2 (PUBLIC_ADVERTISED)
            openStatus = false -> sets privacyType = 1 (INVITE_ONLY)
            
            campSize: NET_CAMP_SIZE_SMALLEST = 4, NET_CAMP_SIZE_LARGEST = 7
            </summary>
        </member>
        <member name="M:RDR2.Native.GANG._NETWORK_KICK_GANG_MEMBER(System.Int32,System.Int32)">
            <summary>
            banTimeSeconds is 120 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.GANG._NETWORK_REQUEST_GANG_JOIN(System.UInt64)">
            <summary>
            Returns true if join succeeded, false if failed.
            </summary>
        </member>
        <member name="M:RDR2.Native.GANG._0xDA801F7F6A5278D3(System.Int32)">
            <summary>
            _NETWORK_GET_* or _NETWORK_IS_*
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._ENABLE_REDUCED_MENU_TIME_SCALE">
            <summary>
            Enables reduced time scale while menus such as weapon wheel and satchel are open.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._DISABLE_REDUCED_MENU_TIME_SCALE">
            <summary>
            Disables reduced time scale while menus such as weapon wheel and satchel are open.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._ENABLE_HUD_CONTEXT(System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/hud_presets
            Old name: _HIDE_HUD_COMPONENT
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._DISABLE_HUD_CONTEXT(System.UInt32)">
            <summary>
            Old name: _DISPLAY_HUD_COMPONENT
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.BUSYSPINNER_OFF">
            <summary>
            Removes the loading prompt at the bottom right of the screen.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME(System.String,System.Int32,System.Int32)">
            <summary>
            Note: you must use VAR_STRING. Byte code very similar to TEXT_COMMAND_DISPLAY_TEXT in V
            Old name: _GET_TEXT_SUBSTRING
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.GET_FILENAME_FOR_AUDIO_CONVERSATION(System.String)">
            <summary>
            Gets a string literal from a label name.
            
            Old name: _GET_LABEL_TEXT
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.DOES_TEXT_LABEL_EXIST(System.String)">
            <summary>
            Checks if the passed gxt name exists in the game files.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._GET_TEXT_SUBSTRING_2(System.String,System.Int32)">
            <summary>
            Similar to 0x9D7E12EC6A1EE4E5(GET_TEXT_SUBSTRING) but starts at the beginning of the string
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.GET_LENGTH_OF_LITERAL_STRING(System.String)">
            <summary>
            Returns the length of the string passed (much like strlen).
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.GET_STRING_FROM_HASH_KEY(System.UInt32)">
            <summary>
            Returns the label text given the hash.
            
            Old name: _GET_LABEL_TEXT_BY_HASH
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.DISPLAY_HUD(System.Boolean)">
            <summary>
            If Hud should be displayed
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._GET_COLOR_FROM_NAME(System.UInt32,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            colorNameHash: https://alloc8or.re/rdr3/doc/enums/eColor.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._DISPLAY_TEXT(System.String,System.Single,System.Single)">
            <summary>
            nullsub, this native does nothing since build 1436, use _BG_DISPLAY_TEXT (0x16794E044C9EFB58) instead.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_TEXT_COLOR(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This native does nothing since build 1436, use _BG_SET_TEXT_COLOR (0x16FA5CE47F184F1E) instead.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._0x2F7BB105144ACF30">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._0xBFFF81E12A745A5F">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.ALLOW_PAUSE_WHEN_NOT_IN_STATE_OF_PLAY_THIS_FRAME">
            <summary>
            Old name: _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD.IS_PAUSE_MENU_ACTIVE">
            <summary>
            Returns true when either Pause Menu, a Frontend Menu, Online Policies menu or Social Club menu is active.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_PRIORITY(System.Int32,System.Int32)">
            <summary>
            priority: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptPriority
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_HAS_STANDARD_MODE_COMPLETED(System.Int32,System.Int32)">
            <summary>
            Params: p1 is 0
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_HOLD_MODE(System.Int32,System.Int32)">
            <summary>
            Params: p2 is 304000 in R* SP Script coachrobberies
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_STANDARDIZED_HOLD_MODE(System.Int32,System.UInt32)">
            <summary>
            Hashes: SHORT_TIMED_EVENT_MP, SHORT_TIMED_EVENT, MEDIUM_TIMED_EVENT, LONG_TIMED_EVENT, RUSTLING_CALM_TIMING, PLAYER_FOCUS_TIMING, PLAYER_REACTION_TIMING
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_MASH_MANUAL_MODE_INCREASE_PER_PRESS(System.Int32,System.Single)">
            <summary>
            standard (prompt not held) rate: (1f / 128f)
            fast (prompt held) rate: (1f / 64f)
            punitive (been hit) rate: (1f / 128f)
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_MASH_MANUAL_MODE_DECAY_SPEED(System.Int32,System.Single)">
            <summary>
            standard (prompt not held) rate: 0.035f
            fast (prompt held) rate: 0.015f
            punitive (been hit) rate: 0.14f
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_ROTATE_MODE(System.Int32,System.Single,System.Boolean)">
            <summary>
            Used for controllers
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_GROUP(System.Int32,System.Int32,System.Int32)">
            <summary>
            tabIndex: specifies tab of prompt
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_ACTIVE_GROUP_THIS_FRAME(System.UInt32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Note: you must use VAR_STRING for p1 if string is not part of text database
            tabAmount: specifies number of tabs in prompt group
            tabDefaultIndex: specifies starting index
            p3 if is set > 3 you can no longer press Q to change tab if there are more than one tab set in tabAmount
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_TRANSPORT_MODE(System.Int32,System.Int32)">
            <summary>
            TM_ANY = 0,
            TM_ON_FOOT,
            TM_IN_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_ATTRIBUTE(System.Int32,System.Int32,System.Boolean)">
            <summary>
            attribute: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIPromptAttribute
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_TYPE(System.Int32,System.Int32)">
            <summary>
            Params: type = mostly 0, 6 (net_mission_intro_story_gvo), 7 (fm_mission_controller), 14 (net_ugc_end_flow_transition_online), 15 (net_main_[tlg_]offline)
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_CONTEXT_SET_VOLUME(System.Int32,System.Int32)">
            <summary>
            Attaches a Volume
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_ENABLE_PROMPT_TYPE_THIS_FRAME(System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/prompts/prompt_types
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_SET_REGISTER_HORIZONTAL_ORIENTATION">
            <summary>
            This returns an id that can be used with 0x6095358C4142932A.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._UI_PROMPT_CLEAR_HORIZONTAL_ORIENTATION(System.Int32)">
            <summary>
            id is the return value from 0xD9459157EB22C895.
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_MP_GAMER_TAG_VISIBILITY(System.Int32,System.Int32)">
            <summary>
            visibility:
            enum eUIGamertagVisibility
            {
            	UIGAMERTAGVISIBILITY_NONE,
            	UIGAMERTAGVISIBILITY_ICON,
            	UIGAMERTAGVISIBILITY_SIMPLE,
            	UIGAMERTAGVISIBILITY_COMPLEX
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_MP_GAMER_TAG_TYPE(System.Int32,System.UInt32)">
            <summary>
            Found types: GENERIC_PLAYER, DEADDROP, HOTPROPERTY, MINIGAMES
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_MP_GAMER_TAG_UNK_ALLOW_LOCALIZED(System.Int32,System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_MP_GAMER_TAG_TOP_ICON(System.Int32,System.UInt32)">
            <summary>
            Found icons: https://pastebin.com/xx6rEgiG
            </summary>
        </member>
        <member name="M:RDR2.Native.HUD._SET_MP_GAMER_TAG_SECONDARY_ICON(System.Int32,System.UInt32)">
            <summary>
            Found icons: SPEAKER, THROPY
            </summary>
        </member>
        <member name="M:RDR2.Native.IK._INVERSE_KINEMATICS_SET_DISABLED_FOR_PED(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Seems to disable IK on ped
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30.SET_MOUSE_CURSOR_THIS_FRAME">
            <summary>
            Shows the cursor on screen for one frame.
            
            Old name: _SET_MOUSE_CURSOR_ACTIVE_THIS_FRAME
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30.SET_MOUSE_CURSOR_STYLE(System.Int32)">
            <summary>
            Changes the mouse cursor's sprite.
            
            spriteId's: https://github.com/femga/rdr3_discoveries/tree/master/graphics/HUD/cursor_sprites#readme
            
            Old name: _SET_MOUSE_CURSOR_SPRITE
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30._0x0546B117BB17548B">
            <summary>
            Allows camera to be moved if middle mouse button is held while in first person
            Must be called every frame
            _SET*
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30._0x2B8B605F2A9E64BF">
            <summary>
            Returns true if player is moving mouse while cursor is active
            _PI* - _PO*
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30._0x61CAE9D1FD055E44">
            <summary>
            Returns true if player is holding LMB while cursor is active
            _PI* - _PO*
            </summary>
        </member>
        <member name="M:RDR2.Native._NAMESPACE30._0xF7F51A57349739F2">
            <summary>
            Returns true if player releases LMB if cursor is active
            _PI* - _PO*
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.GET_ROOM_KEY_FROM_ENTITY(System.Int32)">
            <summary>
            Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.GET_KEY_FOR_ENTITY_IN_ROOM(System.Int32)">
            <summary>
            Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.GET_INTERIOR_FROM_ENTITY(System.Int32)">
            <summary>
            Returns the handle of the interior that the entity is in. Returns 0 if outside.
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.UNPIN_INTERIOR(System.Int32)">
            <summary>
            Does something similar to INTERIOR::DISABLE_INTERIOR.
            
            You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside. 
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.SET_INTERIOR_IN_USE(System.Int32)">
            <summary>
            Actually returns void in IDA but the script header defines a BOOL return type
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(System.Single,System.Single,System.Single,System.UInt32)">
            <summary>
            Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.IS_COLLISION_MARKED_OUTSIDE(System.Single,System.Single,System.Single)">
            <summary>
            Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
            </summary>
        </member>
        <member name="M:RDR2.Native.INTERIOR.ACTIVATE_INTERIOR_ENTITY_SET(System.Int32,System.String,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/interiors/interior_sets
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_GET_INVENTORY_ID_FROM_PED(System.Int32)">
            <summary>
            Returns a unique inventory ID for this ped.
            For the local player ped, it is an eInventories value.
            For other peds, it is the inventory address casted to unsigned int.
            
            enum eInventories
            {
            	INVENTORY_INVALID,
            	INVENTORY_SP_PLAYER,
            	INVENTORY_MP_PLAYER,
            	INVENTORY_MP_MISSION,
            	INVENTORY_SECOND_SCREEN,
            	INVENTORY_SP_BACKUP,
            	INVENTORY_SP_SNAPSHOT,
            	INVENTORY_0xDE2AE452,
            	INVENTORY_0x399D9B3A,
            	INVENTORY_0x4BD43FA7,
            	INVENTORY_0x9529D251,
            	INVENTORY_0xA75776AC,
            	INVENTORY_MAX_ID = 11,
            	INVENTORY_IDS_COUNT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x112BCA290D2EB53C(System.Int32,System.UInt32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x46743BBFEDBC859E(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            eInventoryItem: CLOTHING_FANCY_SUIT, CLOTHING_GUNSLINGER_OUTFIT, etc.
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_SET_INVENTORY_ITEM_IN_USE(System.Int32,System.UInt64*,System.Boolean)">
            <summary>
            Only works on CClothingItem
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_SET_INVENTORY_ITEM_HIDDEN(System.Int32,System.UInt64*,System.Boolean)">
            <summary>
            Used with CClothingItem
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_SET_INVENTORY_ITEM_HIDDEN_2(System.Int32,System.UInt64*,System.Boolean)">
            <summary>
            Used with CSatchelItem, R* Script usage: fisihing_core
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_IS_INVENTORY_ITEM_FLAG_ENABLED(System.UInt32,System.Int32)">
            <summary>
            flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ItemDatabaseItemFlags
            2097152 (is item read?), 8388608 (is item sent/received/mailable?), 16777216 (is item consumable?)
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_GET_IS_INVENTORY_ITEM_SOUND_VALID(System.UInt32,System.Int32)">
            <summary>
            eSoundType:
            SI_SFX_INVALID = -1,
            SI_SFX_PURCHASE,
            SI_SFX_SELL,
            SI_SFX_USE
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_GET_INVENTORY_ITEM_SOUND(System.UInt32,System.Int32)">
            <summary>
            eSoundType
            Returns item Hash to be used with _IS_SCRIPTED_AUDIO_CUSTOM and _PLAY_SOUND_FROM_ITEM (p0)
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_GET_INVENTORY_ITEM_WEAPON_COPY_ID(System.Int32,System.UInt64*)">
            <summary>
            Returns CopyID
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_ARE_LOCAL_CHANGES_ALLOWED(System.Int32)">
            <summary>
            inventoryId: see _INVENTORY_GET_PED_INVENTORY_ID
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x5D6182F3BCE1333B(System.Int32,System.UInt32)">
            <summary>
            removeReason: REMOVE_REASON_DEFAULT (eRemoveItemReason)
            Example: INVENTORY::_0x5D6182F3BCE1333B(1, joaat("REMOVE_REASON_DEFAULT")); -> clears weapon wheel
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_ADD_ITEM_WITH_GUID(System.Int32,System.UInt64*,System.UInt64*,System.UInt32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            inventoryItemSlotHash: https://pastebin.com/P6fyr3vr
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_UPDATE_INVENTORY_ITEM(System.Int32,System.UInt64*,System.UInt64*,System.Int32)">
            <summary>
            Getter: _INVENTORY_GET_FULL_INVENTORY_ITEM_DATA
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_MOVE_INVENTORY_ITEM(System.Int32,System.UInt64*,System.UInt64*,System.UInt32,System.Int32,System.UInt64*)">
            <summary>
            guid1: old parent GUID
            guid2: new parent GUID
            guid3: new item GUID (out param)
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_CREATE_ITEM_COLLECTION(System.Int32,System.String,System.UInt32,System.Int32*)">
            <summary>
            filterName (collections): "ALL", "ALL WEAPONS", "ALL HORSES", "ALL COACHES"
            slotId: -1591664384
            p3: outCollectionSize (?)
            Returns collectionId
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.INVENTORY._INVENTORY_GET_ITEM_FROM_COLLECTION_INDEX(System.Int32,System.Int32,System.UInt64*)" -->
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_RELEASE_ITEM_COLLECTION(System.Int32)">
            <summary>
            Max num of collections is 5, so release your unused ones.
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0xD08685BA892DBFAB(System.Int32,System.UInt64*,System.Int32*,System.Int32*)">
            <summary>
            Params: p3 returns an int between 0 and 20 (?)
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x0349404A22736740(System.Boolean,System.Int32,System.UInt64*)">
            <summary>
            Params: p0 is only 0 or 1
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_SET_INVENTORY_ITEM_WEATHER_EFFECTIVENESS(System.Int32,System.UInt64*,System.Int32)">
            <summary>
            OWE_INVALID = -1,
            OWE_GOOD_IN_HOT
            OWE_GOOD_IN_NONE
            OWE_GOOD_IN_COLD
            OWE_GOOD_IN_ALL
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_DISABLE_ITEM(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Example: (1, WEAPON_REVOLVER_CATTLEMAN, 0) - disables cattleman revolver on weapon wheel
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_IS_INVENTORY_ITEM_EQUIPPED(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Alternative Name: _INVENTORY_IS_ITEM_DISABLED
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._GET_DEFAULT_ITEM_SLOT_INFO(System.UInt32,System.UInt32)">
            <summary>
            p1: WARDROBE, KIT_CAMP, CHARACTER, KIT_MOONSHINER_PROPERTY
            Returns slot hash
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x9AC53CB6907B4428(System.UInt32,System.UInt64*,System.UInt64*)">
            <summary>
            p1 (out) and p2 (in) are both script arrays?
            item: can be a component item, see SHOP_CATALOG_BUILD_LIST_OF_WEAPON_COMPONENTS
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x9D21B185ABC2DBC4(System.UInt64,System.String,System.Boolean,System.Boolean)">
            <summary>
            p0 is the return value of DATABINDING::_DATABINDING_ADD_DATA_CONTAINER_FROM_PATH
            p2, p3: 0
            Returns databindingEntryId
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x75CFAC49301E134F(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            p1, p2: 0
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x9D21B185ABC2DBC5(System.UInt64,System.String,System.Int32,System.Int32)">
            <summary>
            p2: 0
            p3: -1
            Returns databindingEntryId to be used with 0x75CFAC49301E134E (p0)
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x75CFAC49301E134E(System.UInt64,System.Boolean,System.Int32)">
            <summary>
            p0: value returned by 0x9D21B185ABC2DBC5
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x46DB71883EE9D5AF(System.UInt64,System.String,System.UInt64*,System.Int32)">
            <summary>
            Returns databindingEntryId to be used with 0x951847CEF3D829FF (p0)
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x951847CEF3D829FF(System.UInt64,System.UInt64*,System.Int32)">
            <summary>
            p0: value returned by 0x46DB71883EE9D5AF
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x6862E4D93F64CF01(System.Int32,System.UInt64*,System.UInt32,System.UInt64*)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_ENABLE_MISSION_INVENTORY(System.Boolean)">
            <summary>
            This native has no functionality.
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0xE36D4A38D28D9CFB(System.Boolean)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x9B4E793B1CB6550A">
            <summary>
            Used in function SET_SHOP_BEING_ROBBED and many other shop related scripts and functions.
            INVENTORY_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_DISABLE_WEAPONS(System.Int32,System.UInt64)">
            <summary>
            Params: p1 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0xE1F45A67A9F0DCBC(System.Int32)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._0x6968CE7AC32F6788(System.Int32)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_CREATE_ITEM_COLLECTION_2(System.Int32*)">
            <summary>
            Returns collectionId
            </summary>
        </member>
        <member name="M:RDR2.Native.INVENTORY._INVENTORY_CREATE_SORTED_COLLECTION(System.Int32,System.Int32,System.Int32*)">
            <summary>
            p1: 32
            Returns collectionId
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE.ITEMDATABASE_FILLOUT_ITEM_INFO(System.UInt32,System.UInt64*)">
            <summary>
            p0 can be a weapon hash, component item
            p1 is a struct containing WEAPON_MOD and WEAPON_DECORATION
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0x74C3B1093728D263(System.UInt64,System.UInt64)">
            <summary>
            _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xDEE7B3C76ED664BE(System.UInt32,System.UInt32)">
            <summary>
            Returns fillOutIndex (?)
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0x12DF9C58201DD19A(System.UInt64)">
            <summary>
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0x1FC25AEB5F76B38D(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xF540239F9937033B(System.UInt64,System.UInt64)">
            <summary>
            Returns itemCount (?)
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xF27F01BBF5ACD3F3(System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_CREATE_ITEM_COLLECTION(System.UInt64*,System.Int32*,System.Int32)">
            <summary>
            Returns collectionId to be used with 0x8750F69A720C2E41 (p0) and 0xCBB7B6EDFA933ADE (p0)
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xD389A2549C4EFB30(System.Int32)">
            <summary>
            Returns (collection?) size/index (?)
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_GET_COMPONENT_ITEM(System.Int32,System.Int32,System.UInt32*)">
            <summary>
            Params: p2 can be a component item hash
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_GET_SHOP_INVENTORIES_ITEM_INFO_BY_KEY(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Same Native Function as 0x17721003A66C72BF
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xF8D09EF8CE61D7BF(System.UInt64,System.UInt64)">
            <summary>
            _ITEMDATABASE_FILLOUT_(B)* - ITEMDATABASE_FILLOUT_ITEM*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_GET_MODIFIED_PRICE(System.UInt64,System.UInt64)">
            <summary>
            Returns an alternative cost hash to COST_SHOP_DEFAULT
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_GET_PRIORITY_ACCESS_AWARD(System.UInt32)">
            <summary>
            _ITEMDATABASE_GET_* - _ITEMDATABASE_IS_*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_GET_AWARD_ITEM_COUNT(System.UInt32)">
            <summary>
            Returns iAwardItemCount
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0x48229CE0C7938237(System.UInt32)">
            <summary>
            _ITEMDATABASE_GET_(A)* - _ITEMDATABASE_GET_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0x8D029948CA29409B(System.UInt32,System.UInt64,System.UInt64)">
            <summary>
            _ITEMDATABASE_FILLOUT_(A)* - _ITEMDATABASE_FILLOUT_(B)*
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_DOES_BUNDLE_HAVE_TAG(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Params: tag = TAG_ITEM_PROPERTY (tagType(?))
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_LOCALIZATION_GET_NUM_LABEL_TYPES(System.UInt64)">
            <summary>
            Returns docData.iNumTotalLabelTypes
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_LOCALIZATION_GET_NUM_VALUES(System.UInt64,System.UInt64)">
            <summary>
            Returns iNumValuesForType
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._ITEMDATABASE_LOCALIZATION_GET_TYPE(System.UInt64,System.UInt64)">
            <summary>
            Returns LabelType
            </summary>
        </member>
        <member name="M:RDR2.Native.ITEMDATABASE._0xAA29A5F13B2C20B2(System.UInt64,System.UInt32)">
            <summary>
            Returns Pathset Hash
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._REPORT_CRIME(System.Int32,System.UInt32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            crimeType:
            enum eCrimeType : Hash
            {
            	CRIME_ACCOMPLICE = 0xAF074F6D,
            	CRIME_ARSON = 0x68134DC7,
            	CRIME_ASSAULT = 0x0BADC882,
            	CRIME_ASSAULT_ANIMAL = 0x18DA55EE,
            	CRIME_ASSAULT_CORPSE = 0x4E5F23F2,
            	CRIME_ASSAULT_HORSE = 0xC4736181,
            	CRIME_ASSAULT_LAW = 0xD7466D7C,
            	CRIME_ASSAULT_LIVESTOCK = 0xCCE1CCBD,
            	CRIME_BANK_ROBBERY = 0x6A1ADE3D,
            	CRIME_BURGLARY = 0xA54C77E0,
            	CRIME_CHEATING = 0xA2FF1145,
            	CRIME_DISTURBANCE = 0x5011F613,
            	CRIME_EXPLOSION = 0x3EBA7A37,
            	CRIME_EXPLOSION_POISON = 0x91D0A0E1,
            	CRIME_GRAVE_ROBBERY = 0x971EA5AF,
            	CRIME_HASSLE = 0x58488776,
            	CRIME_HIT_AND_RUN = 0xFF0A3CC4,
            	CRIME_HIT_AND_RUN_LAW = 0x064814AF,
            	CRIME_INTIMIDATION = 0x8319FBAB,
            	CRIME_JACK_HORSE = 0x82F7E4A2,
            	CRIME_JACK_VEHICLE = 0x6B981F4C,
            	CRIME_JAIL_BREAK = 0x12C1D589,
            	CRIME_KIDNAPPING = 0x98F908DB,
            	CRIME_KIDNAPPING_LAW = 0xFD72A7EA,
            	CRIME_LASSO_ASSAULT = 0x56EE5D5A,
            	CRIME_LAW_IS_THREATENED = 0x1CB91DF0,
            	CRIME_LOITERING = 0x6629D2F4,
            	CRIME_LOOTING = 0x55AD2BEB,
            	CRIME_MURDER = 0xE28ECE7E,
            	CRIME_MURDER_ANIMAL = 0x48F59A66,
            	CRIME_MURDER_HORSE = 0xC7261D79,
            	CRIME_MURDER_LAW = 0x7797FCE7,
            	CRIME_MURDER_LIVESTOCK = 0x9569C546,
            	CRIME_MURDER_PLAYER = 0xF5ABD6C9,
            	CRIME_MURDER_PLAYER_HORSE = 0xD55C6A79,
            	CRIME_PROPERTY_DESTRUCTION = 0x533B003D,
            	CRIME_RESIST_ARREST = 0xDF577BA5,
            	CRIME_ROBBERY = 0xA3BEDE4C,
            	CRIME_SELF_DEFENCE = 0xBD6A0AA3,
            	CRIME_STAGECOACH_ROBBERY = 0xFC738E61,
            	CRIME_STOLEN_GOODS = 0x9A949C79,
            	CRIME_THEFT = 0x72ADE410,
            	CRIME_THEFT_HORSE = 0xBE3A5838,
            	CRIME_THEFT_LIVESTOCK = 0x85BA08FD,
            	CRIME_THEFT_VEHICLE = 0x43A9ECA1,
            	CRIME_THREATEN = 0x941C985A,
            	CRIME_THREATEN_LAW = 0x7F908566,
            	CRIME_TRAIN_ROBBERY = 0x647D2A5A,
            	CRIME_TRAMPLE = 0x45DB39D8,
            	CRIME_TRAMPLE_LAW = 0xF00F266B,
            	CRIME_TRAMPLE_PLAYER = 0x75970C15,
            	CRIME_TRESPASSING = 0xAEDE8E35,
            	CRIME_UNARMED_ASSAULT = 0x5098CC5A,
            	CRIME_VANDALISM = 0x80FDC759,
            	CRIME_VANDALISM_VEHICLE = 0xF9E7ECE4,
            	CRIME_VEHICLE_DESTRUCTION = 0x54A85DDC,
            	CRIME_WANTED_LEVEL_UP_DEBUG_HIGH = 0x99C52FF5,
            	CRIME_WANTED_LEVEL_UP_DEBUG_LOW = 0xD891890F
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW.SUPPRESS_CRIME_THIS_FRAME(System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            crimeType: see _REPORT_CRIME
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW.NUM_CRIMES_SUPPRESSED(System.Int32,System.UInt32)">
            <summary>
            Returns amount of suppressed crimes to be used later in the function MPINTRO_CRIME_MONITOR_MAINTAIN
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x15ABD5004CAD2D99(System.Int32)">
            <summary>
            Params: p0 either 0, 1 or -1 in R* Scripts
            Set to 0 called together with _SUPPRESS_CRIME
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x292AD61A33A7A485">
            <summary>
            Only used in R* Script fm_mission_controller
            _CLEAR_WANTED_*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.LAW._0x07E8B8B20570271C(System.Int32)" -->
        <member name="M:RDR2.Native.LAW._0x22741652985C84D0(System.Int32,System.UInt32)">
            <summary>
            Used in SP only
            _REPORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x9EF07CFBB19A9733">
            <summary>
            Only used in shoprobberies R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._SET_LAW_REGION(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            enum eLawRegion : Hash
            {
            	LAW_DISPATCH_REGION_NONE = 0,
            	LAW_REGION_AGUASDULCES = 0x2F573EBE,
            	LAW_REGION_ANNESBURG = 0x68CAFD50,
            	LAW_REGION_ARMADILLO = 0xF0B90756,
            	LAW_REGION_BAYOU_NWA = 0x80966B1C,
            	LAW_REGION_BEECHERS_HOPE = 0xE2544977,
            	LAW_REGION_BIG_VALLEY = 0x3DF1559A,
            	LAW_REGION_BLACKWATER = 0x60D4886D,
            	LAW_REGION_BLACKWATER_MAINGAME = 0x66553576,
            	LAW_REGION_BLUEGILL_MARSH = 0x1D6AED8E,
            	LAW_REGION_BRAITHWAITE_MANOR = 0x3D71E7FF,
            	LAW_REGION_BUTCHER_CREEK = 0x2B3E1822,
            	LAW_REGION_CALIGA_HALL = 0xF3FE5080,
            	LAW_REGION_CORNWALL = 0xCC4672FA,
            	LAW_REGION_CUMBERLAND_FOREST = 0x81A78306,
            	LAW_REGION_EMERALD_RANCH = 0x5C069DF3,
            	LAW_REGION_FORT_WALLACE = 0x0AF25192,
            	LAW_REGION_GREAT_PLAINS = 0xB20573FA,
            	LAW_REGION_GREAT_PLAINS_MAINGAME = 0x9862FF7C,
            	LAW_REGION_GRIZZLIES = 0xBB936031,
            	LAW_REGION_GUAMA = 0x200DFF42,
            	LAW_REGION_HEARTLANDS = 0xAD14DA65,
            	LAW_REGION_LAGRAS = 0xC64808D3,
            	LAW_REGION_MACFARLANES_RANCH = 0x396A7D5F,
            	LAW_REGION_MANICATO = 0x039DB6BF,
            	LAW_REGION_MANZANITA_POST = 0x895E580E,
            	LAW_REGION_MANZANITA_POST_MAINGAME = 0x9BDD6A38,
            	LAW_REGION_OCCUPIED_CARAVAN_CAMP = 0x7EBABB01,
            	LAW_REGION_OLD_MAP_WILDERNESS = 0xCBB45950,
            	LAW_REGION_OLD_MAP_WILDERNESS_MAINGAME = 0x9F839BE7,
            	LAW_REGION_OUTLAW3 = 0x97A02FC1,
            	LAW_REGION_PRONGHORN_RANCH = 0x398E4BFC,
            	LAW_REGION_RHODES = 0x89222928,
            	LAW_REGION_RHODES_LOCKDOWN = 0xB1181671,
            	LAW_REGION_RIDGEWOOD_FARM = 0x635C3028,
            	LAW_REGION_ROANOKE_RIDGE = 0x46386A9A,
            	LAW_REGION_SAINT_DENIS = 0x5CF7C268,
            	LAW_REGION_SAINT_DENIS_RURAL = 0x4FD5331A,
            	LAW_REGION_SCARLETT_MEADOWS = 0x5FDD9717,
            	LAW_REGION_SISIKA = 0x2B6BBA52,
            	LAW_REGION_STRAWBERRY = 0xDD932620,
            	LAW_REGION_TALL_TREES = 0xD939B758,
            	LAW_REGION_TALL_TREES_MAINGAME = 0x084B17DF,
            	LAW_REGION_THIEVES_LANDING = 0x3D0C2EB6,
            	LAW_REGION_THIEVES_LANDING_MAINGAME = 0x61C450F3,
            	LAW_REGION_TUMBLEWEED = 0x0EFAF8DC,
            	LAW_REGION_VALENTINE = 0xA7A3F0C3,
            	LAW_REGION_VALENTINE_LOCKDOWN = 0x123582FE,
            	LAW_REGION_VAN_HORN = 0x619B528E,
            	LAW_REGION_WAPITI = 0x7A976E02
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x5E6F375CA101C108(System.Int32,System.Boolean)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xEDFC6C1FD1C964F5(System.Int32,System.UInt32,System.Int32,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.UInt64)">
            <summary>
            _SET_C* - _SET_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x318F0F9A4426CFA2(System.Int32,System.UInt64*)">
            <summary>
            Only used in R* SP Script av_amb_camp_robbery
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xD7494DED50C6EF52(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Only used in R* SP Scripts
            Params: p2 either 1 or 2
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xDA1A9ADC4E3D4B16(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Only used in R* SP Scripts
            Params: p1 = true, p2 = false
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xECE3C34B270428D5">
            <summary>
            Only used in rcm_homerob00 R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._ARE_LAW_PEDS_ENABLED_FOR_TRAIN">
            <summary>
            Only used in trainrobbery_ambient R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x82F11E1296996574(System.Int32)">
            <summary>
            Only used in rcm_gunslinger1_1 R* Script: p0 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xC0DF161950FB101E(System.Int32)">
            <summary>
            Only used in rcm_serial_killer1 R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xE9EB79CBF9C0F58A(System.Int32)">
            <summary>
            Returns p1 value for 0xE4D6E45F491A66CB
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x390710D2DAFA6BFF(System.Int32,System.Boolean)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._GET_CRIME_BOUNTY_AMOUNT_BY_TYPE(System.UInt32)">
            <summary>
            Returns bounty (increment) value
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xDAEFDFDB2AEECE37(System.UInt32,System.UInt64)">
            <summary>
            crimeType: see _REPORT_CRIME
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._GET_HUD_PLAYER_CRIME_TYPE(System.Int32)">
            <summary>
            See _REPORT_CRIME
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x0BDFEBCF40A5F7E3(System.UInt32)">
            <summary>
            Only used in net_fetch R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._SET_CUSTOM_LAW_DISPATCH_RESPONSE(System.UInt32)">
            <summary>
            Note: This native is only used in multiplayer scripts
            dispatchResponseHash: see update1/common/data/dispatchresponses/..
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._CREATE_LAW_DISPATCH_RESPONSE_FOR_COORDS(System.Single,System.Single,System.Single,System.UInt32)">
            <summary>
            dispatchResponseHash: see common/data/dispatchresponses/..
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._SET_BOUNTY_HUNTER_PURSUIT_CLEARED">
            <summary>
            Force clears local player's wanted level
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xBD944A3D36E992DE">
            <summary>
            Called together with REPORT_POLICE_SPOTTED_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x9C8A2BF37E966464(System.Int32,System.Int32)">
            <summary>
            Only used in act_bankrobbery01 R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x7351DA734F989F4E(System.Int32)">
            <summary>
            Only used in shoprobberies
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._GET_BOUNTY_HUNTER_GLOBAL_COOLDOWN(System.UInt32)">
            <summary>
            p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._SET_BOUNTY_HUNTER_GLOBAL_COOLDOWN(System.UInt32,System.Int32)">
            <summary>
            p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x2001687F9562FD9D(System.UInt64)">
            <summary>
            Only used in resapwn_dump_body R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._PAUSE_BOUNTY_HUNTER_COOLDOWN(System.UInt32,System.Boolean,System.UInt64)">
            <summary>
            p0 is always BOUNTYHUNTERSGLOBALCOOLDOWN in R* scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xE9AC8466ABE484BB(System.Boolean,System.UInt64)">
            <summary>
            Only used in R* SP Scripts
            Params: p1 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xE94B5E938619712E">
            <summary>
            Seems to disable lawmen guarding behaviors (like during a region lockdown). Must be called every frame.
            Only used in R* SP Scripts, mostly used in train_fast_travel_core
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x7FC667F6DDFBCDCC(System.Int32)">
            <summary>
            Only used in R* Script long_update
            Returns a value thats being subtracted from GET_GAME_TIMER
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._SET_PED_LAW_BEHAVIOUR(System.Int32,System.Int32)">
            <summary>
            behaviour: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLawBehavior__Flags
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW.SET_LAW_SENSE_RANGE_MODIFIER(System.Int32,System.Single)">
            <summary>
            Default range is 1.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x7EF2A2FE38D74456(System.Int32,System.Boolean)">
            <summary>
            _SET_DISPATCH_*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0xC7DC5A0A7DF608CB(System.Int32)">
            <summary>
            _GET_DISPATCH_*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x9772395CC73E8D1F(System.Int32,System.String)">
            <summary>
            Only used in loanshark_miner1 R* Script: name = ANNESBURG_MINES
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._0x0DBACA9C38C9A686(System.String)">
            <summary>
            Only used in sisikapenitentiary R* Script: name = SISIKA
            _IS_G* or _IS_H*
            </summary>
        </member>
        <member name="M:RDR2.Native.LAW._CREATE_GUARD_ZONE_FOR_ENTITY(System.String,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Returns true when investigation creation was successful
            </summary>
        </member>
        <member name="M:RDR2.Native.LOCALIZATION.LOCALIZATION_GET_SYSTEM_LANGUAGE">
            <summary>
            Same return values as GET_CURRENT_LANGUAGE
            </summary>
        </member>
        <member name="M:RDR2.Native.LOCALIZATION.GET_CURRENT_LANGUAGE">
            <summary>
            0 = american (en-US)
            1 = french (fr-FR)
            2 = german (de-DE)
            3 = italian (it-IT)
            4 = spanish (es-ES)
            5 = brazilian (pt-BR)
            6 = polish (pl-PL)
            7 = russian (ru-RU)
            8 = korean (ko-KR)
            9 = chinesetrad (zh-TW)
            10 = japanese (ja-JP)
            11 = mexican (es-MX)
            12 = chinesesimp (zh-CN)
            </summary>
        </member>
        <member name="M:RDR2.Native.LOCALIZATION._0x45D50415E4D885FF">
            <summary>
            Returns true if the current language is american, french, german, italian, spanish, brazilian or mexican.
            _DOES_*
            </summary>
        </member>
        <member name="M:RDR2.Native.LOCALIZATION.LOCALIZATION_GET_SYSTEM_DATE_TYPE">
            <summary>
            0 = DATE_FORMAT_DMY
            1 = DATE_FORMAT_MDY
            2 = DATE_FORMAT_YMD
            
            Old name: _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.GET_BLIP_FROM_ENTITY(System.Int32)">
            <summary>
            Returns the Blip handle of given Entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.BLIP_ADD_FOR_COORDS(System.UInt32,System.Single,System.Single,System.Single)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/textures/blips_mp
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._BLIP_SET_STYLE(System.Int32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_styles
            Removes any existing modifiers and sets the style.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.BLIP_ADD_MODIFIER(System.Int32,System.UInt32)">
            <summary>
            https://alloc8or.re/rdr3/doc/enums/eBlipModifier.txt
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/blip_modifiers
            
            Old name: _BLIP_SET_MODIFIER
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.BLIP_REMOVE_MODIFIER(System.Int32,System.UInt32)">
            <summary>
            If modifierHash is 0, ALL modifiers will be removed.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._0x01B928CA2E198B01(System.UInt64)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._ABANDON_BLIP(System.Int32)">
            <summary>
            It's unclear what exactly this does, but I assume it marks the blip as "no longer needed"
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.FORCE_SONAR_BLIPS_THIS_FRAME">
            <summary>
            Doesn't actually return anything.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.SET_GPS_FLAGS(System.Int32,System.Single)">
            <summary>
            https://alloc8or.re/rdr3/doc/enums/rage__eGpsFlags.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.CLEAR_GPS_FLAGS">
            <summary>
            Clears the GPS flags.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.CLEAR_GPS_MULTI_ROUTE">
            <summary>
            Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.DISPLAY_RADAR(System.Boolean)">
            <summary>
            If Minimap / Radar should be displayed.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._SET_RADAR_CONFIG_TYPE(System.UInt32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/graphics/minimap/radar/radar_configs.lua
            configHash: -1943724816, 347777538, -117986897, -789269373, -547506804, -1986542417, 2080113112
            p1: usually 898171178 or 0 in R* scripts (doesn't seems to have any effect)
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._ADD_PROP_TO_MINIMAP(System.UInt32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            list of minimap props: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/minimapObjects
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.SET_MINIMAP_HIDE_FOW(System.Boolean)">
            <summary>
            Reveals the entire minimap (FOW = Fog of War)
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._SET_FOW_UPDATE_PLAYER_OVERRIDE(System.Boolean,System.UInt32)">
            <summary>
            Used for GUARMA MODE; Enabled: toggle = false, 0; Disabled: toggle = true, 0
            Hash p1 seems to be unused, always 0
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.SET_MINIMAP_FOW_REVEAL_COORDINATE(System.Single,System.Single,System.Single,System.UInt32)">
            <summary>
            Up to eight coordinates may be revealed per frame
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._SET_MINIMAP_ZONE(System.UInt32)">
            <summary>
            hash can be the hash of "guarma" or "world".
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP.LOCK_MINIMAP_ANGLE(System.Int32)">
            <summary>
            Locks the minimap to the specified angle in integer degrees.
            
            angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._MAP_ENABLE_REGION_BLIP(System.UInt32,System.UInt32)">
            <summary>
            regionHash: https://github.com/femga/rdr3_discoveries/tree/master/graphics/minimap/wanted_regions
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._0x44813684F72B563C(System.Int32,System.UInt64)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.MAP._0x7563CBCA99253D1A(System.Int32,System.UInt32)">
            <summary>
            FM_CLIENT_SETUP_EAGLE_EYE - setting up eagle eye for entity
            </summary>
        </member>
        <member name="M:RDR2.Native.MINIGAME._DOMINOES_BUY_IN(System.UInt64)">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.MINIGAME._DOMINOES_PLACE_DOMINO(System.UInt64,System.UInt64)">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.MINIGAME._DOMINOES_REQUEST_VALID_PLACEMENTS(System.UInt64)">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_MAG_DEMO_1_ACTIVE">
            <summary>
            magdemo = magazine demo, i. e. for magazines such as IGN, pre play phases to prepare articles etc. - example 2012 builds for V
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_TIME_SCALE(System.Single)">
            <summary>
            Maximum value is 1.0f
            At a value of 0.0f the game will still run at a minimum time scale.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_MISSION_FLAG(System.Boolean)">
            <summary>
            If true, the player can't save the game.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_RANDOM_EVENT_FLAG(System.Boolean)">
            <summary>
            If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
            Does nothing if the mission flag is set.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTIVITY_FEED_CREATE(System.String,System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTIVITY_FEED_ADD_SUBSTRING_TO_CAPTION(System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xFF252E2BAFB7330F(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE(System.String,System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTIVITY_FEED_ACTION_START_WITH_COMMAND_LINE_ADD(System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xAF530E56505D1BD6(System.UInt64)">
            <summary>
            Hardcoded to return one/true.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTIVITY_FEED_POST">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0x1096603B519C905F(System.String)">
            <summary>
            _SET_MISSION_NAME_*(FOR_ACTIVITY?/MINIGAME?)
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_WEATHER_TYPE(System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_types.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_CURR_WEATHER_STATE(System.UInt32*,System.UInt32*,System.Single*)">
            <summary>
            Params: percentWeather2: 0f - 0.75f in R* Scripts
            
            Old name: _GET_WEATHER_TYPE_TRANSITION
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_CURR_WEATHER_STATE(System.UInt32,System.UInt32,System.Single,System.Boolean)">
            <summary>
            Params: BOOL p3 is always true
            
            Old name: _SET_WEATHER_TYPE_TRANSITION
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._GET_FORCED_WEATHER(System.UInt32*,System.UInt32*)">
            <summary>
            Returns the weather type that has been set by a script
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._SET_WEATHER_VARIATION(System.String,System.String)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/weather/weather_variations.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(System.Single)">
            <summary>
            Only used in smuggler2 script
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(System.Single)">
            <summary>
            Only used in smuggler2 script
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_RAIN(System.Single)">
            <summary>
            Old name: _SET_RAIN_LEVEL
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.FORCE_LIGHTNING_FLASH">
            <summary>
            creates single lightning+thunder at random position
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._FORCE_LIGHTNING_FLASH_AT_COORDS(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            p3 is always -1.0f in the scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xA9342743B634A462(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._GET_GAME_TIMER_NON_SCALED_CLIPPED">
            <summary>
            Returns rage::fwTimer::sm_nonScaledClippedTime
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_SYSTEM_TIME_STEP">
            <summary>
            Old name: _GET_BENCHMARK_TIME
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._READ_INT_AS_FLOAT(System.Int32)">
            <summary>
            Reads the passed value as floating point value and returns it.
            Example: _READ_INT_AS_FLOAT(0x3F800000) returns 1.0f because 0x3F800000 is the hexadecimal representation of 1.0f.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_DISTANCE_BETWEEN_COORDS(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
            
            Consider using this faster native instead: BUILTIN::VDIST - DVIST always takes in consideration the 3D coordinates.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_HEADING_FROM_VECTOR_2D(System.Single,System.Single)">
            <summary>
            dx = x1 - x2
            dy = y1 - y2
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._SET_BIT_FLAG(System.UInt64*,System.Int32)">
            <summary>
            Similar to SET_BIT but specifically designed for large (>32 flags) bit flag sets.
            The flags are stored in an int array where each int has the ability to hold 32 flags.
            Flags 0-31 would be stored in the first int, flags 32-63 in the second int, etc.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_HASH_KEY(System.String)">
            <summary>
            Computes a hash for the given string. It is hashed using Jenkins' One-at-a-Time hash algorithm (https://en.wikipedia.org/wiki/Jenkins_hash_function)
            Note: this implementation is case-insensitive.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._GET_EASING_CURVE_VALUE(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            https://easings.net/
            
            enum class eEasingCurveType
            {
            	TYPE_LINEAR,
            	TYPE_QUADRATIC_IN,
            	TYPE_QUADRATIC_OUT,
            	TYPE_QUADRATIC_INOUT,
            	TYPE_CUBIC_IN,
            	TYPE_CUBIC_OUT,
            	TYPE_CUBIC_INOUT,
            	TYPE_QUARTIC_IN,
            	TYPE_QUARTIC_OUT,
            	TYPE_QUARTIC_INOUT,
            	TYPE_QUINTIC_IN,
            	TYPE_QUINTIC_OUT,
            	TYPE_QUINTIC_INOUT,
            	TYPE_EXPONENTIAL_IN,
            	TYPE_EXPONENTIAL_OUT,
            	TYPE_EXPONENTIAL_INOUT,
            	TYPE_SINE_IN,
            	TYPE_SINE_OUT,
            	TYPE_SINE_INOUT,
            	TYPE_CIRCULAR_IN,
            	TYPE_CIRCULAR_OUT,
            	TYPE_CIRCULAR_INOUT,
            	TYPE_BOUNCE_IN,
            	TYPE_BOUNCE_OUT,
            	TYPE_BOUNCE_INOUT,
            	TYPE_CUSTOM
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.CLEAR_AREA(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            flag |= 1 | 1048576 | 524288
            ALL_BASE, PROJECTILES, AMBIENT_POPULATION, BROADCAST
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_FADE_IN_AFTER_DEATH_ARREST(System.Boolean)">
            <summary>
            Sets whether the game should fade in after the player dies or is arrested.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SHOULD_USE_METRIC_MEASUREMENTS">
            <summary>
            Returns whether the game's measurement system is set to metric.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._SHOULD_USE_METRIC_MEASUREMENTS_2">
            <summary>
            Same as SHOULD_USE_METRIC_MEASUREMENTS
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_PROJECTILE_IN_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
            
            ownedByPlayer = only projectiles fired by the player will be detected.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_PROJECTILE_TYPE_IN_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a rectangle.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.HAS_BULLET_IMPACTED_IN_AREA(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            p3 - possibly radius?
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_ORBIS_VERSION">
            <summary>
            Hardcoded to return false.
            Checks for PS4 Game Build.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_DURANGO_VERSION">
            <summary>
            Hardcoded to return false.
            Checks for XBOXONE Game Build.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_PC_VERSION">
            <summary>
            Hardcoded to return true.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_STADIA_VERSION">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.IS_STRING_NULL_OR_EMPTY_OR_SPACES(System.String)">
            <summary>
            Returns true if the entire string consists only of space characters.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.STRING_TO_INT(System.String,System.Int32*)">
            <summary>
            Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._INT_TO_STRING(System.Int32,System.String,System.String)">
            <summary>
            Note: the buffer should be exactly 32 bytes long
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.VAR_STRING(System.Int32,RDR2.Native.InputArgument[])">
            <summary>
            Note: The first bit in 'flags' must not be set.
            It is also required to pass at least one extra argument (this must be a text label string or hash).
            When passing a hash, flags should be 0.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._CREATE_COLOR_STRING(System.Int32)">
            <summary>
            Returns a formatted string (0x%x)
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_GAME_PAUSED(System.Boolean)">
            <summary>
            Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SET_CHEAT_ACTIVE(System.Int32)">
            <summary>
            Cheats are GTA IV cheats:
            
            0 = unknown
            1 = unknown (same as 0)
            2 = Max Health and Armor
            3 = Raise Wanted Level
            4 = Lower Wanted Level
            5 = unknown (does nothing)
            6 = Change Weather
            7 = Spawn Annihilator
            8 = Spawn NRG 900
            9 = Spawn FBI
            10 = Spawn Jetmax
            11 = Spawn Comet
            12 = Spawn Turismo
            13 = Spawn Cognoscenti
            14 = Spawn Super GT
            15 = Spawn Sanchez
            
            Initially used in Max Payne 3, that's why we know the name.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xB711EB4BC8D06013">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.POPULATE_NOW">
            <summary>
            spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.MISC._QUEUE_SAVEGAME_OPERATION(System.Int32)" -->
        <member name="M:RDR2.Native.MISC._GET_STATUS_OF_SAVEGAME_OPERATION(System.Int32)">
            <summary>
            Only 0 and 1 are valid for p0, higher values causes the native to return 2.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.COPY_SCRIPT_STRUCT(System.UInt64*,System.UInt64*,System.Int32)">
            <summary>
            Old name: _COPY_MEMORY
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ENABLE_DISPATCH_SERVICE(System.Int32,System.Boolean)">
            <summary>
            enum DispatchType
            {
            	DT_Invalid,
            	DT_PoliceAutomobile,
            	DT_PoliceHelicopter,
            	DT_FireDepartment,
            	DT_SwatAutomobile,
            	DT_AmbulanceDepartment,
            	DT_PoliceRiders,
            	DT_PoliceVehicleRequest,
            	DT_PoliceRoadBlock,
            	DT_PoliceAutomobileWaitPulledOver,
            	DT_PoliceAutomobileWaitCruising,
            	DT_Gangs,
            	DT_SwatHelicopter,
            	DT_PoliceBoat,
            	DT_ArmyVehicle,
            	DT_OnFoot,
            	DT_PoliceDogs
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(System.Int32,System.Boolean)">
            <summary>
            dispatchService: see ENABLE_DISPATCH_SERVICE
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.CREATE_INCIDENT(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32*,System.UInt64,System.UInt64)">
            <summary>
            dispatchService: see ENABLE_DISPATCH_SERVICE
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._CREATE_INCIDENT_WITH_ENTITIES(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32*)">
            <summary>
            dispatchService: see ENABLE_DISPATCH_SERVICE
            
            The entities must be added to itemSet.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.DELETE_INCIDENT(System.Int32)">
            <summary>
            Delete an incident with a given id.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._ADD_POP_MULTIPLIER_VOLUME(System.Int32,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Only used in script function PROCESS_ZONE_CREATION
            Returns Pop multiplier volume ID
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0x6BCF7B5CD338281A(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            _SET_DISPATCH_*, unused
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ADD_TACTICAL_NAV_MESH_POINT(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Params: p3 is 0 in R* Script utopia2
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.DISPLAY_ONSCREEN_KEYBOARD(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            enum eOnscreenKeyboardTextType
            {
            	KTEXTTYPE_INVALID = -1,
            	KTEXTTYPE_DEFAULT,
            	KTEXTTYPE_EMAIL,
            	KTEXTTYPE_PASSWORD,
            	KTEXTTYPE_NUMERIC,
            	KTEXTTYPE_ALPHABET,
            	KTEXTTYPE_GAMERTAG,
            	KTEXTTYPE_FILENAME,
            	KTEXTTYPE_COUNT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.UPDATE_ONSCREEN_KEYBOARD">
            <summary>
            Returns the current status of the onscreen keyboard, and updates the output.
            
            Status Codes:
            
            0 - User still editing
            1 - User has finished editing
            2 - User has canceled editing
            3 - Keyboard isn't active
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_ONSCREEN_KEYBOARD_RESULT">
            <summary>
            Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.CANCEL_ONSCREEN_KEYBOARD">
            <summary>
            Old name: _CANCEL_ONSCREEN_KEYBOARD
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.ACTION_MANAGER_ENABLE_ACTION(System.UInt32,System.Boolean)">
            <summary>
            Appears to remove stealth kill action from memory (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_REAL_WORLD_TIME">
            <summary>
            Returns GET_GAME_TIMER() / 1000
            Only used in rcm_pearson1.ysc
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.START_END_USER_BENCHMARK">
            <summary>
            Begins with START_*. Next character in the name is either D or E.
            
            Old name: _START_BENCHMARK_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.STOP_END_USER_BENCHMARK">
            <summary>
            Begins with STOP_*. Next character in the name is either D or E.
            
            Old name: _STOP_BENCHMARK_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.RESET_END_USER_BENCHMARK">
            <summary>
            Begins with RESET_*. Next character in the name is either D or E.
            
            Old name: _RESET_BENCHMARK_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.SAVE_END_USER_BENCHMARK">
            <summary>
            Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\Red Dead Redemption 2\Benchmarks and submits some metrics.
            
            Old name: _SAVE_BENCHMARK_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.UI_STARTED_END_USER_BENCHMARK">
            <summary>
            Hardcoded to return false.
            
            Old name: _UI_IS_SINGLEPLAYER_PAUSE_MENU_ACTIVE
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_BENCHMARK_ITERATIONS">
            <summary>
            Returns value of the '-benchmarkIterations' command line option.
            
            Old name: _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.GET_BENCHMARK_PASS">
            <summary>
            Returns value of the '-benchmarkPass' command line option.
            
            Old name: _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xDC057B86FC157031">
            <summary>
            Hardcoded to return one/true.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._GET_ITEM_TYPE(System.Int32)">
            <summary>
            0 = invalid
            1 = CEntity
            2 = rage::volBase
            3 = rage::volSphere
            4 = rage::volBox
            5 = rage::volAggregate
            6 = rage::volCylinder
            7 = CScriptedCoverPoint
            8 = rage::ptfxScriptInfo
            9 = CPed
            10 = CVehicle
            11 = CObject
            12 = CItemSet
            13 = CPersistentCharacter
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0x553D67295DDD2309(System.Int32)">
            <summary>
            UPDATE_PICKUP_COLLECTIBLE: set Eagle Eye fountain
            _J*, _K*, _L*
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.REGISTER_INTERACTION_LOCKON_PROMPT(System.Int32,System.String,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Int32,System.Boolean,System.Int32)">
            <summary>
            p3 is usually the same value of radius
            p8 determines whether the ILO prompt is a lock on prompt with RMB
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._CREATE_AI_MEMORY(System.UInt64*,System.Int32)">
            <summary>
            aiMemoryType: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/_CREATE_AI_MEMORY
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xEB946B9E579729AD(System.Int32,System.UInt64)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._SET_AI_MEMORY_REACTIONS_ENABLED(System.Boolean)">
            <summary>
            Used in CAIConditionAmbientAIMemoryReactionsEnabled
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._GET_LOOTING_EVENT_HAS_FIRED(System.Int32,System.String)">
            <summary>
            Event names in the scripts: MGBegin, MGEnd, ReadyForCut
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._0xA08111B053D84B4D(System.UInt64)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC._SET_GAME_LOGIC_PAUSED">
            <summary>
            Note: this native was added in build 1232.56
            </summary>
        </member>
        <member name="M:RDR2.Native.MISC.STOP_CURRENT_LOADING_PROGRESS_TIMER">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.MISSIONDATA.MISSIONDATA_WAS_COMPLETED(System.UInt32)">
            <summary>
            see: missions.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.MISSIONDATA._MISSIONDATA_SET_MISSION_RATING(System.UInt32,System.Int32)">
            <summary>
            MISSION_RATING_INCOMPLETE = 0,
            MISSION_RATING_SKIPPED,
            MISSION_RATING_COMPLETE,
            MISSION_RATING_BRONZE,
            MISSION_RATING_SILVER,
            MISSION_RATING_GOLD,
            </summary>
        </member>
        <member name="M:RDR2.Native.MISSIONDATA._MISSIONDATA_SET_REPLAY_STATE_LOCKED(System.UInt32,System.Int32)">
            <summary>
            replayState: MISSIONDATA_GET_REPLAY_STATE
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_NP_UNAVAILABLE_REASON">
            <summary>
            Hardcoded to return zero.
            
            ==== PS4 specific info ====
            
            Returns some sort of unavailable reason:
            -1 = REASON_INVALID
             0 = REASON_OTHER
             1 = REASON_SYSTEM_UPDATE
             2 = REASON_GAME_UPDATE
             3 = REASON_SIGNED_OUT
             4 = REASON_AGE
             5 = REASON_CONNECTION
            
            =================================
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_HAS_VALID_ROS_CREDENTIALS">
            <summary>
            Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_HOST">
            <summary>
            If you are host, returns true else returns false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x3E8CCE6769DB5F34(System.Int32)">
            <summary>
            Stadia only; always returns -1 on other platforms. p0 may be a BOOL.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_PROMOTION_ENABLED">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_CUSTOM_UPSELL_ENABLED">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SHOULD_SHOW_PROMOTION_DLG">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xFC6FCF4C03F1BBF6">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x160F0CE6D76A39C9">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_PROMOTION_DLG_SEEN_COUNT">
            <summary>
            Hardcoded to return zero.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SESSION_IS_PRIVATE">
            <summary>
            Checks for session flag 'SF_PRIVATE'
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_GET_SESSION_ID(System.UInt64*)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_ARE_SESSION_IDS_EQUAL(System.UInt64*,System.UInt64*)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.NETWORK.NETWORK_REQUEST_SESSION_SEAMLESS(System.Int32,System.Int32,System.UInt64*)" -->
        <member name="M:RDR2.Native.NETWORK.NETWORK_SESSION_REQUEST_SESSION_SEAMLESS(System.Int32,System.Int32,System.Int32,System.UInt64*)">
            <summary>
            Equivalent to NETWORK_REQUEST_SESSION_SEAMLESS if userHash == 0.
            Otherwise it is equivalent to NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(flags, MATCHTYPE_SEAMLESS, userHash, 0, sessionRequestId);
            
            p1 is unused
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SESSION_REQUEST_SESSION_COMPETITIVE(System.Int32,System.Int32,System.Int32,System.Int32,System.UInt64*)">
            <summary>
            matchType:
            enum eMatchType
            {
            	MATCHTYPE_DEPRECATED,
            	MATCHTYPE_UGCPLAYLIST,
            	MATCHTYPE_UGCMISSION,
            	MATCHTYPE_MINIGAME,
            	MATCHTYPE_SEAMLESS,
            	MATCHTYPE_PRIVATE_DO_NOT_USE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SESSION_REQUEST_SESSION_PRIVATE(System.Int32,System.Int32,System.Int32,System.UInt64*)">
            <summary>
            Session flag 'SF_PRIVATE' is set internally
            p1 represents max amount of players in private session
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_REQUEST_SESSION_ON_CALL(System.Int32,System.Int32,System.UInt64*,System.Int32,System.UInt64*)">
            <summary>
            category:
            enum eOnCallType
            {
            	NETWORK_SESSION_REQUEST_ON_CALL_TYPE_STORY = 2,
            	NETWORK_SESSION_REQUEST_ON_CALL_TYPE_MATCH = 3
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_GET_SESSION_REQUEST_RESULT(System.UInt64*,System.Int32*)">
            <summary>
            Returns result of session request:
            0 - NOT_FOUND
            1 - IN_PROGRESS
            2 - TIMEOUT
            3 - PLAYER_OFFLINE
            4 - GANG_MEMBERS_CHANGED
            5 - PLAYER_CANCELLED
            6 - PLAYER_SET_TOO_LARGE
            7 - MATCH_ACCEPTED
            8 - OTHER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xFD4272A137703449">
            <summary>
            Only used in R* Script startup_clip
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_PLAYLIST_GO_TO_NEXT_CONTENT">
            <summary>
            Only used in R* Script net_rolling_playlist
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_SESSION_PLAYLIST_GET_UPCOMING_CONTENT">
            <summary>
            Only used in R* Script net_rolling_playlist
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x71FA2D1880C48032(System.Boolean)">
            <summary>
            Only used in R* Script fm_race_controller
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x316FD416C432C761">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x062842D61D0D53FD">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_IS_IN_SESSION_LOBBY">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.NETWORK._NETWORK_SESSION_ADD_SESSION_FLAGS(System.Int32)" -->
        <member name="M:RDR2.Native.NETWORK.NETWORK_SESSION_REMOVE_SESSION_FLAGS(System.Int32)">
            <summary>
            See _NETWORK_SESSION_ADD_SESSION_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x78271BC02AE9AF83(System.Int32)">
            <summary>
            Note: this native was added in build 1436.31
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_ARE_ONLINE_NOTIFICATIONS_SHOWN_IN_STORY_MODE">
            <summary>
            Returns value of fwuiCachedSetting "general.onlineNotificationsInStoryMode"
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_IN_PLATFORM_PARTY">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_IN_PLATFORM_PARTY_CHAT">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.NETWORK.NETWORK_GET_MAX_NUM_PARTICIPANTS" -->
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_PLAYER_INDEX_FROM_PED(System.Int32)">
            <summary>
            Returns the Player associated to a given Ped when in an online session.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_NUM_CONNECTED_PLAYERS">
            <summary>
            Returns the amount of players connected in the current session. Only works when connected to a session/server.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.PARTICIPANT_ID">
            <summary>
            Return the local Participant ID
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.PARTICIPANT_ID_TO_INT">
            <summary>
            Return the local Participant ID.
            
            This native is exactly the same as 'PARTICIPANT_ID' native.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x6CF82A7F65A5AD5F(System.Int32,System.UInt64*)">
            <summary>
            _NETWORK_GET_A* - _NETWORK_GET_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x236321F1178A5446(System.Int32,System.Int32,System.UInt64*)">
            <summary>
            _NETWORK_GET_A* - _NETWORK_GET_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x950ACD8F05B7B9DF(System.UInt64)">
            <summary>
            Related to container entity (RANSACK_ATTACHED_LOCKBOX / RANSACK_ATTACHED_CHEST)
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xF260AF6F43953316(System.Int32)">
            <summary>
            Same Native Handler as VEH_TO_NET, PED_TO_NET, OBJ_TO_NET and NETWORK_GET_NETWORK_ID_FROM_ENTITY
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.VEH_TO_NET(System.Int32)">
            <summary>
            Returns the network ID of the given vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.PED_TO_NET(System.Int32)">
            <summary>
            Returns the network ID of the given ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.OBJ_TO_NET(System.Int32)">
            <summary>
            Returns the network ID of the given object.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NET_TO_PED(System.Int32)">
            <summary>
            gets the ped id of a network id
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NET_TO_OBJ(System.Int32)">
            <summary>
            gets the object id of a network id
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NET_TO_ENT(System.Int32)">
            <summary>
            gets the entity id of a network id
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x0CC28C08613BA9E5(System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_GAMERTAG_FROM_HANDLE(System.UInt64*)">
            <summary>
            Always returns a null string.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_DISPLAYNAMES_FROM_HANDLES_START(System.UInt64*,System.UInt64)">
            <summary>
            Hardcoded to return -1.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Hardcoded to return zero.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(System.UInt64*,System.String)">
            <summary>
            Example:
            
            char displayName[64];
            if (_NETWORK_GET_DISPLAY_NAME_FROM_HANDLE(handle, displayName))
            {
            	// use displayName
            }
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xF302AB9D978352EE(System.Int32)">
            <summary>
            Returns the entity's network ID.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x4538EE7C321590BC(System.Int32)">
            <summary>
            Returns the entity associated with the given network ID.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_PENDING_FRIEND(System.UInt64*)">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_CAN_ADD_FRIEND(System.UInt64*)">
            <summary>
            On PC this returns true if gamerHandle is a valid handle.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SET_PLAYER_IS_PASSIVE(System.Boolean)">
            <summary>
            Old name: _NETWORK_SET_PASSIVE_MODE_OPTION
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xBC7D36946D19E60E(System.Boolean)">
            <summary>
            Only used in fm_race_controller R* Script (PROCESS_LOCAL_PLAYER_INIT)
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x880A7202301E282B(System.UInt64*,System.UInt64*,System.Single,System.Single,System.Single,System.Single,System.UInt64)">
            <summary>
            Params: p5 = 50.f, p6 = 0 in R* Script net_fetch (NET_FETCH_CLIENT_UPDATE_PED_ROLE_CLUE_IDLE)
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xC964FCD3D1720697">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xEC089F84A9C16C62">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x02C4C6C2900D84DF(System.Int32,System.UInt64)">
            <summary>
            Only used in SP R* Script dominoes_sp: p1 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SET_ENTITY_ONLY_EXISTS_FOR_PARTICIPANTS(System.Int32,System.Boolean)">
            <summary>
            if set to true other network players can't see it
            if set to false other network player can see it
            =========================================
            ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
            
            pc or last gen?
            
            ^^ last-gen
            
            Old name: _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_NUM_RESERVED_MISSION_OBJECTS(System.Boolean)">
            <summary>
            p0 appears to be for MP
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_NUM_RESERVED_MISSION_PEDS(System.Boolean)">
            <summary>
            p0 appears to be for MP
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_NUM_RESERVED_MISSION_VEHICLES(System.Boolean)">
            <summary>
            p0 appears to be for MP
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._GET_RESERVED_MISSION_ENTITIES_FOR_THREAD(System.Int32,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Only used in R* Script net_stable_manager
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_RESERVED_MISSION_ENTITIES_IN_AREA(System.Single,System.Single,System.Single,System.Boolean,System.Int32*,System.Int32*,System.Int32*,System.Int32*)">
            <summary>
            Used in Script Function NET_ACE_CLIENT_VERIFY_ENTITY_RESERVATIONS
            Coords: Slot world position
            
            Old name: _GET_RESERVATIONS_FOR_SLOT_WORLD_POSITION
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x5F328FC909F0E0FF(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_MAX_NUM_NETWORK_OBJECTS">
            <summary>
            Always returns 60
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_MAX_NUM_NETWORK_PEDS">
            <summary>
            Always returns 110
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_MAX_NUM_NETWORK_VEHICLES">
            <summary>
            Always returns 40
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_MAX_NUM_NETWORK_PICKUPS">
            <summary>
            Always returns 80
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x979765465A6F25FC(System.Int32,System.Boolean)">
            <summary>
            Must be called from a background script, otherwise it will do nothing.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x5133CF81924F1129">
            <summary>
            Hardcoded to return zero.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x1E4E097D71D449FB(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x982D7AD755B8F62C(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x917AD74BDCF8B6E9(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xF8DC69DC1AD19072(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x744BFBB0CA908161(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x106CBDD5077DEDE1(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xBAF7E2979442B29F(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x039B692B3318FAB6(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x4835413EA6F9C9CD(System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_TIME_OFFSET(System.Int32,System.Int32)">
            <summary>
            Adds the first argument to the second.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.IS_TIME_LESS_THAN(System.Int32,System.Int32)">
            <summary>
            Subtracts the second argument from the first, then returns whether the result is negative.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.IS_TIME_MORE_THAN(System.Int32,System.Int32)">
            <summary>
            Subtracts the first argument from the second, then returns whether the result is negative.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_TIME_DIFFERENCE(System.Int32,System.Int32)">
            <summary>
            Subtracts the second argument from the first.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.CONVERT_POSIX_TIME(System.Int32,System.UInt64*)">
            <summary>
            Takes the specified time and writes it to the structure specified in the second argument.
            
            struct date_time
            {
                int year;
                int PADDING1;
                int month;
                int PADDING2;
                int day;
                int PADDING3;
                int hour;
                int PADDING4;
                int minute;
                int PADDING5;
                int second;
                int PADDING6;
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_PLAYER_IN_MP_CUTSCENE(System.Int32)">
            <summary>
            Note: scripts seem to indicate that this was renamed to NETWORK_IS_PLAYER_IN_MP_FAST_INSTANCE
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x34BC1E79546BA543(System.Boolean)">
            <summary>
            _NETWORK_A* - _NETWORK_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x26A867C0B7A456D1(System.Int32)">
            <summary>
            _GET_LAUNCH_PARAM_(RESPOT?)*
            Name is probably invalid since this native only reads data from parsed entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.SET_LOCAL_PLAYER_AS_GHOST(System.Boolean)">
            <summary>
            Old name: _SET_LOCAL_PLAYER_AS_GHOST
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.IS_ENTITY_A_GHOST(System.Int32)">
            <summary>
            Old name: _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._SET_PLAYER_VISIBILITY_TO_LOCAL_PLAYER_DISABLED(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_V* - _SET_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.IS_OBJECT_REASSIGNMENT_IN_PROGRESS">
            <summary>
            Note: this native was added in build 1311.16
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x039AD6B57D5179FF">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x02B3CDD652B3CDD6">
            <summary>
            Note: this native was added in build 1311.16
            
            GET_NUM_*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._GET_NUM_PEER_NEGOTIATION_RESPONSES">
            <summary>
            Note: this native was added in build 1311.16
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_DEBUG_REQUEST_ENTITY_POSITION(System.UInt64*)">
            <summary>
            Must be called from a background script, otherwise it will do nothing.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_ARE_PLAYERS_IN_SAME_TUTORIAL_SESSION(System.Int32,System.Int32)">
            <summary>
            Old name: _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x40FEDB13870042F1">
            <summary>
            Note: this native was added in build 1355.30
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x422F9D6D6C7BC290(System.Int32)">
            <summary>
            Note: this native was added in build 1355.30
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_REQUEST_CLOUD_TUNABLES">
            <summary>
            Note: this native was added in build 1311.23, but was only used after build 1436.25
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.CLEAR_SERVICE_EVENT_ARGUMENTS">
            <summary>
            Old name: _CLEAR_LAUNCH_PARAMS
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._UGC_QUERY_BY_CONTENT_TYPE(System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns ugcRequestId
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._UGC_QUERY_BY_CATEGORY(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns ugcRequestId
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._UGC_QUERY_BY_CONTENT_ID(System.String,System.Boolean,System.String)">
            <summary>
            Returns ugcRequestId
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._UGC_QUERY_GET_CREATOR_PHOTO(System.UInt64,System.Int32,System.UInt64)">
            <summary>
            Returns string for GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._UGC_HAS_PRIVILEGE">
            <summary>
            Checks if the user has ROS privilege 14.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_PERSONA_PHOTO_WRITE_SC_PROFILE(System.String,System.Int32,System.Int32)">
            <summary>
            Returns false if pedshot push failed
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_PERSONA_PHOTO_WRITE_LOCAL(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns false if pedshot push failed
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_IS_PREVIOUS_UPLOAD_PENDING">
            <summary>
            _NETWORK_IS_T* - _NETWORK_RE*
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x356F9FB0698C1FEB(System.Int32,System.Int32)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xCAF4CA2F87779F8F(System.UInt64*,System.Int32)">
            <summary>
            Only used in R* SP Script map_app_event_handler
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.TEXTURE_DOWNLOAD_REQUEST(System.UInt64*,System.String,System.String,System.Boolean)">
            <summary>
            Returns textureDownloadId
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._MUGSHOT_TEXTURE_DOWNLOAD_REQUEST(System.UInt64*,System.Int32,System.String,System.Boolean)">
            <summary>
            Returns textureDownloadId
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.GET_STATUS_OF_TEXTURE_DOWNLOAD(System.Int32)">
            <summary>
            0 = succeeded
            1 = pending
            2 = failed
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(System.UInt64*)">
            <summary>
            Always returns -1. Seems to be XB1 specific.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xFD8112109A96877C">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xFB3205788F8AFA3F">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x335AF56613CA0F49(System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x9E5A47744C0F0376(System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xD3B6EBC6C3D77D44(System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xA7670F7991099680(System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x7673C0D2C5CDAC55">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x3CBD6565D9C3B133(System.Int32,System.Int32,System.Single)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x0D183D8490EE4366(System.Int32,System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xC1968045EEB563B7(System.Int32)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION(System.Int32,System.Boolean)">
            <summary>
            Old name: _NETWORK_ALLOW_LOCAL_ENTITY_ATTACHMENT
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SHOW_CHAT_RESTRICTION_MSC(System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_SHOW_PSN_UGC_RESTRICTION">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_CONNECTED_VIA_RELAY(System.Int32)">
            <summary>
            Old name: _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_AVERAGE_LATENCY(System.Int32)">
            <summary>
            Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_AVERAGE_PING(System.Int32)">
            <summary>
            Same as NETWORK_GET_AVERAGE_LATENCY (0xD414BE129BB81B32)
            
            Old name: _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_AVERAGE_PACKET_LOSS(System.Int32)">
            <summary>
            Old name: _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_NUM_UNACKED_RELIABLES(System.Int32)">
            <summary>
            Old name: _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_UNRELIABLE_RESEND_COUNT(System.Int32)">
            <summary>
            Old name: _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_HIGHEST_RELIABLE_RESEND_COUNT(System.Int32)">
            <summary>
            Old name: _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_DUMP_NET_IF_CONFIG">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_GET_NET_STATISTICS_INFO">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_IS_PLAYER_INDEX_VALID(System.Int32)">
            <summary>
            Returns true if the passed value is less than 32.
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK.NETWORK_TRIGGER_DAMAGE_EVENT_FOR_ZERO_DAMAGE(System.Int32,System.Boolean)">
            <summary>
            Old name: _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x2CD41AC000E6F611">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0xACC44768AF229042">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x19447FCAE97704DC(System.UInt32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Note: this native was added in build 1311.23
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._0x2C4E98DDA475364F(System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.NETWORK._NETWORK_GET_ROS_TITLE_NAME">
            <summary>
            Returns CGameConfig->ConfigOnlineServices->RosTitleName (see gameconfig.xml)
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.DELETE_OBJECT(System.Int32*)">
            <summary>
            Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_OBJECT_TARGETTABLE_FOCUS(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            When p1 and p2 are true you can focus on the object (similar to when you focus a ped)
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.GET_CLOSEST_OBJECT_OF_TYPE(System.Single,System.Single,System.Single,System.Single,System.UInt32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            isMission - if true doesn't return mission objects
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Old name: _GET_OBJECT_OFFSET_FROM_COORDS
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._ADD_DOOR_TO_SYSTEM_NEW(System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Registers a door, hashes: https://github.com/femga/rdr3_discoveries/tree/master/doorHashes
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.DOOR_SYSTEM_SET_DOOR_STATE(System.UInt32,System.Int32)">
            <summary>
            Door lock states:
            enum eDoorState
            {
            	DOORSTATE_INVALID = -1,
            	DOORSTATE_UNLOCKED,
            	DOORSTATE_LOCKED_UNBREAKABLE,
            	DOORSTATE_LOCKED_BREAKABLE,
            	DOORSTATE_HOLD_OPEN_POSITIVE,
            	DOORSTATE_HOLD_OPEN_NEGATIVE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.DOOR_SYSTEM_SET_OPEN_RATIO(System.UInt32,System.Single,System.Boolean)">
            <summary>
            Sets the ajar angle of a door.
            Ranges from -1.0 to 1.0, and 0.0 is closed / default.
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._IS_DOOR_REGISTERED_WITH_OWNER(System.UInt32)">
            <summary>
            Returns true if door is alredy registered with owner
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._0x0943113E02322164(System.Int32,System.Int32)">
            <summary>
            Params: p1 = 23 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.SET_OBJECT_PHYSICS_PARAMS(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
            
            Other parameters seem to be unknown.
            
            p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
            p3: seems similar to p2
            p4: makes obj fall slower the higher the value
            p5: similar to p4
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_LIGHT_TRANSLUCENCY_FOR_OBJECT(System.Int32,System.Single)">
            <summary>
            Params: value = 0.0 - 586.67 (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.CREATE_PICKUP(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.UInt32,System.Int32,System.Single,System.UInt64)">
            <summary>
            https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Placement%20Flags
            https://github.com/femga/rdr3_discoveries/blob/master/objects/pickup_list.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.CREATE_PICKUP_ROTATE(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean,System.UInt32,System.Int32,System.Single,System.UInt64)">
            <summary>
            flags: see CREATE_PICKUP
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.CREATE_AMBIENT_PICKUP(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Boolean,System.Boolean,System.Int32,System.Single)">
            <summary>
            flags: see CREATE_PICKUP
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_NETWORK_PICKUP_USABLE_FOR_PLAYER(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Params: p2 controls whether to make pickups usable/collectable or not in networked games
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.SET_LOCAL_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_WITH_MODEL(System.UInt32,System.Boolean)">
            <summary>
            Maximum amount of pickup models that can be disallowed is 10.
            
            Old name: _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._0x1F5E07E14A86FAFC(System.Boolean)">
            <summary>
            _SET_A(MBIENT_PICKUP_?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.SET_OBJECT_TINT_INDEX(System.Int32,System.Int32)">
            <summary>
            Alt name: _SET_OBJECT_TINT
            
            Old name: _SET_OBJECT_TEXTURE_VARIATION
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._GET_OBJECT_LIGHT_INTENSITY(System.Int32)">
            <summary>
            Returns float value to be used with _SET_LIGHT_INTENSITY_FOR_OBJECT
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_OBJECT_BURN_LEVEL(System.Int32,System.Single,System.Boolean)">
            <summary>
            Seems to mostly have effect on wood-made objects https://imgur.com/a/32oQvOn
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_OBJECT_BURN_SPEED(System.Int32,System.Single,System.Single)">
            <summary>
            p2 is usually the same as speed parameter
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.CONVERT_OLD_PICKUP_TYPE_TO_NEW(System.UInt32)">
            <summary>
            Old name: _GET_PICKUP_HASH
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT.ONLY_CLEAN_UP_OBJECT_WHEN_OUT_OF_RANGE(System.Int32)">
            <summary>
            Old name: _MARK_OBJECT_FOR_DELETION
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._0xCAAF2BCCFEF37F77(System.Int32,System.UInt64)">
            <summary>
            _SET_OBJECT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._MAKE_ITEM_CARRIABLE(System.Int32)">
            <summary>
            _PRE* or _Q* or _RE*
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_AUTO_JUMPABLE_BY_HORSE(System.Int32,System.Boolean)">
            <summary>
            Sets object as auto-jumpable by horse.
            </summary>
        </member>
        <member name="M:RDR2.Native.OBJECT._SET_NOT_JUMPABLE_BY_HORSE(System.Int32,System.Boolean)">
            <summary>
            Sets object as not jumpable by horse.
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD._SET_CONTROL_CONTEXT(System.Int32,System.UInt32)">
            <summary>
            Sets the current control context. Must be called every frame.
            
            context: https://alloc8or.re/rdr3/doc/misc/input_contexts.txt
            For more information, see common:/data/control/settings.meta
            https://github.com/femga/rdr3_discoveries/tree/master/Controls
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_VALUE_NEXT_FRAME(System.Int32,System.UInt32,System.Single)">
            <summary>
            This is for simulating player input.
            value is a float value from 0 - 1
            
            control: see IS_CONTROL_ENABLED
            
            Old name: _SET_CONTROL_NORMAL
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.GET_CONTROL_HOW_LONG_AGO(System.Int32)">
            <summary>
            Returns time in ms since last input.
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.IS_USING_KEYBOARD_AND_MOUSE(System.Int32)">
            <summary>
            padIndex is not used
            
            Old name: _IS_USING_KEYBOARD
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_LIGHT_EFFECT_COLOR(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            nullsub, doesn't do anything
            
            Old name: _SET_CONTROL_GROUP_COLOR
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.CLEAR_CONTROL_LIGHT_EFFECT(System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_LIGHT_EFFECT_FLASHING_COLOR(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_SHAKE(System.Int32,System.Int32,System.Int32)">
            <summary>
            Old name: SET_PAD_SHAKE
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_TRIGGER_SHAKE(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.STOP_CONTROL_SHAKE(System.Int32)">
            <summary>
            Old name: STOP_PAD_SHAKE
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.SET_CONTROL_SHAKE_SUPPRESSED_ID(System.Int32,System.Int32)">
            <summary>
            Old name: SET_PAD_SHAKE_SUPPRESSED_ID
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD.CLEAR_CONTROL_SHAKE_SUPPRESSED_ID(System.Int32)">
            <summary>
            Old name: _CLEAR_SUPPRESSED_PAD_RUMBLE
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD._0x5F217BC1190503D8(System.String,System.Single)">
            <summary>
            rumbleCurve: common_0/data/rumblecurves.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.PAD._0x1252C029FC8EBB4D">
            <summary>
            _IS_R* - _IS_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.IS_VEHICLE_NODE_ID_VALID(System.Int32)">
            <summary>
            Returns true if the id is non zero.
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.REQUEST_PATH_NODES_IN_AREA_THIS_FRAME(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Old name: REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.IS_POINT_ON_ROAD(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Gets a value indicating whether the specified position is on a road.
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.IS_NAVMESH_LOADED_IN_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns whether navmesh for the region is loaded.
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND._NAVMESH_QUERY_STATUS(System.UInt64)">
            <summary>
            Returns eNavMeshQueryStatus
            enum eNavMeshQueryStatus
            {
            	QS_NOT_FOUND,
            	QS_COMPLETE,
            	QS_PENDING
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.GET_APPROX_FLOOR_FOR_POINT(System.Single,System.Single)">
            <summary>
            Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND.SET_IGNORE_NO_GPS_FLAG(System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PATHFIND._0xF2A2177AC848B3A8(System.Int32,System.Int32,System.Int32)">
            <summary>
            GPS disabled zone: p1 = 0
            Clearing GPS disabled zone: p1 = 1
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.DELETE_PED(System.Int32*)">
            <summary>
            Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7C08E7CB8D951B70(System.Int32,System.Single)">
            <summary>
            Only used in SP
            _SET_REMOVE_PED*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.CLONE_PED_TO_TARGET(System.Int32,System.Int32)">
            <summary>
            Copies ped's components and props to targetPed.
            Can be used to clear anything from a ped by cloning it, including bullet holes.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_IN_VEHICLE(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether the specified ped is in the specified vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_IN_ANY_VEHICLE(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether the specified ped is in any vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_INJURED(System.Int32)">
            <summary>
            Gets a value indicating whether this ped's health is below its injured threshold.
            
            The default threshold is 100.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_FATALLY_INJURED(System.Int32)">
            <summary>
            Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
            If the handle is invalid, the function returns true.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_BLEEDOUT_PROFILE(System.Int32,System.UInt32)">
            <summary>
            Bleedout profiles:
            Animal_FastBleedout
            Animal_Generic
            Human_FastBleedout
            Human_Generic
            Human_Mission
            
            For more information, see common/data/ai/peddamageinfo.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_RELOADING(System.Int32)">
            <summary>
            Returns whether the specified ped is reloading.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._IS_ANIMAL_CONTROLLED_BY_A_PLAYER(System.Int32)">
            <summary>
            Returns true only if it's a player ped and an animal as well.
            _IS_ANY_* - _IS_CONTROL_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.CREATE_PED_INSIDE_VEHICLE(System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            seatIndex:
            enum eVehicleSeat
            {
            	VS_ANY_PASSENGER = -2,
            	VS_DRIVER,
            	VS_FRONT_RIGHT,
            	VS_BACK_LEFT,
            	VS_BACK_RIGHT,
            	VS_EXTRA_LEFT_1,
            	VS_EXTRA_RIGHT_1,
            	VS_EXTRA_LEFT_2,
            	VS_EXTRA_RIGHT_2,
            	VS_EXTRA_LEFT_3,
            	VS_EXTRA_RIGHT_3,
            	VS_NUM_SEATS
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.FORCE_ALL_HEADING_VALUES_TO_ALIGN(System.Int32)">
            <summary>
            Old name: _FREEZE_PED_CAMERA_ROTATION
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_FACING_PED(System.Int32,System.Int32,System.Single)">
            <summary>
            angle is ped's view cone
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_IN_MELEE_COMBAT(System.Int32)">
            <summary>
            Notes: The function only returns true while the ped is: 
            A.) Swinging a random melee attack (including pistol-whipping)
            
            B.) Reacting to being hit by a melee attack (including pistol-whipping)
            
            C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter). 
            
            You don't have to be holding the melee-targeting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x6DB875AFC584FA32(System.Int32,System.Int32)">
            <summary>
            Only used in R* SP Script winter1: p1 = 5000
            _SET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9C81338B2E62CE0A(System.Int32,System.Int32,System.Int32)">
            <summary>
            If returned true: CHECK_SHOT_NEAR: Succeeded shot near
            If returned false: CHECK_SHOT_NEAR: Failed shot near
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_SHOOTING(System.Int32)">
            <summary>
            Returns whether the specified ped is shooting.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.TIME_SINCE_PED_LAST_SHOT(System.Int32)">
            <summary>
            Returns time since the specified ped last shot, in seconds. (fPlayerJustShotTime)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_ACCURACY(System.Int32,System.Int32)">
            <summary>
            accuracy = 0-100, 100 being perfectly accurate
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.EXPLODE_PED_HEAD(System.Int32,System.UInt32)">
            <summary>
            Forces the ped to fall back and kills it.
            
            It doesn't really explode the ped's head but it kills the ped
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.ADD_ARMOUR_TO_PED(System.Int32,System.Int32)">
            <summary>
            Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED._0x5CA20FBE49891BBD(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.PED.SET_PED_INTO_VEHICLE(System.Int32,System.Int32,System.Int32)">
            <summary>
            Ped: The ped to warp.
            vehicle: The vehicle to warp the ped into.
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x606D529DADA3C940(System.Int32,System.UInt64)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_MALE(System.Int32)">
            <summary>
            Returns true/false if the ped is/isn't male.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_HUMAN(System.Int32)">
            <summary>
            Returns true/false if the ped is/isn't humanoid.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_VEHICLE_PED_IS_IN(System.Int32,System.Boolean)">
            <summary>
            Gets the vehicle the specified Ped is in.
            
            If the Ped is not in a vehicle and includeLastVehicle is true, the vehicle they were last in is returned.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.RESET_PED_LAST_VEHICLE(System.Int32)">
            <summary>
            Resets the value for the last vehicle driven by the Ped.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED._0x6E8B87139854022D(System.Int32,System.String)" -->
        <member name="M:RDR2.Native.PED._0x9E3842E5DAD69F80(System.Int32)">
            <summary>
            Only used in SP R* Script loanshark_hunter
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_SCENARIO_PED_DENSITY_THIS_FRAME(System.UInt32)">
            <summary>
            Sets the scenario ped density to the given config.
            
            Valid configs:
            - BLACKWATER
            - DEFAULT
            - NEWBORDEAUX
            - RHODES
            - STRAWBERRY
            - TUMBLEWEED
            - VALENTINE
            - VANHORN
            
            See common/data/ai/densityscoringconfigs.meta for more information.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xBFA6B7731C3BAF02">
            <summary>
            Only used in R* Script tg_p (CLIENT__AMBIENT_POPULATION - Player starts the populate in region)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_NON_CREATION_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            The distance between these points, is the diagonal of a box (remember it's 3D).
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_LAST_LED_MOUNT(System.Int32)">
            <summary>
            Returns last horse the ped was leading
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xED1C764997A86D5A(System.Int32,System.Int32)">
            <summary>
            Only used in R* Script nb_stalking_hunter
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB8AB265426CFE6DD(System.Int32,System.Boolean)">
            <summary>
            _SET_HO*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE8D1CCB9375C101B(System.Int32,System.Int32)">
            <summary>
            Returns dismounted timestamp
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_HORSE_TAMING_STATE(System.Int32)">
            <summary>
            Returns an int based on enum eTamingState
            
            enum eTamingState
            {
            	ATS_INVALID = 0,
            	ATS_INACTIVE,
            	ATS_TARGET_DETECTED,
            	ATS_CALLED_OUT,
            	ATS_MOUNTABLE,
            	ATS_BEING_PATTED,
            	ATS_BREAKING_ACTIVE,
            	ATS_SPOOKED,
            	ATS_RETREATING,
            	ATS_FLEEING
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_MOUNT_SECURITY_ENABLED(System.Int32,System.Boolean)">
            <summary>
            Note: this native was added in build 1232.40
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9B65444C07B782BF(System.Int32,System.String)">
            <summary>
            Only used in SP R* Script winter1: p1 = Winter1Mount
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8BE24D74D74C6E9B(System.Int32)">
            <summary>
            Used in Script Function NET_CAMP_DOG_CLIENT_HANDLE_ANIMAL_INTERACTION
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x77243ED4F7CAAA55(System.Int32)">
            <summary>
            _IS_I* - _IS_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_ON_VEHICLE(System.Int32,System.Boolean)">
            <summary>
            Gets a value indicating whether the specified ped is on top of any vehicle.
            
            Return 1 when ped is on vehicle.
            Return 0 when ped is not on a vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_SITTING_IN_VEHICLE(System.Int32,System.Int32)">
            <summary>
            Detect if ped is sitting in the specified vehicle
            [True/False]
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_SITTING_IN_ANY_VEHICLE(System.Int32)">
            <summary>
            Detect if ped is in any vehicle
            [True/False]
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x256EDD55C6BE1482(System.Int32)">
            <summary>
            _IS_PED_FL* - _IS_PED_FU*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_DAMAGE_CLEANLINESS(System.Int32)">
            <summary>
            enum ePedDamageCleanliness
            {
            	PED_DAMAGE_CLEANLINESS_POOR,
            	PED_DAMAGE_CLEANLINESS_GOOD,
            	PED_DAMAGE_CLEANLINESS_PERFECT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DAMAGE_CLEANLINESS(System.Int32,System.Int32)">
            <summary>
            damageCleanliness: see _GET_PED_DAMAGE_CLEANLINESS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_DAMAGED(System.Int32)">
            <summary>
            Returns true if _GET_PED_DAMAGE_CLEANLINESS was ever lower than 2
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER(System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Animal Skin Quality Modifier
            Params: p2 = 2, p3 = 3 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PLAYER_CURRENT_ANIMAL_DAMAGE_MODIFIER(System.Int32)">
            <summary>
            Returns animal skin quality modifier
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB29C553BA582D09E(System.UInt64*,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Used in Script Function SATCHEL_COUNT_BREAKDOWN_COMPONENTS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._COMPUTE_SATCHEL_ITEM_FOR_PED_CARCASS(System.UInt64*,System.Int32,System.Int32,System.Int32)">
            <summary>
            Related to dead animals items/loots
            Notice: skinningQuality is partially calculated using pedQuality
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_TOTAL_PED_DAMAGE_FROM_AI(System.Int32,System.Single)">
            <summary>
            _SET_W(EAPON?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA6D6F03095C88F59(System.Int32)">
            <summary>
            _DELETE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_TOTAL_PED_DAMAGE_FROM_AI(System.Int32)">
            <summary>
            _GET_WA*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_TO_PLAYER_WEAPON_DAMAGE_MODIFIER(System.Int32,System.Single)">
            <summary>
            Old name: _SET_PED_DAMAGE_MODIFIER
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x763FA8A9D76EE3A7(System.Int32)">
            <summary>
            Used in Script Function NB_EVENT_OVERRIDE__HANDLE__EVENT_DAMAGE_ENTITY
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3FDCC1F8C17E303E(System.Int32,System.Int32,System.Single)">
            <summary>
            Changes health bar around heart core icon
            INITIALISE_NEW_ROLE - Applying Super Jump buffs: p1 = 10, p2 = 0.0f
            INITIALISE_NEW_ROLE - Clearing up Super Jump buffs: p1 = 10, p2 = 1.0f
            _SET_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE50C9816B3F22D8B(System.Int32,System.UInt32,System.Single)">
            <summary>
            _SET_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7883AA809DF43D98(System.Int32,System.Single)">
            <summary>
            _SET_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC5B78E41DCF8227C(System.Int32,System.Boolean)">
            <summary>
            _SET_H* - _SET_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x577C60BA06D0EA64(System.Int32)">
            <summary>
            _IS_PED_C* - _IS_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_OPENING_DOOR(System.Int32)">
            <summary>
            Returns true if the ped is currently opening a door (CTaskOpenDoor).
            
            Old name: _IS_PED_OPENING_A_DOOR
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x5C6C7C70CA302801(System.Int32)">
            <summary>
            _IS_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB91AB3BE7F655D49(System.Int32)">
            <summary>
            _IS_PED_J* - _IS_PED_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x028E7B3BBA0BD2FC(System.Int32)">
            <summary>
            _SET_ST* - _SET_SW*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xFA8C10DCE0706D43(System.Int32)">
            <summary>
            _HAS_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x2BA9D7BF629F920C(System.Int32)">
            <summary>
            Used in Script Function CHECK_IS_PLAYER_SEEN
            _GET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x900CA00CE703E1E2(System.Int32)">
            <summary>
            Used in Script Function AGGRO_SHOULD_PED_HEAR_DEATH
            _GET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9AB33CB5834885B3(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            _SET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x899DFA0009AC93DE(System.Int32,System.Single)">
            <summary>
            _SET_PED_O*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3A5697B80FED5EBE(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            _SET_PED_MO*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_STEALTH_MOVEMENT(System.Int32,System.Boolean,System.UInt64,System.UInt64)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_STEALTH_MOVEMENT(System.Int32)">
            <summary>
            Returns whether the entity is in stealth mode
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.CREATE_GROUP(System.Int32)">
            <summary>
            Creates a new ped group.
            Groups can contain up to 8 peds.
            
            The parameter is unused.
            
            Returns a handle to the created group, or 0 if a group couldn't be created.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This only will teleport the ped to the group leader if the group leader teleports (sets coords).
            
            Only works in singleplayer
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_GROUP_SEPARATION_RANGE(System.Int32,System.Single)">
            <summary>
            Sets the range at which members will automatically leave the group.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x89E59DBD15E21177(System.Int32,System.Int32)">
            <summary>
            _SET_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7583A9D35248B83F(System.Int32)">
            <summary>
            _IS_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x2DD4E0E26DFAD97D(System.Int32,System.Int32,System.Single)">
            <summary>
            _IS_PED_M* - _IS_PED_O*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_ACTIVE_DYNAMIC_SCENARIO_2(System.Int32)">
            <summary>
            Returns kneeling, sitting, squating, and sleeping scenario hashes
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_ACTIVE_DYNAMIC_SCENARIO(System.Int32)">
            <summary>
            Returns kneeling, sitting, squating, and sleeping scenario hashes
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GIVE_PED_SCENARIO_PROP_DYNAMIC(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Only used in SP R* Script rcm_jack2
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_REGISTER_PROP(System.Int32,System.String,System.Boolean)">
            <summary>
            Params: p1 = p_banjo01x_XH_R_HAND00, mp006_p_dblcello01x_XH_R_HAND00, p_fiddle01x_PH_L_HAND, p_guitar01x_XH_R_HAND00, mp006_p_mnshn_washboard01x_XH_R_HAND00, p_bottleBeer01x_PH_R_HAND
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_SOURCE_OF_DEATH(System.Int32)">
            <summary>
            Returns the entity that killed the ped
            
            It is best to check if the Ped is dead before asking for its killer.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_CAUSE_OF_DEATH(System.Int32)">
            <summary>
            Returns the hash of the weapon/model/object that killed the ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.ADD_RELATIONSHIP_GROUP(System.String,System.UInt32*)">
            <summary>
            The hash of the created relationship group is output in the second parameter.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xDC91F22F09BC6C2F(System.UInt32,System.Boolean)">
            <summary>
            Used in Script Function MP_MAIN_OFFLINE__INITIALIZE_GAME
            _SET_RELATIONSHIP_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3ACCE14DFA6BA8C2(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Used in R* Script net_fetch (NET_FETCH_UPDATE_RECIPIENT_PROP_ILO_IN_COMBAT) and various SP Scripts
            Params: p1 = 4/5/6, p5 = 40.f/100.f, coords = Player ped
            Perhaps returns some distance (Clearing that the local player is able to use ILO while in combat because they are near the recipient but also near hated peds)
            _GET_NUM_M* - _GET_PEDS_J*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x40C9155AF8BC13F3(System.Int32)">
            <summary>
            _IS_PED_RE*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xF4860514AD354226(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32*)">
            <summary>
            Only used in SP Scripts
            Returns count / index
            _C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_RESPONDING_TO_EVENT(System.Int32,System.UInt32)">
            <summary>
            eventType: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x5E9FAF6C513347B4(System.Int32,System.UInt32)">
            <summary>
            Only used in R* SP Scripts
            _GET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x326F7951EF0D7F75(System.Int32,System.UInt32)">
            <summary>
            Only used in R* SP Script short_update
            _GET_TARGET_* - _GET_TRACKED*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE76687023D8C8505(System.UInt32,System.Int32)">
            <summary>
            Used for AUDIO / ANIMSCENE (REFERENCE_REGIONAL_CHARACTER)
            Params: p1 = 0
            _GET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xCB8F4C9343EBE240(System.Int32,System.UInt32,RDR2.Math.Vector3*)">
            <summary>
            Only used in R* SP Scripts
            _GET_PLAYER_W* - _GET_RANDOM_*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED.SET_PED_FIRING_PATTERN(System.Int32,System.UInt32)" -->
        <member name="M:RDR2.Native.PED._SET_PED_FIRING_PATTERN_2(System.Int32,System.UInt32)">
            <summary>
            Used in R* MP Script fm_mission_controller and various R* SP Scripts for ambush*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_FIRING_PATTERN_3(System.Int32,System.UInt32)">
            <summary>
            Only used in R* MP Script fm_mission_controller
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOOT_RATE(System.Int32,System.Int32)">
            <summary>
            Params: shootRate = 0 - 1000
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3C529A827998F9B3(System.Int32,System.Int32,System.Int32)">
            <summary>
            _SET_PED_TA* - _SET_PED_TO_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x1F44B7E283C09EDE(System.Int32,System.Single,System.Int32)">
            <summary>
            Only used in SP R* Scripts
            Params: p2 = same as p2 of 0x3C529A827998F9B3
            _SET_PED_TA* - _SET_PED_TO_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_COMBAT_FLOAT(System.Int32,System.Int32,System.Single)">
            <summary>
            combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
            https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_FLOATS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x0455546F23FF08E4(System.Int32)">
            <summary>
            _DOES_GROUP_* - _DOES_N*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_GROUP_INDEX(System.Int32)">
            <summary>
            Returns the groupId of which the specified ped is a member of.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x917760CFE7A0E0F1(System.Int32)">
            <summary>
            _IS_PED_L* - _IS_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_GROUP_FORMATION(System.Int32,System.Int32)">
            <summary>
            eFormationType
            
            0: Default
            1: Circle Around Leader
            2: Alternative Circle Around Leader
            3: Line, with Leader at center
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB05CC690CDE8A4A9(System.Int32,System.Single)">
            <summary>
            Used to set up bad guy groups in nb_kidnapped R* Script (MP_RE_KIDNAPPED): p1 = 4.f
            _SET_FORMATION_*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED._0x8AF8E647D6B2A649(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.PED._0x87C2724A56F66020(System.Int32)">
            <summary>
            _CLEAR_PED_E* - _CLEAR_PED_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xD5BD1B5318A81994(System.Int32,System.Boolean)">
            <summary>
            _SET_FORMATION_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9BBEAF8B0C007F1E(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_CAN_B* - _SET_PLAYER_CAN_U*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC99F104BDF8C7F5A(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_N* - _SET_PLAYER_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x02E741E19E39628C(System.Int32,System.Single)">
            <summary>
            _SET_PLAYER_SN* - _SET_PLAYER_STAMINA*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x97C475212B327666(System.Int32,System.Boolean)">
            <summary>
            _SET_SCENARIO_PED_* - _SET_SPAWNER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x154B7E841AC7412F(System.Int32,System.Boolean)">
            <summary>
            _SET_SCENARIO_PED_* - _SET_SPAWNER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8AFCCC0F18D70018(System.Int32,System.Boolean)">
            <summary>
            _SET_FORMATION_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE1103300F3456DE7(System.Int32,System.Single,System.Single)">
            <summary>
            _SET_FORMATION_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA8A95CECB1906EA2(System.Int32,System.Boolean)">
            <summary>
            _SET_ENABLE_B* - _SET_ENABLE_H*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xDDFAD4DEAA7FA362(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            _SET_FORMATION_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x966DE09688A1DE39(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            _SET_FORMATION_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7E5185B979706210(System.Int32,System.Int32)">
            <summary>
            _SET_FORMATION_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x40C3524D4ED83554(System.Int32,System.Boolean)">
            <summary>
            _SET_SCENARIO_PED_* - _SET_SPAWNER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xF9CBD46433E36713(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Used in Script Function PLAYER_HEAD_TRACKING_MAINTAIN
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x96595B36D6A2279B(System.Int32,System.Boolean)">
            <summary>
            Only used in R* Script mob4 combined with SET_ANIMAL_TUNING_BOOL_PARAM
            _SET_PED_S* - _SET_PED_TARGET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_IMMERSION_FLAG(System.Int32,System.Boolean)">
            <summary>
            Only used in R* Script beat_sharp_shooter
            Blocks ped from swimming underwater
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA90684ED185CCB4B(System.Int32,System.Boolean,System.Single,System.Single)">
            <summary>
            Only used in R* Script mob4 and rcm_mason4
            _SET_PED_DEFENSIVE_* - _SET_PED_DESIRED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.APPLY_DAMAGE_TO_PED(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            damages a ped with the given amount
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xBAD2A311667A50D7(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_AS_COP(System.Int32,System.Boolean)">
            <summary>
            Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
            toggle = bSetRelGroup
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x405180B14DA5A935(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_INTERACTION_PERSONALITY(System.Int32,System.UInt32)">
            <summary>
            personality (script_mp_rel): NONE, AGGRESSIVE, TIMID (non-aggressive), CRIPPS, SCRIPTEDINTIMIDATION, MAGGIE, MARCEL, SCRIPTEDSALOON
            personality (script_rel): AVOID, SCRIPTEDOUTLAW, TIMIDGUARDDOG, SCRIPTEDTIMIDROB, AGGRESSIVECAMPER, LAZYDOG, KIERANTIEDUP, SCRIPTEDGALA
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB8B6430EAD2D2437(System.Int32,System.UInt32)">
            <summary>
            Hashes: STANDARD_PED_AGRO_GUARD, BOUNTY_HUNTER, PLAYER_HORSE
            _SET_PED_P* - _SET_PED_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x329772C47DBB2FBC(System.Int32)">
            <summary>
            _SET_PED_P* - _SET_PED_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_IS_PED_IN_DISPUTE_WITH_PED(System.Int32,System.Int32)">
            <summary>
            Returns true if ped is in a dispute another ped (pedInDisputeWith can also be 0)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x94132D7C8D3575C4(System.Int32)">
            <summary>
            _GET_IS_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8AF46E5159A5B620(System.Int32,System.UInt32)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x45FEA6D5539BD474(System.Int32,System.String)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x20C5459379D75C1C(System.Int32,System.String)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE37ACEE15AC50C7E(System.Int32,System.String)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA3C53CDE922BC78B(System.Int32,System.String)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x41C23A8E6B344867(System.Int32,System.String)">
            <summary>
            _SET_PED_IN*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA7DC9266ED6A4E51(System.Int32)">
            <summary>
            _CLEAR_PED_B* - _CLEAR_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x89816B58C3466262(System.Int32)">
            <summary>
            _GET_PED_B* - _GET_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x97B06669AC569003(System.Int32,System.Int32)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x85F500F4E24CA43E(System.Int32,System.Single)">
            <summary>
            Used in Script Function SKCS_PLAYER_ROBBING
            _SET_PED_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9B9B9FA0EA283E3D(System.Int32,System.Single)">
            <summary>
            Used in Script Function SKCS_PLAYER_ROBBING
            _SET_PED_SHOULD_PLAY_* - _SET_PED_SW*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xEC60D1D225BC50AA(System.Int32,System.Single)">
            <summary>
            _SET_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x12F2D161BF4031FC(System.Int32,System.Single)">
            <summary>
            _SET_A* - _SET_B*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_IS_PED_BEING_ROBBED(System.Int32,System.Int32,System.Boolean)">
            <summary>
            If p2 is false, then this native will return true until the interaction is complete. If true, the native will return true until player pockets robbery item.
            _GET_IS_PED_[M-R]*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xD55DB4466D00A258(System.Int32)">
            <summary>
            Used in Script Function LA_CHECK_ALERTED
            _GET_IS_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_MAX_HEALTH(System.Int32,System.Int32)">
            <summary>
            Sets the maximum health of a ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_HEALTH_CONFIG(System.Int32,System.UInt32)">
            <summary>
            configHash: see pedhealth.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xAF041C10756C30FB(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            _CLEAR_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x5AF24CA9C974E51A(System.Int32,System.Int32)">
            <summary>
            _SET_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(System.Int32,System.Int32)">
            <summary>
            state:
            enum eKnockOffVehicle
            {
            	KNOCKOFFVEHICLE_DEFAULT,
            	KNOCKOFFVEHICLE_NEVER,
            	KNOCKOFFVEHICLE_EASY,
            	KNOCKOFFVEHICLE_HARD
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xDC88D06719070C39(System.Int32)">
            <summary>
            _IS_PED_IN_* (near water?)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x550CB89DD7F4FA3D(System.Int32,System.Int32)">
            <summary>
            _HAS_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_ENABLE_HANDCUFFS(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Ped can not pull out a weapon when true
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8822F139408B8D0A(System.Int32)">
            <summary>
            If returned true, SET_ENABLE_BOUND_ANKLES is called in R* Script guama2
            _GET_D* - _GET_E*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8822F124788B8D0A(System.Int32,System.Boolean)">
            <summary>
            Only used in R* Script train_robbery4
            _SET_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x88A95BB640FC186F(System.Int32)">
            <summary>
            Used in R* Script generic_weight_control_item
            _CLEAR_PED_E* - CLEAR_PED_(G?)L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DESIRED_LOCO_FOR_MODEL(System.Int32,System.String)">
            <summary>
            Seems to set the ped's loco type.
            Values used in the scripts:
            algie
            angry_female
            arthur_healthy
            cowboy
            cowboy_f
            default
            default_female
            free_slave_01
            free_slave_02
            gold_panner
            guard_lantern
            injured_general
            john_marston
            lilly_millet
            lone_prisoner
            lost_man
            mp_ova_hunter
            mp_ova_hunter_female
            murfree
            old_female
            primate
            rally
            waiter
            war_veteran
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CLEAR_PED_DESIRED_LOCO_FOR_MODEL(System.Int32)">
            <summary>
            Clears locomotion archetype
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DESIRED_LOCO_MOTION_TYPE(System.Int32,System.String)">
            <summary>
            Sets peds motion type
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_PED_GETUP_ANIMATION(System.Int32,System.String)">
            <summary>
            Known get up animation types: REAR, FRONT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x16F798A05BB9E3B5(System.Int32)">
            <summary>
            _PED_COWER_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._PED_EMOTIONAL_PRESET_LOCO_MOTION(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            target: 0 affects everyone
            duration: -1 indefinite
            flag: always 4 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x32CCAD8A981B53D3(System.Int32)">
            <summary>
            _STOP_(?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DRUNKNESS(System.Int32,System.Boolean,System.Single)">
            <summary>
            SOBER = 0.0f, SLIGHTLY_DRUNK = 0.25f, MODERATELY_DRUNK = 0.5f, VERY_DRUNK = 1.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_DRUNKNESS(System.Int32)">
            <summary>
            Returns ped drunk level
            _H* or _I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC17A94CC8FC3C61A(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            _SET_PED_P* - _SET_PED_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x134775B093AD5C38(System.Int32)">
            <summary>
            _GET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_MODEL_SIZE_FROM_HASH(System.UInt32)">
            <summary>
            PS_SMALL = 0,
            PS_MEDIUM,
            PS_MEDIUM_LARGE,
            PS_LARGE,
            PS_EXTRA_LARGE
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.REGISTER_HATED_TARGETS_AROUND_PED(System.Int32,System.Single)">
            <summary>
            Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_CLOSEST_PED(System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32*,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Gets the closest ped in a radius.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_TO_RAGDOLL(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String)">
            <summary>
            Params: p6 = DraggedByCart in R* SP Script marston8
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_RAGDOLL_ON_COLLISION(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_RAGDOLL(System.Int32)">
            <summary>
            If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8CB2553C559102C1(System.Int32,System.Int32,System.Boolean)">
            <summary>
            _SET_PED_T* - SET_PED_U*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xFD3C31A2E45671E7(System.Int32,System.Int32)">
            <summary>
            _DISABLE_A* - _DISABLE_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3AEC4A410ECAF30D(System.Int32)">
            <summary>
            _IS_PED_R*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED.SET_RAGDOLL_BLOCKING_FLAGS(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.PED.CLEAR_RAGDOLL_BLOCKING_FLAGS(System.Int32,System.Int32)">
            <summary>
            flags: see SET_RAGDOLL_BLOCKING_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DEFENSIVE_AREA_TO_ANGLED_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.UInt64,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            _SET_PED_(A?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.REMOVE_PED_DEFENSIVE_AREA(System.Int32,System.Boolean)">
            <summary>
            Ped will no longer get angry when you stay near him.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x4EC4EA2F72B36358(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xCF0B19806473D324(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            _SET_PED_COMBAT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB4B7C92FCE7347B7(System.Int32)">
            <summary>
            _RESET_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.RESURRECT_PED(System.Int32)">
            <summary>
            This function will simply bring the dead ped back to life.
            
            Before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at because theres a chance the ped will fall through the map
            
            Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_NAME_DEBUG(System.Int32,System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7020839C7302D8AC(System.Int32)">
            <summary>
            _HAS_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE1AADD0055D76603(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            _C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x5A1A929C8B729B4A(System.Int32)">
            <summary>
            _C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x97A38B65EBDA3D50(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x06A10B4D7F50B0C3(System.Int32)">
            <summary>
            _GET_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xFEA6126C34DF2532(System.Int32,System.Boolean)">
            <summary>
            METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
            _SET_M* - _SET_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA967D6A8ED2D713B(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_P* - _SET_PED_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x735662994E60A710(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_ACTIVATE_WOUND_EFFECT(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            bloodFountainPressure: visible effect from 0.0 till 20.0
            yaw: visible effect from -3.0 till 3.0
            bloodFountainDirection: 1.0 left side, -1.0 right side
            bloodFountainPulse: from 0.1 (low) till 1.0 (fast)
            make blood fountain from your stomach: _SET_PED_ACTIVATE_WOUND_EFFECT(ped, unk, 2, 14411, 0.0, 0.1, 0.0, 0.0, 3.0, -1.0, 1.0)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._UPDATE_PED_WOUND_EFFECT(System.Int32,System.Single)">
            <summary>
            Params: 0.0f to remove wound effects
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.APPLY_PED_DAMAGE_PACK(System.Int32,System.String,System.Single,System.Single)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_decals.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xD8544F6260F5F01E(System.Int32,System.Int32)">
            <summary>
            METAPED_PLAYER_COMPONENTS_SET_META_TYPE_TO_BE_BYPASSED: Setting visibility
            p1 is mostly 10
            _CLEAR_PED_N* - _CLEAR_PED_W*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xEB8886E1065654CD(System.Int32,System.Int32,System.String,System.Single)">
            <summary>
            Washing player's face/hands now
            _FA* - _FI*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.CLEAR_PED_WETNESS(System.Int32)">
            <summary>
            It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_WETNESS_HEIGHT(System.Int32,System.Single)">
            <summary>
            It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xF9CFF5BB70E8A2CB(System.Int32,System.Single)">
            <summary>
            _SET_PED_WETNESS*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_WETNESS_ENABLED_THIS_FRAME(System.Int32)">
            <summary>
            combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA7A806677F8DE138(System.Int32)">
            <summary>
            Washing player's face/hands now
            _CLEAR_PED_E* - _CLEAR_PED_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.WAS_PED_SKELETON_UPDATED(System.Int32)">
            <summary>
            Despite this function's name, it simply returns whether the specified handle is a Ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_BONE_COORDS(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Gets the position of the specified bone of the specified ped.
            
            ped: The ped to get the position of a bone from.
            boneId: The ID of the bone to get the position from. This is NOT the index.
            offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
            offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
            offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.ADD_SCENARIO_BLOCKING_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            blockingFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScenarioBlockingFlags
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._ADD_SCENARIO_BLOCKING_VOLUME(System.Int32,System.Boolean,System.Int32)">
            <summary>
            flag: see ADD_SCENARIO_BLOCKING_AREA
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_USING_SCENARIO_HASH(System.Int32,System.UInt32)">
            <summary>
            Equivalent to IS_PED_USING_SCENARIO from V but takes a hash instead of a string.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CAN_PED_USE_SCENARIO_POINT(System.Int32,System.Int32,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            p2 is always 0, p3 is always 0, p4 is always 1
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x1148F706CF4EBDDA(System.Int32,System.UInt32,System.Int32)">
            <summary>
            _CAN_PED_SEE* - _CAN_PED_USE_(SCENARIO_HASH?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.TOGGLE_SCENARIO_PED_COWER_IN_PLACE(System.Int32,System.Boolean)">
            <summary>
            If toggle is true, when the ped is using a scenario he will stop it and become scared
            If toggle is false, the ped will not be scared anymore and continue his scenario
            
            Old name: _SET_PED_SCARED_WHEN_USING_SCENARIO
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOULD_PLAY_DIRECTED_NORMAL_SCENARIO_EXIT(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Old name: _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            lookIntensity:
            0 - REACT_LOOK_NONE
            1 - REACT_LOOK_LOW
            2 - REACT_LOOK_MEDIUM
            3 - REACT_LOOK_HIGH
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOULD_PLAY_COMBAT_SCENARIO_EXIT(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOULD_PLAY_EMOTIONAL_SCENARIO_EXIT(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_SHOULD_PLAY_QUICK_SCENARIO_EXIT(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Boolean)">
            <summary>
            lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_PED_FACIAL_MOOD_THIS_FRAME(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Hashes: MOODAGITATED, MOODAIMING, MOODANGRY, MOODBITCHY, MOODCONCENTRATION, MOODCONCENTRATIONEXTREME, MOODCURIOUS, MOODDEAD, MOODDEFUSE, MOODEXERTIONEXTREME, MOODEXERTIONMEDIUM, MOODEXERTIONMILD, MOODHAPPY, MOODINJUREDMILD, MOODINTIMIDATED, MOODKNOCKEDOUT, MOODNERVOUS, MOODNORMAL, MOODNORMALNEUTRAL, MOODPANIC, MOODSCARED, MOODSHOCKED, MOODSLEEPING, MOODSMUG, MOODTIRED
            Params: p2 = 6 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7EDB3C766B0D073F(System.Int32)">
            <summary>
            Only used in R* Script net_moonshine_property
            _A* - _B*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x4F63433CE3C08230(System.Int32,System.Boolean)">
            <summary>
            Only used in R* Script shop_harriet
            _SET_PED_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_CAN_UNK_BODYPART_IK(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_CAN_(?)_IK*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xCD9E5F94A2F38683(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_R* - _SET_PED_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CLOTH_PIN_FRAMES(System.Int32,System.Boolean)">
            <summary>
            Old name: SET_PED_CLOTH_PACKAGE_INDEX
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x1D4636C90BBEFACB(System.Int32,System.Int32)">
            <summary>
            _SET_PED_CA* - _SET_PED_CO*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xEF371232BC6053E1(System.Int32)">
            <summary>
            _ADD_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x86F0B6730C32AC14(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x8101BA1C0B462412(System.Int32,System.Int32)">
            <summary>
            _ATTACH_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CONFIG_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flagId: https://alloc8or.re/rdr3/doc/enums/ePedScriptConfigFlags.txt
            https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_CONFIG_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_RESET_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Needs to be called every frame
            https://github.com/femga/rdr3_discoveries/tree/master/AI/CPED_RESET_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_CONFIG_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flagId: see SET_PED_CONFIG_FLAG
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_PED_EVASIVE_DIVING(System.Int32,System.Int32*)">
            <summary>
            Presumably returns the Entity that the Ped is currently diving out of the way of.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SHOOT_TRIGGER_AT_COORDS(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            Triggers a gunshot
            Params: p5 = -1 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DISABLE_KICK_MOVE(System.Int32,System.Boolean)">
            <summary>
            Disables being able to kick move ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x078076AB50FB117F(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            If returned true: There are enemy peds near friendly turn in ped. Going to aggro.
            If returned false: Moving back to idle as there aren't any remaining enemy peds near ped
            _IS_PED_IN_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_CAN_BE_LASSOED(System.Int32,System.Boolean)">
            <summary>
            SET_PED_CAN_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_COMBAT_MOVEMENT(System.Int32,System.Int32)">
            <summary>
            0 - Stationary (Will just stand in place)
            1 - Defensive (Will try to find cover and very likely to blind fire)
            2 - Offensive (Will attempt to charge at enemy but take cover as well)
            3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x815C0074A1BC0D93(System.Int32,System.Int32)">
            <summary>
            _SET_PED_COMBAT_R - _SET_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xFFDE295662405B25(System.Int32)">
            <summary>
            _GET_PED_COMBAT_M* - _GET_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_COMBAT_ABILITY(System.Int32,System.Int32)">
            <summary>
            abilityLevel:
            enum eCombatAbilityLevel
            {
            	CAL_POOR,
            	CAL_AVERAGE,
            	CAL_PROFESSIONAL
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_COMBAT_RANGE(System.Int32,System.Int32)">
            <summary>
            range:
            enum eCombatRange
            {
            	CR_NEAR,
            	CR_MEDIUM,
            	CR_FAR,
            	CR_VERY_FAR
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_COMBAT_ATTRIBUTES(System.Int32,System.Int32,System.Boolean)">
            <summary>
            attributeIndex: https://alloc8or.re/rdr3/doc/enums/eCombatAttribute.txt
            https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ATTRIBUTES
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_COMBAT_ATTRIBUTE_HASH(System.Int32,System.UInt32)">
            <summary>
            Hashes: GUARD, COMBAT_ANIMAL, LAW, LAW_SHERIFF
            _SET_PED_COMBAT_A* - _SET_PED_COMBAT_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_TARGET_LOSS_RESPONSE(System.Int32,System.Int32)">
            <summary>
            TLR_ExitTask = 0,
            TLR_NeverLoseTarget,
            TLR_SearchForTarget
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x712B2C2B2471B493(System.Int32,System.UInt32)">
            <summary>
            _SET_PED_MO*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_COMBAT_STYLE(System.Int32,System.UInt32,System.Int32,System.Single)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_STYLES
            Params: p2 is usually 1, sometimes 0 or 2
            duration in seconds, -1.0 = forever
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CLEAR_PED_COMBAT_STYLE(System.Int32,System.Int32)">
            <summary>
            Params: p1 = 1 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_COMBAT_STYLE_MOD(System.Int32,System.UInt32,System.Single)">
            <summary>
            duration in seconds, -1.0 = forever
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x1FA132CBCD7CB239(System.Int32,System.UInt32)">
            <summary>
            _CLEAR_PED_COMBAT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x5BF0B9D9A8E227A0(System.Int32)">
            <summary>
            _IS_PED_B* - _IS_PED_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x642720D8D69328B6(System.Int32,System.UInt32)">
            <summary>
            _SET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x99DF2639DA76C1DC(System.Int32,System.Int32,System.Int32)">
            <summary>
            _CAN_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_BRAWLING_STYLE(System.Int32,System.UInt32)">
            <summary>
            brawlingStyle:
            enum eBrawlingStyle : Hash
            {
            	BS_AI = 0x802C604D,
            	BS_AI_BARBRAWL = 0x4FF5F0C7,
            	BS_AI_DEFENSIVE = 0xD888F2FD,
            	BS_AI_MOONSHINE_BARBRAWL = 0xA01B433A,
            	BS_ALLIGATOR = 0x7A5548ED,
            	BS_ALLIGATOR_LARGE = 0x368EC7CB,
            	BS_ALLY = 0x69C76C14,
            	BS_ANIMAL = 0xD777C754,
            	BS_BADGER = 0x7E7C3F53,
            	BS_BEAR = 0x0BC66E35,
            	BS_BEAVER = 0x4E313783,
            	BS_BOAR = 0x176A5831,
            	BS_BOUNTY_HUNTER = 0x3900654C,
            	BS_BRUISER = 0x4514DB61,
            	BS_BULL = 0x4E50C5D2,
            	BS_COUGAR = 0x9DAA7CCB,
            	BS_COW = 0xB0E91295,
            	BS_COYOTE = 0xA448EB69,
            	BS_DEER = 0xA781E6B3,
            	BS_DOG = 0x5A4155C4,
            	BS_ELK = 0x408697F0,
            	BS_FEMALE = 0x6A3BB2C2,
            	BS_FEMALE_STRONG = 0x4DAFDD84,
            	BS_GANGUP = 0xD0CECFF2,
            	BS_GOAT = 0x078E649F,
            	BS_HORSE = 0xF6B775F3,
            	BS_MICAH_FINALE = 0x1F0BB27A,
            	BS_MOOSE = 0x968917AB,
            	BS_MUSKRAT = 0x1EDC33AC,
            	BS_NO_MELEE = 0x25B5F931,
            	BS_PIG = 0x22EAD110,
            	BS_PLAYER = 0x78BAEF07,
            	BS_PLAYER_FINALE = 0xF9E77D2D,
            	BS_PLAYER_MOONSHINER = 0x687BF19F,
            	BS_PLAYER_WINTER1 = 0x3C6A802F,
            	BS_QUICK = 0xC4CABB1B,
            	BS_RACCOON = 0x505F8917,
            	BS_SHEEP = 0x6827CCCF,
            	BS_SNAKE = 0x82BEBC4B,
            	BS_TIMID = 0x431AEF77,
            	BS_WOLF = 0xA8F023D4
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x9D8DFE2DE9CB4DFC(System.Int32)">
            <summary>
            _RESET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC48AF420371C7407(System.Int32,System.UInt32)">
            <summary>
            _SET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_BEAT_MULTIPLIER(System.Int32,System.Single)">
            <summary>
            NET_FETCH_CLIENT_UPDATE_PED_FIGHT_PROFICIENCY: Changing parry multiplier for ped
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_ACTION_DISABLE_FLAG(System.Int32,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/AI/COMBAT_ACTION_DISABLE_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x57F35552E771BE9D(System.Int32,System.Int32)">
            <summary>
            _SET_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7C10221CE718AA72(System.Int32,System.Int32)">
            <summary>
            _CLEAR_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x0D3B1568917EBDA0(System.Int32,System.Int32)">
            <summary>
            _IS_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_REMAINING_REVIVAL_TIME(System.Int32,System.Boolean)">
            <summary>
            normalized / non normalized
            0.0        / 1000.0         STARTED IN WRITHE STAGE
            1.0        / 0.0            END OF WRITHE, DEAD
            -1.0                        DEAD
            
            Returns some value from AI task 562 (unknown).
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x12EB4E31F092C9B3(System.Int32)">
            <summary>
            _GET_IS_PED_(BLEEDING_OUT?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_GRAPPLE_STYLE(System.Int32,System.UInt32)">
            <summary>
            Hashes: GS_DRAGGING, GS_FACE_TO_BACK, GS_FACE_TO_FACE, GS_FACE_TO_FACE_WALL, GS_MOUNTED
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED.SET_PED_FLEE_ATTRIBUTES(System.Int32,System.Int32,System.Boolean)" -->
        <member name="M:RDR2.Native.PED._0xC2722B252C79E641(System.Int32,System.UInt64,System.UInt64,System.Boolean)">
            <summary>
            _FORCE_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x2DC0E8DCBD3546E9(System.Int32)">
            <summary>
            _IS_PED_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._ADD_SCENARIO_TRANSITION(System.Int32)">
            <summary>
            Forces transition now, called together with 0xD65FDC686A031C83
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GIVE_PED_HASH_COMMAND(System.Int32,System.UInt32,System.Single)">
            <summary>
            Ped Command Hash are special commands, that can be activated to change conditional anim variations or trigger transitions between conditional anims.
            https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x600BBDD29820370C(System.Int32)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_TRACKED_PED_VISIBLE(System.Int32)">
            <summary>
            Returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
            Target needs to be tracked first, won't work otherwise.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._IS_METAPED_FISH(System.Int32)">
            <summary>
            Returns true if given ped is a fish.
            _IS_ME* - _IS_MO*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.CAN_PED_SEE_ENTITY(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns:
            0 - CTR_CANNOT_TARGET
            1 - CTR_CAN_TARGET
            2 - CTR_NOT_SURE_YET
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x0EA9EACBA3B01601(System.Int32,System.Int32,System.Boolean)">
            <summary>
            _CAN_PED_B* - _CAN_PED_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_BONE_INDEX(System.Int32,System.Int32)">
            <summary>
            no bone = -1
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC5303F460A40D21D(System.Int32,System.Int32)">
            <summary>
            Returns boneIndex
            _GET_PED_N* - _GET_PED_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE29D8CD66553DBAA(System.Int32)">
            <summary>
            _SET_PED_R* -_SET_PED_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_DIRT_CLEANED(System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Params: ped, 0f, -1, true, true in R* MP Scripts
            _SET_PED_DE* - _SET_PED_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xA2116C1E4ED85C24(System.Int32,System.Boolean)">
            <summary>
            _SET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.FORCE_PED_MOTION_STATE(System.Int32,System.UInt32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            motionStateHash: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/FORCE_PED_MOTION_STATE
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_CURRENT_MOVE_BLEND_RATIO(System.Int32,System.Single*,System.Single*)">
            <summary>
            Old name: _GET_PED_CURRENT_MOVEMENT_SPEED
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x46BF2A810679D6E6(System.Int32,System.Single)">
            <summary>
            Returns vehicle (desired) speed
            _COMPUTE_(VEHICLE_SPEED_USING_BLEND_RATIO?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xCA95924C893A0C91(System.Int32,System.Single)">
            <summary>
            Returns vehicle speed
            _COMPUTE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._HORSE_AGITATE(System.Int32,System.Boolean)">
            <summary>
            _H* - _I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_MOVE_RATE_OVERRIDE(System.Int32,System.Single)">
            <summary>
            Min: 0.0f
            Max: 1.15f
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CAPSULE(System.Int32,System.Single)">
            <summary>
            Overrides the ped's collision capsule radius for the current tick.
            Must be called every tick to be effective.
            
            Setting this to 0.001 will allow warping through some objects.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SPAWNPOINTS_START_SEARCH(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            Params: p4 = 35.f, duration = 5000 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            Searching area between coords 1 and 2
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_PED_EMOTIONAL_PRESET(System.Int32,System.String)">
            <summary>
            For more information, see common:/data/emotional_presets.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._HAS_PED_EMOTIONAL_PRESET_LOADED(System.Int32,System.String)">
            <summary>
            See _REQUEST_PED_EMOTIONAL_PRESET
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REMOVE_PED_EMOTIONAL_PRESET(System.Int32,System.String)">
            <summary>
            See _REQUEST_PED_EMOTIONAL_PRESET
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x290B2E6CCDE532E1(System.Int32)">
            <summary>
            _IS_PED_L* - _IS_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x0EEF7A81C17679DB(System.Int32)">
            <summary>
            _IS_PED_L* - _IS_PED_M*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.IS_TARGET_PED_IN_PERCEPTION_AREA(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if ped is in perception (focused and looking at target ped)
            Most float params are -1.f in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x913D04A5176F84C9(System.Int32)">
            <summary>
            _IS_PED_S* - _IS_PED_U*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_LASSO_HOGTIE_FLAG(System.Int32,System.Int32)">
            <summary>
            https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/Lasso%20Hogtie%20Flags
            https://github.com/femga/rdr3_discoveries/tree/master/AI/LASSO_HOGTIE_FLAG
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_LASSOER_OF_PED(System.Int32)">
            <summary>
            _IS_PED_S* - _IS_PED_U*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_LOOTING_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CLootingFlags__Flags
            https://github.com/femga/rdr3_discoveries/tree/master/AI/LOOTING_FLAGS
            
            lootFlag:
            enum eLootFlag
            {
            	LOOT_FLAG_IS_CRITICAL_LOOT_TARGET = 7,
            	LOOT_FLAG_IGNORE_WATER_CHECKS = 8,
            	LOOT_FLAG_ANIMAL_FLAGGED_FOR_TAGGING = 23,
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_LOOTING_FLAG(System.Int32,System.Int32)">
            <summary>
            lootFlag: see SET_LOOTING_FLAG
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REFRESH_LOOT_STATE_FOR_PED(System.Int32,System.Int32,System.Int32*,System.Int32,System.Int32)">
            <summary>
            Returns loot state
            enum eLootState
            {
            	LAP_NONE,
            	LAP_RESUMING,
            	LAP_GETTING_ON_FOOT,
            	LAP_DISTANT_NAV,
            	LAP_CHOOSING_ACTION,
            	LAP_APPROACHING,
            	LAP_ENTERING,
            	LAP_LOOTING,
            	LAP_EXITING
            };
            
            _POSSE_* - _REGISTER_HATED*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_PED_LOOT_STATUS_MP(System.Int32)">
            <summary>
            enum ePedLootStatus
            {
            	PLS_NONE,
            	PLS_PRE_LOOT,
            	PLS_SAMPLING,
            	PLS_SKINNING
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_PED_CAN_BE_INCAPACITATED(System.Int32,System.Boolean)">
            <summary>
            When set on a player ped, its just like when you die in RDO
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x29924EB8EE9DB926(System.Int32,System.Single)">
            <summary>
            _SET_PED_K* or _SET_PED_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xB285AD0EC870B2DF(System.Int32,System.UInt32)">
            <summary>
            Params: hash - ARTHUR or JOHN
            _SET_PED_(A-D)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC494C76A34266E82(System.Int32,System.Int32)">
            <summary>
            [WARDROBE] Player took off their disguise: p1 = 13
            [WARDROBE] Player put on a disguise: p1 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC3995D396F1D97B6(System.Int32,System.Int32,System.Int32)">
            <summary>
            _GET_PED_G* - _GET_PED_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x947E43F544B6AB34(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/0x947E43F544B6AB34
            _GET_PED_G* - _GET_PED_I(NTERACTION?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xE737D5F14304A2EC(System.Int32,System.Int32,System.Int32)">
            <summary>
            Only used in R* Script nb_animal_attack: p2 = 120000
            _SET_PED_SH* - _SET_PED_SP*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_ATTITUDE(System.Int32,System.Int32)">
            <summary>
            AI_ATTITUDE_NEUTRAL = 0,
            AI_ATTITUDE_FRIENDLY,
            AI_ATTITUDE_WARY,
            AI_ATTITUDE_COMBATIVE,
            AI_ATTITUDE_NEVER_MET
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_MOTIVATION(System.Int32,System.Int32,System.Int32)">
            <summary>
            If targetPed is set to 0 the ped motivationState affects everyone
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_MOTIVATION(System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            enum eMotivationState
            {
            	TOILET_STATE,
            	FEAR_STATE,
            	ANGRY_STATE,
            	AGITATION_STATE,
            	HUNGRY_STATE,
            	TIRED_STATE,
            	SAD_STATE,
            	BRAVE_STATE,
            	OFFER_ITEM_STATE,
            	SUSPICION,
            	DRUNK_STATE
            };
            
            If targetPed is set to 0 the ped motivationState affects everyone
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_IS_PED_MOTIVATION_STATE_ENABLED(System.Int32,System.Int32)">
            <summary>
            motivationState: see _SET_PED_MOTIVATION
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_MOTIVATION_STATE_OVERRIDE(System.Int32,System.Int32,System.Boolean)">
            <summary>
            motivationState: see _SET_PED_MOTIVATION
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_MOTIVATION_MODIFIER(System.Int32,System.Int32,System.Single)">
            <summary>
            The higher the modifier, the slower the motivationState value will decrease
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_SCENT(System.Int32,System.Single)">
            <summary>
            0.0 - 1.0
            Modifies the "scent line" on the ped's body when using Eagle Eye.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_VOICE_VOLUME(System.Int32,System.Single)">
            <summary>
            _SET_PED_S* - _SET_PED_T*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_FACE_FEATURE(System.Int32,System.Int32,System.Single)">
            <summary>
            Note: You have to update the ped's variation (using 0xCC8CA3E88256E58F) after calling this native
            
            index = Ped expression ID's / face features
            List of face features: https://pastebin.com/9jb88FXW
            value: -1.0 to 1.0
            
            This native also allows you to change a horse's gender.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_CULL_RANGE(System.Int32,System.Single,System.Single)">
            <summary>
            The higher the multiplier the less the engine renders culls (https://docs.unity3d.com/Manual/OcclusionCulling.html)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_META_PED_TYPE(System.Int32)">
            <summary>
            enum eMetaPedType
            {
            	MPT_MALE,
            	MPT_FEMALE,
            	MPT_TEEN,
            	MPT_ANIMAL,
            	MPT_NONE
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xBD0E4F52F6D95242(System.Int32)">
            <summary>
            _IS_PED_M* - _IS_PED_O*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_META_PED_TAG(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Use to apply metaped player components
            Replaces asset, alternatively you can remove assets using REMOVE_TAG_FROM_META_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_NUM_COMPONENT_CATEGORIES_IN_PED(System.Int32)">
            <summary>
            Works similar to 0x90403E8107B60E81 (_GET_NUM_COMPONENTS_IN_PED) but is used to get category hashes instead
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_COMPONENT_CATEGORY_BY_INDEX(System.Int32,System.Int32)">
            <summary>
            Returns category hash that each ped component has. Hash examples: MASKS, HATS, HEADS, HORSE_MANES
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._UPDATE_PED_VARIATION(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Update variation on ped, needed after first creation, or when component or texture/overlay is changed
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._EQUIP_META_PED_OUTFIT(System.Int32,System.UInt32)">
            <summary>
            Note: you have to update your ped's variation after calling (using 0xCC8CA3E88256E58F)
            
            Body Types:
            MPCREATOR_NEUTRAL
            MPCREATOR_SKINNY
            MPCREATOR_SKINNY_MUSCULAR
            MPCREATOR_HEAVY
            MPCREATOR_HEAVY_MUSCULAR
            
            eBodyWeightOutfit (pedattributes.ymt):
            -2045421226 (smallest)
            -1745814259
            -325933489
            -1065791927
            -844699484
            -1273449080
            927185840
            149872391
            399015098
            -644349862
            1745919061 (default)
            1004225511
            1278600348
            502499352
            -2093198664
            -1837436619
            1736416063
            2040610690
            -1173634986
            -867801909
            1960266524 (biggest)
            
            https://github.com/femga/rdr3_discoveries/blob/master/peds_customization/ped_outfits.lua
            
            Alt name: _EQUIP_META_PED_OUTFIT_COMPONENT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x62FDF4E678E40CC6(System.Int32,System.UInt64)">
            <summary>
            Returns p1 value for 0x8E84119A23C16623
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x370A973252741AC4(System.Int32,System.Boolean)">
            <summary>
            _RESET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._EQUIP_META_PED_OUTFIT_PRESET(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the outfit preset for the ped. The presetId is an index which determines its preset outfit. p2 is always false in the scripts.
            If p2 is true as player, then certain components like facial hair and hair will not be removed.
            Old name: _SET_PED_OUTFIT_PRESET
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._EQUIP_META_PED_OUTFIT_EXTRA(System.Int32,System.Int32,System.UInt64,System.UInt64)">
            <summary>
            Changes Multiplayer ped face and body type components, they can be stacked
            Params: p3 = 1
            Body shape for mp_male from 124 - 128, 110 - 115 for mp_female
            Face shape for mp_male from 110 - 123, 96 - 109 for mp_female
            Cloth type for mp_male from 0 - 109, 0 - 95 for mp_female
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._IS_META_PED_OUTFIT_EQUIPPED(System.Int32,System.UInt32)">
            <summary>
            Used in script function HORSE_IS_META_PED_OUTFIT_SADDLE_EQUIPPED
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x4EFC1F8FF1AD94DE(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Used in script function METAPED_CLOTHING__XML__APPLY_OUTFIT_TINTS_TO_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_METAPED_PED(System.UInt32,System.Int32)">
            <summary>
            Returns requestId
            Params: p1 = 1 in R* Scripts (Used in SP only)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CREATE_METAPED_PED(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Only used in SP scripts, for example odriscolls1: BOOLS: true, true, true, false, false
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_METAPED_OUTFIT(System.UInt32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
            Returns requestId, to be used with 0x74F512E29CB717E2
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x3FCBB5FCFD968698(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt64)">
            <summary>
            Used for script function PROCESS_PLAYER_HAT_EVENT
            Returns requestId to be used with 0x13E7320C762F0477
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_METAPED_ASSET_BUNDLE(System.UInt32,System.Int32)">
            <summary>
            Returns requestId
            Params: p1 = 1 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CREATE_METAPED_ASSET(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates prop from metaped asset bundle
            https://github.com/femga/rdr3_discoveries/blob/master/objects/metaped_asset_bundles_list.lua
            Creates a pickup-able metaped component. asset doesn't seems to be related to component hashes. Hash example : 0xD20354AB (https ://i.imgur.com/dzHkcDb.png)
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CREATE_METAPED_OUTFIT_PED(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates metaped from ped outfit requestId. See _REQUEST_METAPED_OUTFIT
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._APPLY_PED_METAPED_OUTFIT(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/clothes/metaped_outfits.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_METAPED_WEARINESS(System.Int32,System.Single)">
            <summary>
            Sets ped eye redness, weariness: 0.f to 1.f
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xF47D54B986F0A346(System.Int32,System.Int32)">
            <summary>
            Used in Script Function MOONSHINE_BAND_CLIENT_PATRON_UPDATE
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PELT_FROM_HORSE(System.Int32,System.Int32)">
            <summary>
            Returns peltId
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CHANGE_PED_STAMINA(System.Int32,System.Single)">
            <summary>
            Alters entity's stamina by 'amount'. Can be negative (to drain stamina). float amount: -1000.0 - 1000.0
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_STAMINA_NORMALIZED(System.Int32)">
            <summary>
            Returns stamina normalizedValue / normalizedUnlockedMax
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x36513AFFC703C60D(System.UInt64)">
            <summary>
            _RESET_PED_*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PED._RESTORE_PED_STAMINA(System.Int32,System.Single)" -->
        <member name="M:RDR2.Native.PED._0x5D4CD22A8C82A81A(System.Int32,System.Boolean)">
            <summary>
            Related to ped hat
            _SET_PED_LA* - _SET_PED_LE*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CREATE_GRAVITY_WELL(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Creates a handle to an instance of "CScriptResource_GravityWell", this system forces local ped to target specified position when moving, however player still can interrupt this.
            Can be useful to "point" player at some specific position.
            Only works while on-foot.
            
            _CREATE_[P-Z]
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REMOVE_GRAVITY_WELL(System.Int32)">
            <summary>
            Removes gravity well by handle returned from 0x4F5EBE70081E5A20
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x7EE3A8660F38797E(System.Int32)">
            <summary>
            _IS_PED_H* - _IS_PED_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REQUEST_TEXTURE(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates a texture override data for ped and returns it's index.
            So you can replace any texture of any ped's component.
            Also, you can add overlays on it, such as aging, lipstick and more.
            Textures can be reused by multiple peds at once.
            You can keep only 32 textures at once(including other peds).
            
            https://github.com/femga/rdr3_discoveries/blob/master/clothes/change_overlays_script.lua
            materialHash: https://github.com/femga/rdr3_discoveries/blob/master/clothes/cloth_drawable_albedo_normal_material_TEMPORARY.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._RELEASE_TEXTURE(System.Int32)">
            <summary>
            Removes a texture created by 0xC5E7204F322E49EB.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._UPDATE_PED_TEXTURE(System.Int32)">
            <summary>
            Should be called at least once for any new texture override.
            Otherwise component textures will be just black.
            Also needs to be called for updating any ped overlays to apply the changes.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._RESET_PED_TEXTURE(System.Int32)">
            <summary>
            Removes every texture layer but the base layer
            Clearing texture's data: setting params to default values, but keep overlays.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._ADD_TEXTURE_LAYER(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Single,System.Int32)">
            <summary>
            Creates ped overlay in texture override data and returns it's index.
            This index are used for further overlay editing.
            
            albedoHash: a hash of overlay's albedo texture
            colorType: a color type(from 0 to 2). 0 is used for overlays with RGB colors usually.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_TEXTURE_LAYER_PALLETE(System.Int32,System.Int32,System.UInt32)">
            <summary>
            paletteHash: https://raw.githubusercontent.com/femga/rdr3_discoveries/master/clothes/cloth_color_palletes.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_TEXTURE_LAYER_TINT(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Seem color is not RGB or HSV
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._CLEAR_PED_TEXTURE(System.Int32)">
            <summary>
            Removes every texture layer
            Old Name: _RESET_PED_TEXTURE_2
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xC991EF46FE323867(System.Int32,System.UInt64)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.SET_HORSE_AVOIDANCE_LEVEL(System.Int32,System.Int32)">
            <summary>
            -1 - HORSE_ASSIST__NO_CHANGE
             0 - HORSE_ASSIST__MANUAL
             1 - HORSE_ASSIST__SEMIASSIST
             2 - HORSE_ASSIST__FULLASSIST
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_USE_HORSE_MAP_COLLISION(System.Int32,System.Boolean)">
            <summary>
            Doesn't actually return anything.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.GET_META_PED_ASSET_GUIDS(System.Int32,System.Int32,System.UInt32*,System.UInt32*,System.UInt32*,System.UInt32*)">
            <summary>
            This is a way to get what drawables a ped has equipped
            Example: you are able to tell if the ped has the drawable PLAYER_ZERO_HAT_017 attached
            Note: this works with non shop components, direct .ydd files.
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_BLACKBOARD_INT(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/AI/BLACKBOARDS
            Blackboard natives allow you to apply and check certain data to/for peds.
            Blackboard bools, floats and strings are subdivided into 6 sections: "all", "animation", "any", "code", "global" and "script"
            Most changes are only visible for "script" blackboards, some "script" blackboards change ped motions
            "removeTimer" is self-removal timer, can be "-1" so your data will not be removed by the game (forever); 100 = 1 second
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_BLACKBOARD_HASH(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            p1:
            BodyPartChained
            OverloadMostInjuredBodyPart
            
            p2:
            LeftLeg
            Legs
            RightArm
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_BLACKBOARD_BOOL(System.Int32,System.String)">
            <summary>
            Can be used to get a peds foliage active status: variableName = FoliageActive
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_BLACKBOARD_FLOAT(System.Int32,System.String)">
            <summary>
            Can be used to get a peds foliage raw height: variableName = FoliageHeight
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_TANK_ATTRIBUTE_SIZE(System.Int32,System.Int32,System.Single)">
            <summary>
            Size will be permanent
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._IS_USING_SLIPSTREAM(System.Int32)">
            <summary>
            _IS_TRACKED_* - IS_V*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x10F96086123B939F(System.Int32,System.Int32,System.Single)">
            <summary>
            NB_CUSTOM_CLIENT_ON_CREATE_COMPLETE - set legendary to not avoid prey
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REMOVE_SHOP_ITEM_FROM_PED(System.Int32,System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Directly removes a shop item component from a ped
            Params: p2 and p3 are always 0
            </summary>
        </member>
        <member name="M:RDR2.Native.PED.REMOVE_SHOP_ITEM_FROM_PED_BY_CATEGORY(System.Int32,System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Params: p2, p3 usually 0 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xAAB86462966168CE(System.Int32,System.Boolean)">
            <summary>
            Related to _0x704C908E9C405136 for component loading
            _S*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._REFRESH_META_PED_SHOP_ITEMS(System.Int32,System.Int32)">
            <summary>
            p1 is always 1
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xD103F6DBB5442BE8(System.Int32,System.Int32)">
            <summary>
            Params: p1 either a 1 or 0, so perhaps BOOL
            _SET_PED_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._HAS_PED_TAKEN_GORE_DAMAGE(System.Int32,System.Int32)">
            <summary>
            limb: 3 = Left Hand, 4 = Left Arm, 6 = Right Hand, 7 = Right Arm, 9 = Left Foot, 10 = Left Leg, 12 = Right Foot, 13 = Right Leg, 37 = Head
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x704C908E9C405136(System.Int32)">
            <summary>
            _CLEAR*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_QUALITY(System.Int32,System.Int32)">
            <summary>
            quality: see _GET_PED_QUALITY
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PED_QUALITY(System.Int32)">
            <summary>
            Returns Ped Quality to be used to calculate Skinning Quality
            
            enum ePedQuality
            {
            	PQ_INVALID = -1,
            	PQ_LOW,
            	PQ_MEDIUM,
            	PQ_HIGH,
            	PQ_MAX
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_TOTAL_PED_DAMAGE_FALLOFF_BONUS(System.Int32,System.Single)">
            <summary>
            _SET_W(EAPON?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0x6507AC3BD7C99009(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            _IS_N* - _IS_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._GET_PLAYER_PED_WATER_DEPTH(System.Int32)">
            <summary>
            Returns how deep the water is below the ped (if in water)
            -1.0f = Not in water
            10.0f = Max water depth
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._SET_PED_TRAIL_EFFECT(System.Int32,System.Boolean,System.Single)">
            <summary>
            duration in seconds
            </summary>
        </member>
        <member name="M:RDR2.Native.PED._0xEBAAC9A750E7563B(System.Int32)">
            <summary>
            If returned true: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling UP the bounds due to tracking
            If returned false: PROCESS_RESIZING_TRACKING_BOUNDS_VOLUME - Scaling DOWN the bounds due to tracking
            _IS_PED_T* - _IS_PED_U*
            </summary>
        </member>
        <member name="M:RDR2.Native.PERSISTENCE._0xB03140014ACA6C40(System.UInt64,System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PERSISTENCE._PERSISTENCE_REFRESH_TOWN_VOLUME(System.Int32)">
            <summary>
            Only used in R* script long_update.ysc in script function REFRESH_CLOSEST_TOWN
            </summary>
        </member>
        <member name="M:RDR2.Native.PERSISTENCE._0x66DAA3A9274E8E82">
            <summary>
            _PERSISTENCE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS.ADD_ROPE(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Boolean,System.UInt64*,System.Boolean)">
            <summary>
            There are 19 types of rope, from type = 0 to type = 18
            Rope definitions are stored in ropedata.xml
            Rope types 0, 15 and 18 have proper physics for hanging objects (taut, do not sag, small to medium diameter, good aspect for a rope)
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS._BREAK_ROPE(System.Int32*,System.Int32*,System.Int32*,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            ropeTop returns top half of rope, ropeBottom returns bottom half of rope
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS.ATTACH_ENTITIES_TO_ROPE(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Attaches entity 1 to entity 2.
            If you use a boneName (p12/p13) make sure boneId (p15/p16) is set to -1.
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS._ATTACH_ENTITIES_TO_ROPE_2(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.String,System.String)">
            <summary>
            Attaches a rope to two entities: binds two bones from two entities; one entity can be an object, i.e. a suspension point, the other an NPC bone
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS._CREATE_ROPE_WINDING_ABILITY(System.Int32,System.String,System.String,System.Single,System.Boolean)">
            <summary>
            Combining this with ADD_ROPE enables winding
            p1: mostly empty (0)
            ropeModelType: RB_L_Wrist02, RB_R_Wrist02, ropeAttach, noose01x_Rope_03, SKEL_Neck0, SKEL_L_FOOT, SKEL_Neck1, Root_s_meatbit_Chunck_Xlarge01x
            _CREATE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS.ROPE_FORCE_LENGTH(System.Int32,System.Single)">
            <summary>
            Forces a rope to a certain length.
            </summary>
        </member>
        <member name="M:RDR2.Native.PHYSICS._0x8D59079C37C21D78(System.Int32,System.Single)">
            <summary>
            _ROPE_SET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x325434C68358D282(System.Boolean)">
            <summary>
            Only used in script function UPDATE_PLAYER_JUST_DIED_STATE
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_PLAYER_PED_SCRIPT_INDEX(System.Int32)">
            <summary>
            Does the same like PLAYER::GET_PLAYER_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_MODEL(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Make sure to request the model first and wait until it has loaded.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._NETWORK_HAS_PLAYER_VALID_PED(System.Int32)">
            <summary>
            Returns true if the given player has a valid ped.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_PLAYER_TEAM(System.Int32)">
            <summary>
            Gets the player's team.
            Returns -1 in singleplayer.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_TEAM(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the player's team.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_WANTED_LEVEL(System.Int32,System.Int32,System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.CLEAR_PLAYER_WANTED_LEVEL(System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_CONTROL(System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eSetPlayerControlFlags
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_POLICE_RADAR_BLIPS(System.Boolean)">
            <summary>
            If toggle is set to false:
             The police won't be shown on the (mini)map
            
            If toggle is set to true:
             The police will be shown on the (mini)map
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_PLAYING(System.Int32)">
            <summary>
            Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._MODIFY_PLAYER_UI_PROMPT(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Params: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/ePromptType
            promptType is mostly 34 (PP_TRACK_ANIMAL), promptMode = 0 (PP_MODE_BLOCK) in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._GET_PLAYER_UI_PROMPT_IS_DISABLED(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns false if PromptType is enabled
            Params: See 0x0751D461F06E41CE
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._MODIFY_PLAYER_UI_PROMPT_FOR_PED(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Params: See 0x0751D461F06E41CE
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._GET_PLAYER_UI_PROMPT_FOR_PED_IS_ENABLED(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if PromptType is enabled for ped (mount)
            Params: See 0x0751D461F06E41CE
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_ALL_RANDOM_PEDS_FLEE(System.Int32,System.Boolean)">
            <summary>
            Sets whether all random peds will run away from player if they are agitated (threatened) (bool=true), or some peds can stand up for themselves (bool=false).
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_DISABLE_PLAYER_WANTED_LEVEL(System.Int32,System.Boolean)">
            <summary>
            Disables the players ability to be wanted by lawmen
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x927861B2C08DBEA5(System.Int32)">
            <summary>
            _GET_A* - _GET_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._IS_PLAYER_FREE_FOCUSING(System.Int32)">
            <summary>
            Checks if player is focused on any entity
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xBEA3A6E5F5F79A6F(System.UInt64,System.UInt64)">
            <summary>
            _GET_PLAYER_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_FREE_AIMING(System.Int32)">
            <summary>
            Gets a value indicating whether the specified player is currently aiming freely.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_FREE_AIMING_AT_ENTITY(System.Int32,System.Int32)">
            <summary>
            Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x7AE93C45EC14A166(System.Int32,System.Int32*)">
            <summary>
            Only used in script function PROCESS_PED_INTERRUPT_DIALOGUE
            _GET_PLAYER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_LOCKON_RANGE_OVERRIDE(System.Int32,System.Single)">
            <summary>
            Affects the range of auto aim target.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(System.Int32,System.Boolean)">
            <summary>
            Sets whether this player can be hassled by gangs.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_CAN_USE_COVER(System.Int32,System.Boolean)">
            <summary>
            Sets whether this player can take cover.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xACA45DDCEF6071C4(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_CAN_BE_* - _SET_PLAYER_CAN_USE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xA0C683284DF027C7(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Params: p1 is mostly 15, sometimes 1 in R* Scripts (Function: PLAYER_TOGGLE_PICK_UP_HATS)
            _SET_PLAYER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_MAX_WANTED_LEVEL">
            <summary>
            Gets the maximum wanted level the player can get.
            Ranges from 0 to 5.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x8591EE69CC3ED257(System.Int32,System.Boolean)">
            <summary>
            SET_PLAYER_S/T*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_PLAYER_GROUP(System.Int32)">
            <summary>
            Returns the group ID the player is member of.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xB331D8A73F9D2BDF(System.Int32,System.UInt64*)">
            <summary>
            _IS_PLAYER_I* - _IS_PLAYER_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._ADD_PLAYER_AS_FOLLOW_TARGET(System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Used in script function: NET_AUTO_FOLLOW_UPDATE_LEADER_VALUES
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x2009F8AB7A5E9D6D(System.Int32)">
            <summary>
            _IS_PLAYER_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xE7F8707269544B29(System.Int32,System.Int32)">
            <summary>
            _IS_PLAYER_A* - _IS_PLAYER_BE*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_CONTROL_ON(System.Int32)">
            <summary>
            Returns whether the player can control himself.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_CLIMBING(System.Int32)">
            <summary>
            Returns TRUE if the player ('s ped) is climbing at the moment.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x621D1B289CAF5978(System.Int32)">
            <summary>
            _IS_PLAYER_S* - _IS_PLAYER_T*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_BEING_ARRESTED(System.Int32,System.Boolean)">
            <summary>
            Return true while player is being arrested / busted.
            
            If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
            
            If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_PLAYER_INDEX">
            <summary>
            Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.INT_TO_PLAYERINDEX(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.INT_TO_PARTICIPANTINDEX(System.Int32)">
            <summary>
            Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.PLAYER_ID">
            <summary>
            This returns YOUR 'identity' as a Player type.
            
            Always returns 0 in story mode.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.PLAYER_PED_ID">
            <summary>
            Returns current player ped
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.NETWORK_PLAYER_ID_TO_INT">
            <summary>
            Does exactly the same thing as PLAYER_ID()
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xC67A4910425F11F1(System.Int32,System.String)">
            <summary>
            _DISABLE_*(PLAYER_FORCED_INTERACTION_LOCKON?)
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_INVINCIBLE(System.Int32,System.Boolean)">
            <summary>
            Simply sets you as invincible (Health will not deplete).
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_PLAYER_INVINCIBLE(System.Int32)">
            <summary>
            Returns the player's invincibility status.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_TARGETING_MODE(System.Int32)">
            <summary>
            Sets your targeting mode for when you're on foot.
            enum eTargetingMode
            {
            	TARGETING_MODE_INVALID = -1,
            	TARGETING_MODE_CAUSAL, (Wide)
            	TARGETING_MODE_NORMAL,
            	TARGETING_MODE_HARD, (Narrow)
            	TARGETING_MODE_EXPERT (Free Aim)
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_IN_VEHICLE_TARGETING_MODE(System.Int32)">
            <summary>
            Sets your targeting mode for when you're in a vehicle (perhaps a mount/horse).
            see SET_PLAYER_TARGETING_MODE for eTargetingMode
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x72AD59F7B7FB6E24(System.Int32,System.Int32)">
            <summary>
            _HAS_PLAYER_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_DAMAGE_INFO_OVERRIDE(System.Int32,System.String)">
            <summary>
            damageInfo: STANDARD_PED_DAMAGE, STANDARD_FEMALE_PED_DAMAGE, STANDARD_PLAYER_PED_DAMAGE_MP, STANDARD_FEMALE_PLAYER_PED_DAMAGE_MP
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x1F488807BC8E0630(System.Int32)">
            <summary>
            _RESET_PLAYER_A* - _RESET_PLAYER_I*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(System.Int32,System.Single)">
            <summary>
            This can be between 1.0f - 50.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_SWIM_MULTIPLIER_FOR_PLAYER(System.Int32,System.Single)">
            <summary>
            Swim speed multiplier.
            Multiplier goes up to 1.49f
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.DISABLE_PLAYER_FIRING(System.Int32,System.Boolean)">
            <summary>
            Inhibits the player from using any method of combat including melee and firearms.
            
            NOTE: Only disables the firing for one frame
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xBBA140062B15A8AC(System.Int32)">
            <summary>
            Used in script function INIT_DEADEYE_SLOWDOWN
            _SPECIAL_ABILITY*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._MODIFY_INFINITE_TRAIL_VISION(System.Int32,System.Boolean)">
            <summary>
            Toggle handles wether Deadeye and Eagleeye are infinite or not.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SPECIAL_ABILITY_RESTORE_BY_AMOUNT(System.Int32,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Restores Deadeye by given amount.
            Params: p2, p3, p4 = 0, 0, 1 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xFA437FA0738C370C(System.Int32,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Params: p1, p2, p3, p4 = 1.f, 0, 0, 0 in R* Scripts
            _SPECIAL_ABILITY*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SPECIAL_ABILITY_RESTORE_OUTER_RING(System.Int32,System.Single)">
            <summary>
            Only used in R* SP Script short_update
            Restores Deadeye Outer Ring
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._GET_PLAYER_REQUIRED_DEAD_EYE_AMOUNT(System.Int32)">
            <summary>
            If player has less Dead Eye than required, Dead Eye cant be triggered.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SPECIAL_ABILITY_GET_AMOUNT_CACHED(System.Int32)">
            <summary>
            Returns Deadeye value from player
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SPECIAL_ABILITY_DRAIN_BY_AMOUNT(System.Int32,System.Single,System.UInt64)">
            <summary>
            Drains Deadeye by given amount.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SPECIAL_ABILITY_START_RESTORE(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Params: p1 = -1 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_SPECIAL_ABILITY_DURATION_COST(System.Int32,System.Single)">
            <summary>
            durationCost: per second
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_SPECIAL_ABILITY_DISABLE_TIMER(System.Int32,System.Single)">
            <summary>
            Only used in R* SP Script short_update
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x4D1699543B1C023C(System.Int32,System.Single)">
            <summary>
            _SET_SPECIAL_ABILITY_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_STAT_FLAG_HASH(System.Int32,System.UInt32)">
            <summary>
            _N*, _O* or _PE*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._ENABLE_EAGLEEYE(System.Int32,System.Boolean)">
            <summary>
            (Un)lock Eagle Eye functionality
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SECONDARY_SPECIAL_ABILITY_SET_ACTIVE(System.Int32)">
            <summary>
            Activates EagleEye, called together with 0x28A13BF6B05C3D83
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SECONDARY_SPECIAL_ABILITY_SET_DISABLED(System.Int32,System.Boolean)">
            <summary>
            Deactivates EagleEye, called together with 0xC0B21F235C02139C
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.STOP_PLAYER_TELEPORT">
            <summary>
            Disables the player's teleportation
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_HEALTH_RECHARGE_TIME_MODIFIER(System.Int32,System.Single)">
            <summary>
            Setting player's Health recharge time to zero forces immediate health regen
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PED_ACTIVE_PLAYER_HORSE(System.Int32,System.Int32)">
            <summary>
            Seems to work similar to 0xD2CB0FB0FDCB473D
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x77B0B6D17A3AC9AA(System.UInt64,System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xDF93973251FB2CA5(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.SET_PLAYER_WEAPON_DAMAGE_MODIFIER(System.Int32,System.Single)">
            <summary>
            This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x818241B3EDA84191(System.Int32,System.Boolean)">
            <summary>
            _SET_PLAYER_DAMAGE_* - _SET_PLAYER_DEFENSE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_RECEIVED_HORSEBACK_DAMAGE_DECREASE(System.Int32,System.Single)">
            <summary>
            Decreases the damage the player receives while on horseback
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_AI_PLAYER_DEFENSE_MODIFIER_AGAINST_AI(System.Int32,System.Single)">
            <summary>
            Sets Player's Defense against AI modifier
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_DEFENSE_MODIFIER(System.Int32,System.Single,System.Single)">
            <summary>
            Sets stamina core drains peed using ranged damage scale and melee damage scale
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_DEFENSE_TYPE_MODIFIER(System.Int32,System.Int32,System.Single)">
            <summary>
            bullet damage modifier: type = 4
            explosive damage Defense mod: type = 7
            fire damage Defense mod: type = 8, 15
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_LASSO_DAMAGE_PER_SECOND(System.Int32,System.Single)">
            <summary>
            _SET_PLAYER_A* - _SET_PLAYER_C*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.IS_PLAYER_RIDING_TRAIN(System.Int32)">
            <summary>
            Returns true if the player is riding a train.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_DEADEYE_ABILITY_LEVEL(System.Int32,System.Int32)">
            <summary>
            Max level is 5.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_DEADEYE_ABILITY_DEPLETION_DELAY(System.Int32,System.Single)">
            <summary>
            Only used in R* SP Script short_update
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x570A13A4CA2799BB(System.Int32,System.Boolean)">
            <summary>
            Used in script function INIT_DEADEYE_SLOWDOWN
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x3ACAC8832E77BC93(System.Int32,System.Boolean)">
            <summary>
            Used in script function INIT_DEADEYE_SLOWDOWN
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._REGISTER_EAGLE_EYE_FOR_ENTITY(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Used for setting up eagle eye for entity
            Params: p2 = re-register or not?
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xE5D3EB37ABC1EB03(System.Int32)">
            <summary>
            _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._EAGLE_EYE_SET_COLOR(System.Int32,System.Boolean,System.UInt64*)">
            <summary>
            false: default eagleeye color
            true: green eagleeye color
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xF21C7A3F3FFBA629(System.Int32)">
            <summary>
            _CLEAR_FACIAL_* - _CLEAR_PED_BLOOD*
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_LOCAL_PLAYER_PERSONA_ABILITY_FLAG(System.Int32,System.Boolean)">
            <summary>
            see personaabilities.meta
            enum ePersonaAbilityFlag
            {
            	PERSONA_CAN_AUTOESCAPE_FROM_LASSO,
            	PERSONA_HAT_BLOCKS_FIRST_HEADSHOT,
            	PERSONA_FULL_AUTO_FOR_ALL_WEAPONS,
            	PERSONA_MIGHT_LIVE_AFTER_DEADLY_DAMAGE,
            	PERSONA_IGNORE_AIM_BEFORE_FIRING_RESTRICTIONS,
            	PERSONA_DEADEYE_INSTANT_RELOAD,
            	PERSONA_USE_PHOSPHOROUS_ROUNDS,
            	PERSONA_CONT_DEADEYE_ON_TAKING_COVER,
            	PERSONA_CONT_DEADEYE_ON_RELOAD,
            	PERSONA_CONT_DEADEYE_ON_SHOOTING,
            	PERSONA_CONT_DEADEYE_ON_EXITING_AIM,
            	PERSONA_DISABLE_PLAYER_CANCELLING_DEADEYE,
            	PERSONA_CONT_DEADEYE_ON_RAGDOLL,
            	PERSONA_USE_EXPLOSIVE_ROUNDS,
            	PERSONA_EXIT_DEADEYE_ON_TAKING_DAMAGE,
            	PERSONA_CARRY_TWO_MONEYBAGS,
            	PERSONA_ABILITY_LONG_PICK_HERBS,
            	PERSONA_ABILITY_UNBREAKABLE_LASSO,
            	PERSONA_CONT_DEADEYE_ON_SPRINTING,
            	PERSONA_CANT_DEAL_HEADSHOTS,
            	PERSONA_HANGMAN,
            	PERSONA_ALLOW_DEADEYE_WITH_MELEE_WEAPONS,
            	PERSONA_ALLOW_DEADEYE_WHILE_UNARMED,
            	PERSONA_DISABLE_DEADEYE_PERFECT_ACCURACY,
            	PERSONA_CANT_DEAL_HEADSHOTS_TO_PLAYERS,
            	PERSONA_CANT_DEAL_CRITICAL_DAMAGE,
            	PERSONA_CANT_DEAL_CRITICAL_DAMAGE_TO_PLAYERS,
            	PERSONA_ALLOW_EAGLEEYE_IN_COMBAT,
            	PERSONA_CONT_EAGLEEYE_ON_SPRINT,
            	PERSONA_SUPPRESS_LENGENDARY_EAGLEEYE_TRAIL_COLOR
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_BOW_STAMINA_DRAIN_SPEED(System.Int32,System.Single)">
            <summary>
            Decreases Stamina bar drain speed by % when drawing a bow.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xBB6EA5D59E926095(System.Int32,System.UInt32)">
            <summary>
            NPEW__ENUM__EMOTE_CATEGORY_INVALID = -1
            NPEW__ENUM__EMOTE_CATEGORY_ACTIONS
            NPEW__ENUM__EMOTE_CATEGORY_ANTAGONIZE
            NPEW__ENUM__EMOTE_CATEGORY_REACTIONS
            NPEW__ENUM__EMOTE_CATEGORY_GREET
            NPEW__ENUM__NUM_EMOTE_CATEGORIES
            NPEW__ENUM__NUM_DISPLAY_TEXTURES
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_RESET_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/AI/PLAYER_RESET_FLAGS
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._GET_PLAYER_RESET_FLAG(System.Int32,System.Int32)">
            <summary>
            playerResetFlag: See 0x9F9A829C6751F3C7
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_OWNS_MOUNT(System.Int32,System.Int32)">
            <summary>
            Seems to enable active horse equipment prompt when being near it and enables the control that opens the inventory as well
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_PLAYER_HUNTING_WAGON(System.Int32,System.Int32)">
            <summary>
            Only applies to HUNTERCART01
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER.GET_DISCOVERABLE_NAME_HASH_AND_TYPE_FOR_ENTITY(System.Int32,System.UInt32*)">
            <summary>
            Returns name hash (name) and outHash includes the type.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._GET_CONSTRUCTED_DISCOVERED_CHARACTER_NAME(System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            p0: mostly Ped Hashes
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._SET_LOCKON_FOCUS_FIRE_VFX(System.Int32,System.String)">
            <summary>
            Focus Fire VFX start for player: p1 = focusfire
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x0B7803F6F7BB43E0">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0xC74EB3F2EC169F6B(System.UInt64)">
            <summary>
            Hardcoded to return zero/false.
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x3B296934DB026873(System.UInt64,System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.PLAYER._0x57028FD99886F6F9">
            <summary>
            _IS_PLAYER_D* - _IS_PLAYER_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.POPULATION._ADD_AMBIENT_AVOIDANCE_RESTRICTION(System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/PedFilterFlags
            </summary>
        </member>
        <member name="M:RDR2.Native.POPULATION._REMOVE_AMBIENT_AVOIDANCE_RESTRICTION(System.Int32)">
            <summary>
            flags: see 0xB56D41A694E42E86
            </summary>
        </member>
        <member name="M:RDR2.Native.POPULATION._ADD_AMBIENT_SPAWN_RESTRICTION(System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.Int32)">
            <summary>
            flags: see 0xB56D41A694E42E86
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.POPULATION._SET_PED_SHOULD_IGNORE_AVOIDANCE_VOLUMES(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.POPULATION._GET_RANDOM_FISH_TYPE_FOR_LOCATION">
            <summary>
            Returns model hash of the closest fish
            </summary>
        </member>
        <member name="M:RDR2.Native.POPULATION._0xEC116EDB683AD479(System.Boolean)">
            <summary>
            Only used for Special Event (XMAS).
            _SET_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._REQUEST_PROP_SET_2(System.UInt32)">
            <summary>
            Same as _REQUEST_PROP_SET
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._HAS_PROP_SET_LOADED_2(System.UInt32)">
            <summary>
            Same as _HAS_PROP_SET_LOADED
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._CREATE_PROP_SET_2(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Same as _CREATE_PROP_SET
            https://github.com/femga/rdr3_discoveries/blob/master/objects/propsets_list.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._CREATE_PROP_SET_4(System.UInt32,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Same as CREATE_PROP_SET_INSTANCE_ATTACHED_TO_ENTITY
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.PROPSET._ADD_PROP_SET_FOR_VEHICLE(System.Int32,System.UInt32)" -->
        <member name="M:RDR2.Native.PROPSET._ADD_ADDITIONAL_PROP_SET_FOR_VEHICLE(System.Int32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_propsets.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._GET_VEHICLE_LIGHT_PROP_SET(System.Int32)">
            <summary>
            Returns PropSet handle to be used with _GET_PROP_SET_MODEL
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._ADD_LIGHT_PROP_SET_TO_VEHICLE(System.Int32,System.UInt32)">
            <summary>
            To remove propsets either parse a zero as hash or call 0xE31C0CB1C3186D40
            0xA6A9712955F53D9C returns lightPropset Hashes
            https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_lantern_propsets.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.PROPSET._GET_TRAIN_CARRIAGE_PROP_SET(System.Int32)">
            <summary>
            Example before/after deleting a train carriage's propset: https://imgur.com/a/qRNrIrK
            </summary>
        </member>
        <member name="M:RDR2.Native.RECORDING.REPLAY_PREVENT_RECORDING_THIS_FRAME">
            <summary>
            nullsub, doesn't do anything
            
            Old name: _STOP_RECORDING_THIS_FRAME
            </summary>
        </member>
        <member name="M:RDR2.Native.REPLAY.REPLAY_SYSTEM_HAS_REQUESTED_A_SCRIPT_CLEANUP">
            <summary>
            Hardcoded to return false.
            
            Old name: _IS_INTERIOR_RENDERING_DISABLED
            </summary>
        </member>
        <member name="M:RDR2.Native.REPLAY.SET_SCRIPTS_HAVE_CLEANED_UP_FOR_REPLAY_SYSTEM">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.REPLAY.OPEN_VIDEO_EDITOR">
            <summary>
            Hardcoded to return true.
            </summary>
        </member>
        <member name="M:RDR2.Native.REPLAY.CLOSE_VIDEO_EDITOR(System.UInt64)">
            <summary>
            Hardcoded to return true.
            </summary>
        </member>
        <member name="M:RDR2.Native.REPLAY.IS_VIDEO_EDITOR_RUNNING">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.HAS_SCRIPT_LOADED(System.String)">
            <summary>
            Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.SCRIPT_THREAD_ITERATOR_RESET">
            <summary>
            Starts a new iteration of the current threads.
            Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID">
            <summary>
            If the function returns 0, the end of the iteration has been reached.
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.GET_NUMBER_OF_THREADS_RUNNING_THE_SCRIPT_WITH_THIS_HASH(System.UInt32)">
            <summary>
            Gets the number of instances of the specified script is currently running.
            
            Actually returns numRefs - 1.
            if (program)
            	v3 = rage::scrProgram::GetNumRefs(program) - 1;
            return v3;
            
            Old name: _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS._GET_THREAD_EXIT_REASON">
            <summary>
            enum eThreadExitReason
            {
            	THREAD_EXIT_REASON_NONE,
            	THREAD_EXIT_REASON_BACKGROUND_THREAD_STOPPED,
            	THREAD_EXIT_REASON_SESSION_MERGE,
            	THREAD_EXIT_REASON_SCENARIO_OUT_OF_SCOPE,
            	THREAD_EXIT_REASON_REQUESTED_BY_SCRIPT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.GET_NUMBER_OF_EVENTS(System.Int32)">
            <summary>
            eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_ERRORS (CEventGroupScriptErrors)
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.GET_EVENT_EXISTS(System.Int32,System.Int32)">
            <summary>
            eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.GET_EVENT_AT_INDEX(System.Int32,System.Int32)">
            <summary>
            eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
            
            Returns event name hash: https://alloc8or.re/rdr3/doc/enums/eEventType.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.GET_EVENT_DATA(System.Int32,System.Int32,System.UInt64*,System.Int32)">
            <summary>
            eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork), 2 = unk, 3 = unk, 4 = SCRIPT_EVENT_QUEUE_SCRIPT_ERRORS (CEventGroupScriptErrors)
            
            Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
            
            https://github.com/femga/rdr3_discoveries/tree/master/AI/EVENTS
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.SCRIPTS.TRIGGER_SCRIPT_EVENT(System.Int32,System.UInt64*,System.Int32,System.Int32,System.Int32*)" -->
        <member name="M:RDR2.Native.SCRIPTS._0x11B0A0B282FA9B10(System.Boolean)">
            <summary>
            Used in Script Function DISABLE_REGISTERED_WORLD_BRAINS
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.IS_LOADING_SCREEN_VISIBLE">
            <summary>
            Same as GET_IS_LOADING_SCREEN_ACTIVE
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_IS_EXITFLAG_SET">
            <summary>
            Returns true if GtaThread+0x77C is equal to 1.
            
            Old name: _BG_EXITED_BECAUSE_BACKGROUND_THREAD_STOPPED
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_SET_EXITFLAG_RESPONSE">
            <summary>
            Sets bit 0 in GtaThread+0x784
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_START_CONTEXT_HASH(System.UInt32)">
            <summary>
            Hashed version of BG_START_CONTEXT
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_END_CONTEXT_HASH(System.UInt32)">
            <summary>
            Hashed version of BG_END_CONTEXT
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_START_CONTEXT(System.String)">
            <summary>
            Inserts the given context into the background scripts context map.
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.BG_END_CONTEXT(System.String)">
            <summary>
            Deletes the given context from the background scripts context map.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.SCRIPTS._ACTIVATE_GOAL_CONTEXT(System.UInt32)" -->
        <member name="M:RDR2.Native.SCRIPTS._DEACTIVATE_GOAL_CONTEXT(System.UInt32)">
            <summary>
            goalContext: see _ACTIVATE_GOAL_CONTEXT
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS._IS_GOAL_CONTEXT_ACTIVE(System.UInt32)">
            <summary>
            goalContext: see _ACTIVATE_GOAL_CONTEXT
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS._NET_RPC_GUID_TO_STRING(System.UInt64*)">
            <summary>
            Returns "INVALID_NET_RPC_GUID" if netRpcGuid is invalid.
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.HAVE_ALL_CHILD_SCRIPTS_TERMINATED(System.Int32)">
            <summary>
            Waiting for child scripts to terminate / waiting for collapse of child scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.SCRIPTS.START_NEW_SCRIPT_WITH_ARGS(System.String,System.UInt64*,System.Int32,System.Int32)">
            <summary>
            return : script thread id, 0 if failed
            Pass pointer to struct of args in p1, size of struct goes into p2
            </summary>
        </member>
        <member name="M:RDR2.Native.SAVE.SAVEGAME_SAVE_SP(System.UInt32)">
            <summary>
            enum eSavegameType : Hash
            {
            	SAVEGAMETYPE_AMBIENT = 0x3CA4E1F8,
            	SAVEGAMETYPE_DEFAULT = 0xCB6ED080,
            	SAVEGAMETYPE_DELETE_CHAR = 0xCD35F947,
            	SAVEGAMETYPE_END_CREATE_NEWCHAR = 0x4C50A3CE,
            	SAVEGAMETYPE_END_MATCH = 0xE470ED50,
            	SAVEGAMETYPE_END_MISSION = 0x9A444E54,
            	SAVEGAMETYPE_END_SESSION = 0x6D23956C,
            	SAVEGAMETYPE_END_SHOPPING = 0xA311A6C4,
            	SAVEGAMETYPE_RANKUP = 0xE25F8017,
            	SAVEGAMETYPE_SCRIPT_MP_GLOBALS = 0xAFF30AD4,
            	SAVEGAMETYPE_SP_AUTOSAVE = 0xF4AE69EC,
            	SAVEGAMETYPE_SP_DEBUG = 0x6A8122FD,
            	SAVEGAMETYPE_SP_PROPERTY = 0xAE0AB38E
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.SAVE.SAVEGAME_SAVE_MP(System.UInt32)">
            <summary>
            See SAVEGAME_SAVE_SP
            </summary>
        </member>
        <member name="M:RDR2.Native.SAVE._SAVEGAME_GET_INT_2(System.UInt64*,System.String)">
            <summary>
            Does the exact same as 0x529B9CCD0972AF4E
            Commonly used with time/timestamps
            </summary>
        </member>
        <member name="M:RDR2.Native.SAVE._SAVEGAME_GET_INT_3(System.UInt64*,System.String)">
            <summary>
            Does the exact same as 0x529B9CCD0972AF4E
            Commonly used with enums and flags
            </summary>
        </member>
        <member name="M:RDR2.Native.SAVE._SAVEGAME_GET_BOOL(System.UInt64*,System.String)">
            <summary>
            Does the exact same as 0x529B9CCD0972AF4E
            </summary>
        </member>
        <member name="M:RDR2.Native.SHAPETEST.START_SHAPE_TEST_LOS_PROBE(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Asynchronously starts a line-of-sight (raycast) world probe shape test.
            
            Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
            
            p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
            </summary>
        </member>
        <member name="M:RDR2.Native.SHAPETEST.START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
            </summary>
        </member>
        <member name="M:RDR2.Native.SHAPETEST.START_SHAPE_TEST_MOUSE_CURSOR_LOS_PROBE(RDR2.Math.Vector3*,RDR2.Math.Vector3*,System.Int32,System.Int32,System.Int32)">
            <summary>
            Old name: _START_SHAPE_TEST_SURROUNDING_COORDS
            </summary>
        </member>
        <member name="M:RDR2.Native.SHAPETEST.GET_SHAPE_TEST_RESULT(System.Int32,System.Boolean*,RDR2.Math.Vector3*,RDR2.Math.Vector3*,System.Int32*)">
            <summary>
            Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
            
            When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
            
            enum eShapeTestStatus
            {
            	SHAPETEST_STATUS_NONEXISTENT,
            	SHAPETEST_STATUS_RESULTS_NOTREADY,
            	SHAPETEST_STATUS_RESULTS_READY
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.SOCIALCLUB.SC_PROFANITY_CHECK_STRING(System.String,System.Int32*)">
            <summary>
            Starts a task to check an entered string for profanity on the ROS/Social Club services.
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_IS_VALID(System.UInt64*)">
            <summary>
            struct StatId
            {
            	alignas(8) Hash BaseId;
            	alignas(8) Hash PermutationId;
            }
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_INT(System.UInt64*,System.Int32,System.Boolean)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_FLOAT(System.UInt64*,System.Single,System.Boolean)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_BOOL(System.UInt64*,System.Boolean,System.Boolean)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_GXT_LABEL(System.UInt64*,System.String,System.Boolean)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_DATE(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_GET_INT(System.UInt64*,System.Int32*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_GET_FLOAT(System.UInt64*,System.Single*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_GET_BOOL(System.UInt64*,System.Boolean*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_GET_DATE(System.UInt64*,System.UInt64*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x0FEE2561120F3333(System.UInt64*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._STAT_ID_INCREMENT_INT(System.UInt64*,System.Int32)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._STAT_ID_INCREMENT_FLOAT(System.UInt64*,System.Single)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._STAT_ID_DECREMENT_INT(System.UInt64*,System.Int32)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x91A4F58E01ED5E4C(System.UInt64*,System.Int32)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0xE141F6B40B1E3683(System.UInt64*,System.Single)">
            <summary>
            statId: see STAT_ID_IS_VALID
            Only used in R* SP Scripts
            _STAT_ID_SET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.STAT_ID_SET_TO_POSSE_ID(System.UInt64*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._STAT_CALCULATE_COOLDOWN(System.Int32)">
            <summary>
            Calculation: (value / 1000) / 60 % 60
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._STAT_PHEROMONE_COOLDOWN_LEGENDARY_ANIMAL(System.Int32,System.UInt64*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x8312F09C56149A8A(System.UInt32)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0xA59590050F80FF2E(System.UInt64,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x302E71C1D9EE75B9(System.UInt64*,System.UInt32,System.Int32*)">
            <summary>
            statId: see STAT_ID_IS_VALID
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x4DAC398297981B87(System.Int32)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS.CHAL_IS_GOAL_ACTIVE(System.UInt32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/challenge_goals.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x4F2D5FA23DB992DE">
            <summary>
            Only used in R* Script net_char_creator
            </summary>
        </member>
        <member name="M:RDR2.Native.STATS._0x4E463A3CDEFFFE96">
            <summary>
            Only used in R* Script net_char_creator
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REQUEST_MODEL(System.UInt32,System.Boolean)">
            <summary>
            Request a model to be loaded into memory.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.HAS_MODEL_LOADED(System.UInt32)">
            <summary>
            Checks if the specified model has loaded into memory.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.SET_MODEL_AS_NO_LONGER_NEEDED(System.UInt32)">
            <summary>
            Marks the model as no longer needed.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.IS_MODEL_IN_CDIMAGE(System.UInt32)">
            <summary>
            Returns whether the specified model exists in the game.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.IS_MODEL_VALID(System.UInt32)">
            <summary>
            Returns whether the specified model is valid
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.IS_MODEL_A_VEHICLE(System.UInt32)">
            <summary>
            Returns whether the specified model represents a vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.HAS_CLIP_SET_LOADED(System.String)">
            <summary>
            Alias for HAS_ANIM_SET_LOADED.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REMOVE_CLIP_SET(System.String)">
            <summary>
            Alias for REMOVE_ANIM_SET.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING._GET_IPL_BOUNDING_SPHERE(System.UInt32,RDR2.Math.Vector3*,System.Single*)">
            <summary>
            Outputs IPL position and radius (previously wrongly named heading)
            https://github.com/femga/rdr3_discoveries/blob/master/imaps/imaps_with_coords_and_heading.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REQUEST_IPL_HASH(System.UInt32)">
            <summary>
            Old name: _REQUEST_IMAP
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REQUEST_IPL_BY_HASH(System.UInt32)">
            <summary>
            Old name: _REQUEST_IMAP_2
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REMOVE_IPL_HASH(System.UInt32)">
            <summary>
            Old name: _REMOVE_IMAP
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.REMOVE_IPL_BY_HASH(System.UInt32)">
            <summary>
            Old name: _REMOVE_IMAP_2
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.IS_IPL_ACTIVE_HASH(System.UInt32)">
            <summary>
            Old name: _IS_IMAP_ACTIVE
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.IS_IPL_ACTIVE_BY_HASH(System.UInt32)">
            <summary>
            Old name: _IS_IMAP_ACTIVE_2
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING._IS_POSITION_INSIDE_IPL_STREAMING_EXTENTS(System.UInt32,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if IPL is streamed in (?)
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.SET_FOCUS_ENTITY(System.Int32)">
            <summary>
            It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING.SET_ALL_MAPDATA_CULLED(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING._0xB9B9E47EDB9D63DB">
            <summary>
            Sorts some unknown data.
            
            Likely SORT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.STREAMING._0x032A14D082A9B269(System.UInt32)">
            <summary>
            _SET_E* or _SET_F*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PAUSE(System.Int32,System.Int32)">
            <summary>
            This tasks the ped to do nothing for the specified amount of milliseconds.
            This is useful if you want to add a delay between tasks when using a sequence task.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_STAND_STILL(System.Int32,System.Int32)">
            <summary>
            Makes the specified ped stand still for (time) milliseconds.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_DISEMBARK_NEAREST_TRAIN_CARRIAGE(System.Int32,System.Single,System.Int32)">
            <summary>
            flags: See TASK_ENTER_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_ENTER_VEHICLE(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.UInt64)">
            <summary>
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eEnterExitVehicleFlags
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_LEAVE_VEHICLE(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            flags: See TASK_ENTER_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_MOUNT_ANIMAL(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.UInt64,System.UInt64)">
            <summary>
            timer: in ms, if it reaches 0 it will auto warp the ped on the horse
            mountStyle: See TASK_ENTER_VEHICLE
            Flags will still apply to mountStyle
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_DISMOUNT_ANIMAL(System.Int32,System.Int32,System.UInt64,System.UInt64,System.UInt64,System.Int32)">
            <summary>
            Dismounts the ped from the animal it's mounted on. taskFlag affects what side the rider gets off. p2-p5 are almost always 0.
            flags: See TASK_ENTER_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_MOVE_FOLLOW_ROAD_USING_NAVMESH(System.Int32,System.Single,System.Single,System.Single,System.Single,System.UInt64)">
            <summary>
            Params: moveBlendRatio commonly 1.25f, p5 is always 0 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_ACHIEVE_HEADING(System.Int32,System.Single,System.Int32)">
            <summary>
            Makes the specified ped achieve the specified heading.
            
            pedHandle: The handle of the ped to assign the task to.
            heading: The desired heading.
            timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canceled, and the ped will stay at the heading it managed to reach in the time.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_FLUSH_ROUTE">
            <summary>
            Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_EXTEND_ROUTE(System.Single,System.Single,System.Single)">
            <summary>
            Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
            
            A maximum of 8 points can be added.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.TASK.TASK_ENTER_ANIM_SCENE(System.Int32,System.Int32,System.String,System.String,System.Single,System.Boolean,System.Int32,System.Int32,System.Single)" -->
        <member name="M:RDR2.Native.TASK.TASK_GO_TO_WHISTLE(System.Int32,System.Int32,System.Int32)">
            <summary>
            enum eWhistleType
            {
            	WHISTLE_MAIN,
            	WHISTLE_SECONDARY,
            	WHISTLE_DOUBLE,
            	WHISTLE_URGENT,
            	WHISTLE_LONG
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_FLEE_FROM_COORD(System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            fleeType: see TASK_FLEE_COORD
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_FLEE_FROM_PED(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            fleeType: see TASK_FLEE_COORD
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_SMART_FLEE_COORD(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Makes the specified ped flee the specified distance from the specified position.
            fleeType: see TASK_FLEE_COORD
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_SMART_FLEE_PED(System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Single,System.Int32)">
            <summary>
            Makes a ped run away from another ped (fleeFromTarget)
            
            fleeDistance = ped will flee this distance
            fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
            fleeType = see TASK_FLEE_COORD, can be 0, R* Scripts: fm_mission/race_controller: 66048; fme_escaped_convicts: 2260992, 2523136, 2359296; la_alligator/fox: 2097152; net_fetch: 17301536; net_stable_mount: 540928
            fleeSpeed = mostly 3f, rarely 1f in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_FLEE_COORD(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Params: p5 = some flag?, p6 = -1.0f, p8 = 0 in R* Scripts
            fleeStyle: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eFleeStyle
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_FLEE_PED(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Params: p4 = -1.0f, p5 = -1, p6 = 0 in R* Scripts
            fleeStyle: see TASK_FLEE_COORD
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.ADD_FLEE_TARGET_PED(System.Int32,System.Int32,System.Single)">
            <summary>
            Params: p2 is always -1.f in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_REACT(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.String,System.Single,System.Single,System.Int32)">
            <summary>
            Makes a ped react to an entity.
            Params: reactingTo Entity can be 0, p8 is always 4
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_WANDER_STANDARD(System.Int32,System.Single,System.Int32)">
            <summary>
            Makes ped walk around the area.
            
            set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_HORSE_ACTION(System.Int32,System.Int32,System.Int32,System.UInt64)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_HORSE_ACTION
            Params: p2, p3 are set to 0 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_ANIMAL_INTERACTION(System.Int32,System.Int32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ANIMAL_INTERACTION
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_FOLLOW_NAV_MESH_TO_COORD(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single)">
            <summary>
            If no timeout, set timeout to -1.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_PED_PATH_LADDER_COST_MODIFIER(System.Int32,System.Single)">
            <summary>
            _SET_PED_PATH_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PLAY_ANIM(System.Int32,System.String,System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Boolean,System.Int32,System.Boolean,System.String,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/animations
            flags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eScriptedAnimFlags
            ikFlags: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eIkControlFlags 
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PLAY_ANIM_ADVANCED(System.Int32,System.String,System.String,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            flags: see TASK_PLAY_ANIM
            ikFlags: see TASK_PLAY_ANIM
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.START_TASK_ITEM_INTERACTION(System.Int32,System.UInt32,System.UInt32,System.Int32,System.Int32,System.Single)">
            <summary>
            Params: p3 = 0, 1; p5 = 0.0f, -1.0f
            https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_ITEM_INTERACTION_3(System.Int32,System.UInt32,System.UInt64*,System.UInt64,System.UInt64,System.UInt64,System.Single)">
            <summary>
            Params: p3, p4, p5, p6: 0, 0, 0, -1.0f in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_ITEM_INTERACTION_ENTITY_FROM_PED(System.Int32,System.UInt32)">
            <summary>
            item hashes: PRIMARYITEM, P_MUGCOFFEE01X_PH_R_HAND, P_BOTTLEBEER01X_PH_R_HAND
            http://prntscr.com/1qtp3bz
            https://github.com/femga/rdr3_discoveries/tree/master/tasks/TASK_ITEM_INTERACTION
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._0x678D3226CF70B9C8(System.Int32,System.Boolean)">
            <summary>
            Only used in R* SP Script beat_washed_ashore
            Returns Object prop for TASK::_TASK_ITEM_INTERACTION_2
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_EVASIVE_ANIM(System.Int32,System.Int32,System.Int32)">
            <summary>
            Params: p2 is returned by BUILTIN::SHIFT_LEFT
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_LOOK_AT_ENTITY(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            param3: duration in ms, use -1 to look forever
            param4: using 2048 is fine
            param5: using 3 is fine
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._0x508F5053E3F6F0C4(System.Int32,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Only used in R* SP Scripts
            Params: p4 = 1.0f - 30.0f
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.GET_SEQUENCE_PROGRESS(System.Int32)">
            <summary>
            returned values:
            0 to 7 = task that's currently in progress, 0 meaning the first one.
            -1 no task sequence in progress.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.GET_SCRIPT_TASK_STATUS(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Gets the status of a script-assigned task, and returns an int between 0-8
            taskHash: https://alloc8or.re/rdr3/doc/enums/eScriptTaskHash.txt 
            
            WAITING_TO_START_TASK = 0,
            PERFORMING_TASK
            DORMANT_TASKduration
            VACANT_STAGE
            GROUP_TASK_STAGE
            ATTRACTOR_SCRIPT_TASK_STAGE
            SECONDARY_TASK_STAGE
            TASK_NOT_FOUND
            FINISHED_TASK
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.REACT_LOOK_AT(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.UInt64,System.UInt64)">
            <summary>
            lookIntensity: see SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
            
            exitAnimation: LOOK_RETURN_GENERIC = 1,
            LOOK_RETURN_DISMISSIVE = 2,
            LOOK_RETURN_RELIEVED = 3
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_LEAVE_ANY_VEHICLE(System.Int32,System.Int32,System.Int32)">
            <summary>
            flags: See TASK_ENTER_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_AIM_GUN_AT_ENTITY(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_TURN_PED_TO_FACE_ENTITY(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(System.Int32,System.Int32)">
            <summary>
            Makes the specified ped shuffle to the next vehicle seat.
            The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_TURN_PED_TO_FACE_COORD(System.Int32,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            duration in milliseconds
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_VEHICLE_TEMP_ACTION(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Documentation from GTA V, might be the same in RDR:
            
            '1 - brake
            '3 - brake + reverse
            '4 - turn left 90 + braking
            '5 - turn right 90 + braking
            '6 - brake strong (handbrake?) until time ends
            '7 - turn left + accelerate
            '7 - turn right + accelerate
            '9 - weak acceleration
            '10 - turn left + restore wheel pos to center in the end
            '11 - turn right + restore wheel pos to center in the end
            '13 - turn left + go reverse
            '14 - turn left + go reverse
            '16 - crash the game after like 2 seconds :)
            '17 - keep actual state, game crashed after few tries
            '18 - game crash
            '19 - strong brake + turn left/right
            '20 - weak brake + turn left then turn right
            '21 - weak brake + turn right then turn left
            '22 - brake + reverse
            '23 - accelerate fast
            '24 - brake
            '25 - brake turning left then when almost stopping it turns left more
            '26 - brake turning right then when almost stopping it turns right more
            '27 - brake until car stop or until time ends
            '28 - brake + strong reverse acceleration
            '30 - performs a burnout (brake until stop + brake and accelerate)
            '31 - accelerate + handbrake
            '32 - accelerate very strong
            
            Seems to be this:
            Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_VEHICLE_DRIVE_TO_DESTINATION(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            flags: 67108864, 2097152, 524564, 524675 (eDrivingFlags)
            p7 = 6 or 3
            p8 = x coordinate
            p9 - 8.f
            p10 = false
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_VEHICLE_DRIVE_TO_DESTINATION_2(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Tasks vehicle towards owner
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_VEHICLE_FLEE_ON_CLEANUP(System.Int32,System.Single,System.Single,System.Single,System.Single,System.UInt32)">
            <summary>
            Vehicle Auto Drive (?)
            p1/p2/p3: usually 1f, 1f, 0f or 0f, 0f, 0f
            Speed: usually 8f
            Types: 1148979456 (task with flee), 1148979587 (dismissing the vehicle)
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_VEHICLE_DRIVE_STRAIGHT_TO_POINT(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Old name: _TASK_VEHICLE_DRIVE_TO_POINT
            flag: 524419 and 0 in shop_horse_shop R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_VEHICLE_DRIVE_TO_POINT_2(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.UInt64)">
            <summary>
            Params: p4 = 3.f or 8.f, p5 = 0.25f, p6 = 0 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_VEHICLE_MISSION_PED_TARGET(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            See TASK_VEHICLE_MISSION
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_CLIMB(System.Int32,System.Boolean)">
            <summary>
            Climbs or vaults the nearest thing.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.CLEAR_PED_TASKS_IMMEDIATELY(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
            
            resetCrouch TRUE = ped will stand up if crouching, FALSE = ped will remain crouching if crouched
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_GOTO_ENTITY_AIMING(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            ped = Ped you want to perform this task.
            target = the Entity they should aim at.
            distanceToStopAt = distance from the target, where the ped should stop to aim.
            StartAimingDist = distance where the ped should start to aim.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            Checks if there is a cover point at position
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PUT_PED_DIRECTLY_INTO_MELEE(System.Int32,System.Int32,System.UInt32,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            meleeStyles: AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_MOUNT_FACEDOWN_FROM_FRONT, AR_ALLIGATOR_LEAPKILL, AR_ALLIGATOR_WAIST_AUTOKILL_FRONT
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PUT_PED_DIRECTLY_INTO_GRAPPLE(System.Int32,System.Int32,System.UInt32,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            grappleStyle: AR_GRAPPLE_STRUGGLE, AR_ALLIGATOR_LEG_GRAB_CHALLENGE_FAIL, AR_GRAPPLE_BACK_FROM_BACK, AR_GRAPPLE_BACK_DEFEND, AR_GRAPPLE_FRONT_FROM_FRONT
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.SET_DRIVE_TASK_MAX_CRUISE_SPEED(System.Int32,System.Single)">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.CREATE_SCENARIO_POINT_HASH(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.UInt64,System.UInt64,System.Boolean)">
            <summary>
            Returns scenario
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.CREATE_SCENARIO_POINT_HASH_ATTACHED_TO_ENTITY(System.Int32,System.UInt32,System.Single,System.Single,System.Single,System.Single,System.UInt64,System.UInt64,System.Boolean)">
            <summary>
            Returns scenario
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.GET_PROP_FOR_SCENARIO_POINT(System.Int32,System.String)">
            <summary>
            Old name: _GET_SCENARIO_POINT_ENTITY
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_SCENARIO_POINT_FLAG(System.Int32,System.Int32,System.Boolean)">
            <summary>
            flag: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/CScenarioPointFlags__Flags
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._0xADC45010BC17AF0E(System.UInt64,System.UInt64)">
            <summary>
            _SET_SCENARIO_POINT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_SCENARIO_POINT_ENTITY(System.Int32)">
            <summary>
            Note: The current name for this native is the old name of 0x295514F198EFD0CA
            Old name for this native: _GET_ENTITY_SCENARIO_POINT_IS_ATTACHED_TO
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_SCENARIO_POINT_COORDS(System.Int32,System.Boolean)">
            <summary>
            Params: p1 is always true in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_SCENARIO_POINT_HEADING(System.Int32,System.Boolean)">
            <summary>
            Params: p1 is always true in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._0xA7479FB665361EDB(System.UInt64,System.UInt64)">
            <summary>
            _SET_SCENARIO_*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.GET_SCENARIO_POINTS_IN_AREA(System.Single,System.Single,System.Single,System.Single,System.UInt64*,System.Int32)">
            <summary>
            Note: scenariosInRadius is an array, and its size and values should be aligned to 8 bytes.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_SCENARIO_CONTAINER_OPENING_STATE(System.Int32,System.Boolean)">
            <summary>
            Opens/closes containers: ChestDugUp
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_SCENARIO_CONTAINER_OPENING_STATE(System.Int32)">
            <summary>
            Returns m_eContainerState
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_START_SCENARIO_IN_PLACE_HASH(System.Int32,System.UInt32,System.Int32,System.Boolean,System.UInt32,System.Single,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/animations/scenarios
            Params: duration in milliseconds
            
            conditionalHash (optionally):
            0 = play random conditional anim.
            Every conditional anim has requirements to play it.
            If requirements are not met, ped plays random allowed conditional anim or can be stuck.
            For example, this scenario type has possible conditional anim WORLD_HUMAN_LEAN_BACK_WALL_SMOKING_MALE_D, but it can not be played by player, because condition is set to NOT be CAIConditionIsPlayer (check file amb_rest.meta and amb_rest_CA.meta with OPENIV to clarify requirements).
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_START_SCENARIO_IN_PLACE_2(System.Int32,System.UInt64,System.String,System.Int32,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Takes scenario point handle instead of hash
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_COMBAT_HATED_TARGETS_IN_AREA(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt64)">
            <summary>
            Despite its name, it only attacks ONE hated target. The one closest to the specified position.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_COMBAT_HATED_TARGETS_AROUND_PED(System.Int32,System.Single,System.Int32,System.UInt64)">
            <summary>
            Despite its name, it only attacks ONE hated target. The one closest hated target.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_WHISTLE_ANIM(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/AI/EVENTS/aud_ped_whistle_types.lua
            p2: UNSPECIFIED
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.IS_PED_IN_WRITHE(System.Int32)">
            <summary>
            This native checks if a ped is on the ground, in pain from a (gunshot) wound.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_STAY_IN_COVER(System.Int32)">
            <summary>
            Makes the ped run to take cover
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(System.Int32,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            shootatEntity:
            If true, peds will shoot at Entity till it is dead.
            If false, peds will just walk till they reach the entity and will cease shooting.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.SET_HIGH_FALL_TASK(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Makes the ped ragdoll like when falling from a great height
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_FORCE_MOTION_STATE(System.Int32,System.UInt32,System.Boolean)">
            <summary>
            motionStateHash: see FORCE_PED_MOTION_STATE
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_TASK_MOVE_NETWORK_ID(System.Int32)">
            <summary>
            Returns hash of the underlying move network def, see move_networks.xml
            https://alloc8or.re/rdr3/doc/misc/move_networks.txt
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.IS_PED_BEING_ARRESTED(System.Int32)">
            <summary>
            This function is hard-coded to always return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_DUEL(System.Int32,System.UInt64,System.Single,System.Int32,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Params: p4 either 0.2f, 0.25f, 0.31f, 0.4f
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_CARRIABLE(System.Int32,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
            carriableSlot:
             7 > Back of a horse
             6 > Right side of a horse
             5 > Left side of a horse
            flags:
             512: enables the prompt being the name of the item when using a generic item
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_HOGTIE_ESCAPE_TIMER(System.Int32,System.Single)">
            <summary>
            Sets the time it takes for a hogtied ped to escape
            -1.0f for ped to never escape
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._REQUEST_HERB_COMPOSITE_ASSET(System.UInt32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/objects/composites
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.ARE_COMPOSITE_LOOTABLE_ENTITY_DEF_ASSETS_LOADED(System.UInt32)">
            <summary>
            Returns true when requested asset is loaded
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._CREATE_HERB_COMPOSITES(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt64*,System.Int32)">
            <summary>
            groundSetting: 0: spawn on ground, 2 (1?): do not spawn on ground
            p7: -1 in R* Scripts
            Returns compositeId
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._DELETE_PATCH_OBJECTS_FROM_HERB_COMPOSITES(System.Int32,System.Boolean)">
            <summary>
            Params: p1 is always false except in script nb_egg_protector
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_HERB_COMPOSITE_NUM_ENTITIES(System.Int32,System.UInt64*)">
            <summary>
            Flowers, Stalks or whatever the composite has
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.UNHOGTIE_PED(System.Int32,System.Int32,System.UInt32,System.String,System.String,System.Single)">
            <summary>
            getupSetHash: see nm_blend_out_sets.meta
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._IS_HAT_BEING_PICKED_UP(System.Int32)">
            <summary>
            Returns true while a hat is being picked up
            _IS_A* - _IS_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._IS_HAT_BEING_PICKED_UP_2(System.Int32)">
            <summary>
            Returns true while a hat is being picked up. Similar to 0x11CD066F54DA0133
            _IS_A* - _IS_D*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_EQUIP_HAT(System.Int32,System.Int32)">
            <summary>
            _A*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.SET_ENHANCED_BREAK_FREE(System.Int32,System.Boolean,System.String)">
            <summary>
            clipset: CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@GROUND, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@SHOULDER, CLIPSET@MECH_HOGTIE@HUMAN@BREAKOUT_MG@MOUNT
            clipset can also be 0
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_MELEE(System.Int32,System.Int32,System.UInt32,System.UInt64,System.UInt64,System.Single,System.UInt64,System.Single)">
            <summary>
            Params: p2: AR_TAKEDOWN_FRONT, AR_EXECUTION_FRONT, 0 in R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_GRAPPLE(System.Int32,System.Int32,System.UInt32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            grappleStyle: AR_GRAPPLE_MOUNT_STANDING_FROM_FRONT, AR_GRAPPLE_MOUNT_STANDING_FROM_RIGHT, AR_GRAPPLE_MOUNT_STANDING_FROM_BACK, AR_GRAPPLE_MOUNT_STANDING_FROM_LEFT, AR_GRAPPLE_MOUNT_FROM_FRONT, AR_WOLF_EXECUTION_ENTER_FROM_BACK, AR_GRAPPLE_DRAG_FRONT_ON_ASS, AR_GRAPPLE_FRONT_FROM_LEFT_FAR, AR_BEAR_CHALLENGE_FRONT, AR_GRAPPLE_FRONT_FROM_FRONT, AR_GRAPPLE_MOUNT_FACEUP_FROM_FRONT
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._0x41D1331AFAD5A091(System.Int32,System.Int32,System.UInt64)">
            <summary>
            _SET_PED_*
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._GET_TASK_FISHING(System.Int32,System.UInt64*)">
            <summary>
            Fishing Research: https://pastebin.com/NmK5ZLVs
            Only used in R* Scripts fishing_core and av_fishing_river
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_TASK_FISHING(System.Int32,System.UInt64*)">
            <summary>
            Only used in R* Scripts fishing_core and av_fishing_river
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_SWAP_FISHING_BAIT(System.Int32,System.String,System.Boolean)">
            <summary>
            Baits: see 0x9B0C7FA063E67629
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._SET_FISHING_BAIT(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Baits: p_fishHook02x, p_baitBread01x, p_baitCorn01x, p_baitCheese01x, p_baitWorm01x, p_baitCricket01x, p_crawdad01x, p_finisheDragonfly01x, p_finisdFishlure01x, p_finishdCrawd01x, p_finisheDragonflyLegendary01x, p_finisdFishlureLegendary01x, p_finishdCrawdLegendary01x, p_lgoc_spinner_v4
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._PED_FISHINGROD_HOOK_OBJECT(System.Int32,System.Int32)">
            <summary>
            Used with 'P_BODYPARTARMFLOAT02X' model in fishing_core.c
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK.TASK_PLAY_EMOTE_WITH_HASH(System.Int32,System.Int32,System.Int32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/animations/kit_emotes_list.lua
            emote: https://alloc8or.re/rdr3/doc/enums/eEmote.txt
            
            enum eEmoteType
            {
            	EMOTE_TYPE_INVALID = -1,
            	EMOTE_TYPE_REACT,
            	EMOTE_TYPE_ACTION,
            	EMOTE_TYPE_TAUNT,
            	EMOTE_TYPE_GREET,
            	EMOTE_TYPE_TWIRL_GUN,
            	EMOTE_TYPE_DANCE_FLOOR
            };
            
            enum eEmotePlaybackMode
            {
            	EMOTE_PM_INVALID = -1,
            	EMOTE_PM_UPPERBODY,
            	EMOTE_PM_UPPERBODY_LOOP,
            	EMOTE_PM_FULLBODY,
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.TASK._TASK_PLAY_EMOTE(System.Int32,System.Int32,System.Int32,System.UInt32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Similar to 0xB31A277C1AC7B7FF but checks if the ped's inventory contains the specified emote kit.
            </summary>
        </member>
        <member name="M:RDR2.Native.TELEMETRY._TELEMETRY_CREATE_UUID(System.UInt64*)">
            <summary>
            Works in MP only.
            </summary>
        </member>
        <member name="M:RDR2.Native.UIDEBUG._BG_DISPLAY_TEXT(System.String,System.Single,System.Single)">
            <summary>
            Note: you must use VAR_STRING
            </summary>
        </member>
        <member name="M:RDR2.Native.UIDEBUG._BG_SET_TEXT_COLOR(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/tree/master/useful_info_from_rpfs/colours
            </summary>
        </member>
        <member name="M:RDR2.Native.UIEVENTS.EVENTS_UI_IS_PENDING(System.UInt32)">
            <summary>
            Old name: _EVENT_MANAGER_IS_EVENT_PENDING
            </summary>
        </member>
        <member name="M:RDR2.Native.UIEVENTS.EVENTS_UI_GET_MESSAGE(System.UInt32,System.UInt64*)">
            <summary>
            eventData:
            struct UI_SCRIPT_EVENT
            {
            	alignas(8) eUIScriptEventType eventType; // https://alloc8or.re/rdr3/doc/enums/eUIScriptEventType.txt
            	alignas(8) int intParam;
            	alignas(8) Hash hashParam;
            	alignas(8) Hash datastoreParam;
            };
            
            Old name: _EVENT_MANAGER_GET_EVENT
            </summary>
        </member>
        <member name="M:RDR2.Native.UIEVENTS.EVENTS_UI_PEEK_MESSAGE(System.UInt32,System.UInt64*)">
            <summary>
            eventData: see EVENTS_UI_GET_MESSAGE
            
            Old name: _EVENT_MANAGER_PEEK_EVENT
            </summary>
        </member>
        <member name="M:RDR2.Native.UIEVENTS.EVENTS_UI_POP_MESSAGE(System.UInt32)">
            <summary>
            Old name: _EVENT_MANAGER_POP_EVENT
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_HELP_TEXT(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Example : https://pastebin.com/GvdBp8Dh
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_LOCATION_SHARD(System.UInt64*,System.UInt64*,System.Boolean,System.Boolean)">
            <summary>
            Example : https://pastebin.com/h1YzycuR
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_OBJECTIVE(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Example : https://pastebin.com/13tuRa63
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_FEED_TICKER(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Display text on right of the screen, Example : https://pastebin.com/n1YmNe25
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_SAMPLE_TOAST(System.UInt64*,System.UInt64*,System.Boolean,System.Boolean)">
            <summary>
            Example : https://pastebin.com/YZMBkAmW
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_POST_SAMPLE_NOTIFICATION(System.UInt64*,System.UInt64*,System.Int32,System.Int32)">
            <summary>
            Example : https://pastebin.com/kAtEMQTD
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._0x18D6869FBFFEC0F8(System.UInt64*,System.UInt64*,System.Boolean,System.Boolean)">
            <summary>
            Only used in R* SP Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED.UI_FEED_CLEAR_CHANNEL(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            feedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIFeedChannel
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_CLEAR_ALL_CHANNELS">
            <summary>
            Hides Toast Notifications
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_CLEAR_HELP_TEXT_FEED(System.Int32,System.Boolean)">
            <summary>
            Clears help text
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._0x4E88A65968A55C78(System.UInt64*,System.Boolean)">
            <summary>
            Returns feedMessage
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._0x0FD07141AD048AAE(System.UInt64*,System.Boolean)">
            <summary>
            Only used in R* SP Script beat_animal_attack
            Returns feedMessage
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED._UI_FEED_GET_MESSAGE_STATE(System.Int32)">
            <summary>
            Returns messageState, see https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIMessageState
            </summary>
        </member>
        <member name="M:RDR2.Native.UIFEED.UI_FEED_GET_CURRENT_MESSAGE(System.Int32)">
            <summary>
            feedChannel: see UI_FEED_CLEAR_CHANNEL
            Returns feedMessage
            </summary>
        </member>
        <member name="M:RDR2.Native.UITUTORIAL._UITUTORIAL_SET_RPG_ICON_VISIBILITY(System.Int32,System.Int32)">
            <summary>
            enum eRpgIcons
            {
            	ICON_STAMINA,
            	ICON_STAMINA_CORE,
            	ICON_DEADEYE,
            	ICON_DEADEYE_CORE,
            	ICON_HEALTH,
            	ICON_HEALTH_CORE,
            	ICON_HORSE_HEALTH,
            	ICON_HORSE_HEALTH_CORE,
            	ICON_HORSE_STAMINA,
            	ICON_HORSE_STAMINA_CORE,
            	ICON_HORSE_COURAGE,
            	ICON_HORSE_COURAGE_CORE
            };
            
            enum eRpgIconVisibility
            {
            	ICON_VISIBILITY_WAIT_TO_HIDE,
            	ICON_VISIBILITY_ALWAYS_SHOW,
            	ICON_VISIBILITY_ALWAYS_HIDE,
            	ICON_VISIBILITY_ALWAYS_BLINK
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_CREATE_ERROR_MESSAGE(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Example: https://pastebin.com/EJD7ytnz
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Example: https://pastebin.com/JygJShNU
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_CREATE_WARNING_MESSAGE(System.UInt64*,System.UInt64*,System.Boolean)">
            <summary>
            Example: https://pastebin.com/6mLtee2S
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_UPDATE_MESSAGE(System.Int32,System.UInt64*,System.Boolean)">
            <summary>
            Seems to only update _UI_STICKY_FEED_CREATE_ERROR_MESSAGE(0x9F2CC2439A04E7BA) and _UI_STICKY_FEED_CREATE_DEATH_FAIL_MESSAGE(0x815C4065AE6E6071) message.
            Example: https://pastebin.com/nDrJyWq2
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_IS_CHANNEL_ACTIVE(System.Int32)">
            <summary>
            stickyFeedChannel: https://github.com/Halen84/RDR3-Native-Flags-And-Enums/tree/main/eUIStickyFeedChannel
            </summary>
        </member>
        <member name="M:RDR2.Native.UISTICKYFEED._UI_STICKY_FEED_GET_MESSAGE_STATE(System.Int32)">
            <summary>
            Returns state of sticky feed message, see 0x59FA676177DBE4C9
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x6355602C02EDC6DF(System.Int32,System.UInt64)">
            <summary>
            Only used in R* Script beat_train_holdup: p1 = 1
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._CREATE_DRAFT_VEHICLE(System.UInt32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.UInt32,System.Boolean)">
            <summary>
            Identical to CREATE_VEHICLE but allows to set draftAnimalPopGroup (see popgroups.#mt for DRAFT_HORSES_*)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.VEHICLE.DELETE_VEHICLE(System.Int32*)" -->
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(System.Int32,System.Boolean)">
            <summary>
            Makes the vehicle accept no passengers.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.VEHICLE.IS_VEHICLE_STOPPED(System.Int32)" -->
        <member name="M:RDR2.Native.VEHICLE.GET_VEHICLE_NUMBER_OF_PASSENGERS(System.Int32)">
            <summary>
            Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.IS_SEAT_WARP_ONLY(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(System.Int32,System.Int32,System.Int32)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.EXPLODE_VEHICLE(System.Int32,System.Boolean,System.Boolean,System.UInt64,System.UInt64)">
            <summary>
            Explodes a selected vehicle.
            
            Vehicle vehicle = Vehicle you want to explode.
            BOOL isAudible = If explosion makes a sound.
            BOOL isInvisible = If the explosion is invisible or not.
            
            First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x9868C0D0134855F7(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Old name: _SET_BOAT_FROZEN_WHEN_ANCHORED
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_FORCE_LOW_LOD_ANCHOR_MODE(System.Int32,System.Boolean)">
            <summary>
            Sets boat to be anchored on spawn, called together with SET_BOAT_ANCHOR and _SET_BOAT_ANCHOR_BUOYANCY_COEFFICIENT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_BOAT_LOW_LOD_ANCHOR_DISTANCE(System.Int32,System.Single)">
            <summary>
            Value: mostly 99999.9f
            
            Old name: _SET_BOAT_MOVEMENT_RESISTANCE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x9E8711C81AA17876(System.Int32,System.Boolean)">
            <summary>
            Forcing high LOD buoyancy for vehicle: p1 = false
            _SET_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_STRONG(System.Int32,System.Boolean)">
            <summary>
            If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.IS_VEHICLE_SEAT_FREE(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_PED_IN_VEHICLE_SEAT(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_LAST_PED_IN_VEHICLE_SEAT(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_PED_IN_DRAFT_HARNESS(System.Int32,System.Int32)">
            <summary>
            enum eDraftHarness
            {
            	DRAFT_HARNESS_LR,
            	DRAFT_HARNESS_RR,
            	DRAFT_HARNESS_LM,
            	DRAFT_HARNESS_RM,
            	DRAFT_HARNESS_LF,
            	DRAFT_HARNESS_RF,
            	DRAFT_HARNESS_COUNT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.BRING_VEHICLE_TO_HALT(System.Int32,System.Single,System.Int32,System.Boolean)">
            <summary>
            This native makes the vehicle stop immediately
            
            distance defines how far it will travel until stopping.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._IS_VEHICLE_BROUGHT_TO_HALT(System.Int32)">
            <summary>
            Only returns true if BRING_VEHICLE_TO_HALT is called on vehicle beforehand
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.STOP_BRINGING_VEHICLE_TO_HALT(System.Int32)">
            <summary>
            Old name: _STOP_BRING_VEHICLE_TO_HALT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOORS_SHUT(System.Int32,System.Boolean)">
            <summary>
            Closes all doors of a vehicle:
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_TYRES_CAN_BURST(System.Int32,System.Boolean)">
            <summary>
            Allows you to toggle bulletproof tires.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOOR_OPEN(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            Can also be used on trains and its wagons
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.REMOVE_VEHICLE_WINDOW(System.Int32,System.Int32)">
            <summary>
            windowIndex:
            0 = Front Right Window
            1 = Front Left Window
            2 = Back Right Window
            3 = Back Left Window
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_DIRT_LEVEL_2(System.Int32,System.Single)">
            <summary>
            dirtLevel: 0.0 - 1.0
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_MUD_LEVEL(System.Int32,System.Single)">
            <summary>
            mudLevel: 0.0 - 1.0
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_LIGHTS(System.Int32,System.Int32)">
            <summary>
            Sets the vehicle's lights state.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x331CBD247FC5DAA8(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Returns trackIndex
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x0516FAE561276EFC(System.Int32)">
            <summary>
            Takes value returned from 0x45853F4E17D847D5
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_TRACK_FROM_TRAIN_VEHICLE(System.Int32)">
            <summary>
            Returns trackIndex
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_VEHICLE_FROM_TRACK_INDEX(System.Int32)">
            <summary>
            Returns train
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xF05DFAF1ADFEF2CD(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            _IS_* (related to CREATE_MISSION_TRAIN)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x6C87F49BFA181DB5(System.Single,System.Single,System.Single)">
            <summary>
            Returns trackIndex
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRACK_INDEX_FROM_COORDS(System.Single,System.Single,System.Single)">
            <summary>
            Returns trackIndex
            _E* - _F*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_TRAIN_MAX_SPEED(System.Int32,System.Single)">
            <summary>
            Maximum possible speed is 30.0 (108 km/h)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_CARRIAGE_TRAILER_NUMBER(System.Int32)">
            <summary>
            Returns iNumCars - to be used with GET_TRAIN_CARRIAGE (trailerNumber)
            _C* (O, P, Q, R)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_MODEL_FROM_TRAIN_CONFIG_BY_CAR_INDEX(System.UInt32,System.Int32)">
            <summary>
            Returns modelHash
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_NUM_CARS_FROM_TRAIN_CONFIG(System.UInt32)">
            <summary>
            Returns amount for CAN_REGISTER_MISSION_VEHICLES
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_CAR(System.Int32)">
            <summary>
            Returns train car, use GET_TRAIN_CARRIAGE when trailerNumber is bigger than 0
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_TRAIN_LEAVE_STATION(System.Int32)">
            <summary>
            Restarts the train
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.REQUEST_VEHICLE_RECORDING(System.Int32,System.String)">
            <summary>
            Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
            For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" corresponds to a unique identifier within the recording streaming module.
            (GTA) Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.HAS_VEHICLE_RECORDING_BEEN_LOADED(System.Int32,System.String)">
            <summary>
            See REQUEST_VEHICLE_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.REMOVE_VEHICLE_RECORDING(System.UInt64,System.UInt64*)">
            <summary>
            See REQUEST_VEHICLE_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(System.Int32,System.Single,System.String)">
            <summary>
            This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
            
            See REQUEST_VEHICLE_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(System.Int32,System.Single,System.String)">
            <summary>
            This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
            
            See REQUEST_VEHICLE_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.START_PLAYBACK_RECORDED_VEHICLE(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).
            
            See REQUEST_VEHICLE_RECORDING
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(System.Int32,System.Boolean)">
            <summary>
            Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(System.Int32,System.Single)">
            <summary>
            SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_MISSION_TRAIN_WARP_TO_COORDS(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Notice: BOOL p4 was wrongly named takePassengers (?)
            Can be used to rotate the train by setting the BOOL direction
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.IS_VEHICLE_DOOR_FULLY_OPEN(System.Int32,System.Int32)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_ENGINE_ON(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Starts or stops the engine on the specified vehicle.
            
            vehicle: The vehicle to start or stop the engine on.
            value: true to turn the vehicle on; false to turn it off.
            instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOOR_CONTROL(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOOR_LATCHED(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOOR_SHUT(System.Int32,System.Int32,System.Boolean)">
            <summary>
            doorId: enum eDoorId
            {
            	VEH_EXT_DOOR_INVALID_ID = -1,
            	VEH_EXT_DOOR_DSIDE_F,
            	VEH_EXT_DOOR_DSIDE_M,
            	VEH_EXT_DOOR_DSIDE_M1,
            	VEH_EXT_DOOR_DSIDE_M2,
            	VEH_EXT_DOOR_DSIDE_R,
            	VEH_EXT_DOOR_PSIDE_F,
            	VEH_EXT_DOOR_PSIDE_M,
            	VEH_EXT_DOOR_PSIDE_M1,
            	VEH_EXT_DOOR_PSIDE_M2,
            	VEH_EXT_DOOR_PSIDE_R,
            	VEH_EXT_BONNET,
            	VEH_EXT_BOOT
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DOOR_BROKEN(System.Int32,System.Int32,System.Boolean)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(System.Int32,System.Boolean)">
            <summary>
            Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_DOOR_ALLOWED_TO_BE_BROKEN_OFF(System.Int32,System.Int32,System.Boolean)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            
            Old name: _SET_VEHICLE_DOOR_CAN_BREAK
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_DIRECTION_FROM_INDEX(System.Int32)">
            <summary>
            https://i.imgur.com/1rHibjW.jpg
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x09034479E6E3E269(System.Int32,System.UInt32*,System.Int32*)">
            <summary>
            _RESET_VEHICLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_TRAIN_TRACK_JUNCTION_AT_COORDS(System.UInt32,System.Single,System.Single,System.Single,System.Int32*)">
            <summary>
            Outputs junctionIndex, to be used with 0xE6C5E2125EB210C1
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_TRAIN_TRACK_JUNCTION_SWITCH(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            trainTrack: FREIGHT_GROUP, TRAINS3, BRAITHWAITES2_TRACK_CONFIG, TRAINS_OLD_WEST01, TRAINS_OLD_WEST03, TRAINS_NB1, TRAINS_INTERSECTION1_ANN
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x3ABFA128F5BF5A70(System.UInt32,System.Int32,System.Boolean)">
            <summary>
            Called together with 0xE6C5E2125EB210C1 in R* Script medium_update
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._DETACH_WAGON_ENTITY_FROM_TRAIN(System.Int32)">
            <summary>
            Only used in train_robbery4 R* Script
            _C* - _DEL*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x1180A2974D251B7B(System.Int32)">
            <summary>
            Returns p1 for 0xBA958F68031DDBFC (stationIndex)
            _GET_N* (NEAREST_STATION_FOR_TRAIN?)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_CURRENT_STATION_FOR_TRAIN(System.Int32)">
            <summary>
            Returns p1 for 0xBA958F68031DDBFC (stationIndex)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x9CC94A948EAF5372(System.Int32,System.Int32)">
            <summary>
            _GET_P - _GET_T*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_CURRENT_TRACK_FOR_TRAIN(System.Int32)">
            <summary>
            Returns p0 for 0xBA958F68031DDBFC (trackIndex)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_STATION_COORS_FROM_TRAIN_STATION_DATA(System.Int32,System.Int32)">
            <summary>
            Returns Coords of vStation
            p0 - NET_TRAIN_MANAGER_GET_TRAIN_STATION_DATA
            _GET_P* - _GET_T*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._TRIGGER_TRAIN_WHISTLE(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            whistleSequence: ACKNOWLEDGE, BACKING_UP, CROSSING, DANGER, MOVING, NEXT_STATION, PASSING, STOPPED
            p2 = true seems to mute the sound
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_FIXED(System.Int32)">
            <summary>
            This fixes a vehicle.
            If the vehicle's engine's broken then you cannot fix it with this native.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_LIMIT_SPEED_WHEN_PLAYER_INACTIVE(System.Int32,System.Boolean)">
            <summary>
            _SET_VEHICLE_LI*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_STEER_BIAS(System.Int32,System.Single)">
            <summary>
            Locks the vehicle's steering to the desired angle, explained below.
            
            Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
            
            Steer bias:
            -1.0 = full right
            0.0 = centered steering
            1.0 = full left
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_EXTRA(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Note: only some vehicle have extras
            https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_extras.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_DAMAGE(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
            
            Radius of effect damage applied in a sphere at impact location
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_VEHICLE_ENGINE_HEALTH(System.Int32)">
            <summary>
            Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
            
            Minimum: -4000
            Maximum: 1000
            
            -4000: Engine is destroyed
            0 and below: Engine catches fire and health rapidly declines
            300: Engine is smoking and losing functionality
            1000: Engine is perfect
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.VEHICLE.SET_VEHICLE_ENGINE_HEALTH(System.Int32,System.Single)" -->
        <member name="M:RDR2.Native.VEHICLE.GET_VEHICLE_PETROL_TANK_HEALTH(System.Int32)">
            <summary>
            1000 is max health
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_PETROL_TANK_HEALTH(System.Int32,System.Single)">
            <summary>
            1000 is max health
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.IS_VEHICLE_STUCK_TIMER_UP(System.Int32,System.Int32,System.Int32)">
            <summary>
            VEH_STUCK_ON_ROOF = 0,
            VEH_STUCK_ON_SIDE,
            VEH_STUCK_HUNG_UP,
            VEH_STUCK_JAMMED
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.START_VEHICLE_HORN(System.Int32,System.Int32,System.UInt32,System.Boolean)">
            <summary>
            Sounds the horn for the specified vehicle.
            
            vehicle: The vehicle to activate the horn for.
            mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
            duration: The duration to sound the horn, in milliseconds.
            
            Note: If a player is in the vehicle, it will only sound briefly.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_HAS_STRONG_AXLES(System.Int32,System.Boolean)">
            <summary>
            if true, axles won't bend.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_SNOW_LEVEL(System.Int32,System.Single)">
            <summary>
            snowLevel: 0.0 - 1.0
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_WET_LEVEL(System.Int32,System.Single)">
            <summary>
            wetLevel: 0.0 - 1.0
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_TINT(System.Int32,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_tints.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_LIVERY(System.Int32,System.Int32)">
            <summary>
            https://github.com/femga/rdr3_discoveries/blob/master/vehicles/vehicle_modding/vehicle_liveries.lua
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.ARE_ANY_VEHICLE_SEATS_FREE(System.Int32)">
            <summary>
            Returns false if every seat is occupied.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(System.Int32,System.Boolean)">
            <summary>
            Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_VEHICLE_TRAILER_VEHICLE(System.Int32,System.Int32*)">
            <summary>
            Gets the trailer of a vehicle and puts it into the trailer parameter.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.CAN_SHUFFLE_SEAT(System.Int32,System.Int32)">
            <summary>
            seatIndex: see CREATE_PED_INSIDE_VEHICLE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_VEHICLE_LOD_LEVEL(System.Int32,System.Int32)">
            <summary>
            Ranges from -1 to 2? (internal type is int8)
            https://imgur.com/a/bPzHcft
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.COPY_VEHICLE_DAMAGES(System.Int32,System.Int32)">
            <summary>
            Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.IS_VEHICLE_VISIBLE(System.Int32)">
            <summary>
            Requires a visibility tracker on the vehicle (TRACK_VEHICLE_VISIBILITY)
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xCBF88256E44D5D39(System.Int32,System.Boolean)">
            <summary>
            Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xC325A6BAA62CF8A2(System.Int32,System.Boolean)">
            <summary>
            Used in Script Function MC_LOCAL_SETUP_VEH - enabling transitions
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_AI_CAN_USE_EXCLUSIVE_SEATS(System.Int32,System.Boolean)">
            <summary>
            Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_VEHICLE_EXCLUSIVE_DRIVER(System.Int32,System.Int32,System.Int32)">
            <summary>
            index: 0 - 1
            
            Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.SET_DISABLE_SUPERDUMMY(System.Int32,System.Boolean)">
            <summary>
            Old name: _SET_DISABLE_SUPERDUMMY_MODE
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE.GET_VEHICLE_BODY_HEALTH(System.Int32)">
            <summary>
            Seems related to vehicle health, like the one in IV.
            Max 1000, min 0.
            Vehicle does not necessarily explode or become undrivable at 0.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x012701ED938B85DE(System.Single,System.Single)">
            <summary>
            Only used in SP Scripts.
            Related to Vehicle Speed.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_NUM_DRAFT_VEHICLE_HARNESS_PED(System.UInt32)">
            <summary>
            Returns number of horses a wagon can have
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._GET_ROWING_OARS(System.Int32,System.Int32*,System.Int32*)">
            <summary>
            Returns handles of boat paddles entities.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_FORCE_COACH_ROBBERY_LOOT(System.Int32,System.UInt32)">
            <summary>
            Hashes: COACH2_BOOT_LOOT_ITEMS_COACHROB_RSC, COACH2_BOOT_LOOT_ITEMS_COACHROB, COACH2_MARY3
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._BREAK_OFF_DRAFT_WHEEL(System.Int32,System.Int32,System.Single)">
            <summary>
            Params: destroyingForce is usually 100f in R* Scripts
            Similar to 0xD4F5EFB55769D272, _A*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x0794199B25E499E1(System.Int32,System.Boolean)">
            <summary>
            _SET_VEHICLE_S*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x73118A3EE9C9B6DB(System.Int32,System.Int32,System.Boolean)">
            <summary>
            _SET_VEHICLE_WHEELS_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xE1C0F8781BF130C2(System.Int32,System.Int32)">
            <summary>
            Only used in R* SP Script rcm_abigail31: p1 = 5
            _GET_VEHICLE_T* - _GET_VO*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x18714953CCED17D3(System.Int32)">
            <summary>
            _ARE_ANY_VEHICLE_(WHEELS_DESTROYED?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x41F0B254DDF71473(System.Int32)">
            <summary>
            _H*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._IS_VEHICLE_DOOR_BROKEN(System.Int32,System.Int32)">
            <summary>
            doorId: see SET_VEHICLE_DOOR_SHUT
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.VEHICLE._BREAK_OFF_VEHICLE_WHEEL(System.Int32,System.Int32)" -->
        <member name="M:RDR2.Native.VEHICLE._DELETE_VEHICLE_LANTERNS(System.Int32)">
            <summary>
            Spawn without lanterns set
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x6DE072AC8A95FFC1(System.Int32,System.Boolean)">
            <summary>
            _SET_INSTANTLY_* - _SET_MISSION_TRAIN*
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.VEHICLE._GET_DRAFT_VEHICLE_DESIRED_SPEED(System.Int32)" -->
        <member name="M:RDR2.Native.VEHICLE._0xC4A2C11FC0D41916(System.Int32,System.Boolean)">
            <summary>
            _SET_DRAFT_VEHICLE_(STOP?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xFC4F15A7DDDC47B1(System.Int32,System.Boolean)">
            <summary>
            _SET_DRAFT_VEHICLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x4C60C333F9CCA2B6(System.Int32,System.Boolean)">
            <summary>
            Params: p1 usually true in R* Scripts
            _SET_DRAFT_VEHICLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x06A09A6E0C6D2A84(System.Int32,System.Boolean)">
            <summary>
            _SET_TRAIN_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xAE7E66A61E7C17A5(System.Int32,System.Boolean)">
            <summary>
            _SET_TRAIN_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0xEF28A614B4B264B8(System.Int32,System.Boolean)">
            <summary>
            _SET_TRAIN_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x04F0579DBDD32F34(System.Int32)">
            <summary>
            _SET_VEHICLE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x12F6C6ED3EFF42DE(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Params: coords = GET_ENTITY_VELOCITY
            _SET_VELOCITY*
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._CREATE_MISSION_TRAIN(System.UInt32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            configHash: https://alloc8or.re/rdr3/doc/enums/eTrainConfig.txt
            For more information, see trainconfigs.ymt
            To make the train AI controlled, set conductor to true and set the speed once.
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_BALLOON_HOVER_STATE(System.Int32,System.Single)">
            <summary>
            Params: 1.0f will make balloon hover
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._SET_BATCH_TARP_HEIGHT(System.Int32,System.Single,System.Boolean)">
            <summary>
            Total height is calculated using: cargo ratio + pelt ratio (by pelt count)
            Screenshot: https://imgur.com/a/nsomtiv
            </summary>
        </member>
        <member name="M:RDR2.Native.VEHICLE._0x762FDC4C19E5A981(System.Int32,System.Boolean)">
            <summary>
            Seems to be related while setting a (door) state of specific trains (midlandboxcar05x, privateboxcar01x, privateboxcar02x, midlandrefrigeratorCar, privateArmoured, armoredCar01x)
            </summary>
        </member>
        <member name="M:RDR2.Native.VOICE._0x4791899615D70FA2(System.Int32,System.Int32,System.Int32)">
            <summary>
            Params: p1 = 2; p2 = 3 in R* Script net_main_offline
            </summary>
        </member>
        <member name="M:RDR2.Native.VOICE._0x767931C727DF2ED7(System.Int32,System.Int32)">
            <summary>
            Returns p2 value of 0x4791899615D70FA2
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._ADD_BOUNDS_TO_AGGREGATE_VOLUME(System.Int32,System.Int32)">
            <summary>
            _ADD_R* - _ADD_V(OLUME?)*
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._REMOVE_BOUNDS_FROM_AGGREGATE_VOLUME(System.Int32,System.Int32)">
            <summary>
            _REMOVE_E* - _REMOVE_R*
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME.IS_POINT_IN_VOLUME(System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Old name: _IS_POSITION_INSIDE_VOLUME
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._0x748C5F51A18CB8F0(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._CREATE_VOLUME_LOCK(System.Single,System.Single,System.Single,System.Single,System.Int32,System.UInt64)">
            <summary>
            Params: p5 is always 0
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._CREATE_VOLUME_LOCK_ATTACHED_TO_ENTITY(System.Int32,System.Single,System.Int32,System.UInt64)">
            <summary>
            Params: p3 is always 0
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME.GET_VOLUME_LOCK_REQUEST_STATUS(System.Int32)">
            <summary>
            enum eVolumeLockRequestStatus
            {
            	VOLUME_LOCK_REQUEST_STATUS_INVALID,
            	VOLUME_LOCK_REQUEST_STATUS_READY,
            	VOLUME_LOCK_REQUEST_STATUS_IN_PROGRESS,
            	VOLUME_LOCK_REQUEST_STATUS_SUCCEEDED,
            	VOLUME_LOCK_REQUEST_STATUS_FAILED
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._0xFA15C9A320E707B0">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._0x128FC3A893BF853A(System.UInt64)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.VOLUME._GET_VOLUME_RELATIONSHIP(System.Int32)">
            <summary>
            Returns relationshipGroup Hash
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER.DISABLE_WATER_LOOKUP">
            <summary>
            Must be called every frame to take full effect.
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER.GET_WATER_HEIGHT(System.Single,System.Single,System.Single,System.Single*)">
            <summary>
            Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If that is set to one it will fail. Likely not the only issue but part of it.
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER.TEST_PROBE_AGAINST_ALL_WATER(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single*)">
            <summary>
            enum eScriptWaterTestResult
            {
            	SCRIPT_WATER_TEST_RESULT_NONE,
            	SCRIPT_WATER_TEST_RESULT_WATER,
            	SCRIPT_WATER_TEST_RESULT_BLOCKED,
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER.TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(System.Single,System.Single,System.Single,System.Int32,System.Single*)">
            <summary>
            Checks against a global variable that is set by _SET_WORLD_WATER_TYPE. If it's set to 1 (Guarma) it will fail.
            
            See TEST_PROBE_AGAINST_ALL_WATER.
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER.REMOVE_EXTRA_CALMING_QUAD(System.Int32)">
            <summary>
            Only used in rcm_crackpot1 R* Script: p0 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0x09A1C7DFDCE54FBC(System.Int32)">
            <summary>
            Called together with REMOVE_EXTRA_CALMING_QUAD in rcm_crackpot1 R* Script: p0 = 0
            _REMOVE_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0xF0FBF193F1F5C0EA(System.Int32)">
            <summary>
            Only used in fishing_core R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0xA33F5069B0CB89B8">
            <summary>
            Only used in fishing_core R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0xB34A6009A0DB80B8(System.Int32)">
            <summary>
            Used in bounty1, fanale3, sean1 R* Scripts
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._SET_OCEAN_GUARMA_WATER_QUADRANT(System.Single,System.Single,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Only used in R* Script guama1
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0xC63540AEF8384769">
            <summary>
            Only used in guama1 / guama3 R* Script
            _REQUEST_* or _RESET_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._SET_WORLD_WATER_TYPE(System.Int32)">
            <summary>
            0 = World
            1 = Guarma
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0x0DCEC6A92E497E17(System.Int32,System.Int32)">
            <summary>
            Only used in native_son1 R* Script: p1 = 1
            </summary>
        </member>
        <member name="M:RDR2.Native.WATER._0xE8126623008372AA">
            <summary>
            Only used in fussar1 / train_robbery2 R* Script
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._ADD_AMMO_TO_PED(System.Int32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            addReason:
            enum eAddItemReason : Hash
            {
            	ADD_REASON_AWARDS = 0xB784AD1E,
            	ADD_REASON_CREATE_CHARACTER = 0xE2C4FF71,
            	ADD_REASON_DEBUG = 0x5C05C64D,
            	ADD_REASON_DEFAULT = 0x2CD419DC,
            	ADD_REASON_GET_INVENTORY = 0xD8188685,
            	ADD_REASON_INCENTIVE = 0x8ADC2E95,
            	ADD_REASON_LOADOUT = 0xCA3454E6,
            	ADD_REASON_LOAD_SAVEGAME = 0x56212906,
            	ADD_REASON_LOOTED = 0xCA806A55,
            	ADD_REASON_MELEE = 0x7B9BDCE7,
            	ADD_REASON_MP_MISSION = 0xEC0E0194,
            	ADD_REASON_NOTIFICATION = 0xC56292D2,
            	ADD_REASON_PICKUP = 0x1A770E22,
            	ADD_REASON_PURCHASED = 0x4A6726C9,
            	ADD_REASON_SET_AMOUNT = 0x4504731E,
            	ADD_REASON_SYNCING = 0x8D4B4FF4,
            	ADD_REASON_USE_FAILED = 0xD385B670
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._ADD_AMMO_TO_PED_BY_TYPE(System.Int32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            addReason: see _ADD_AMMO_TO_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._REMOVE_AMMO_FROM_PED(System.Int32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
            
            removeReason: see REMOVE_WEAPON_FROM_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._REMOVE_AMMO_FROM_PED_BY_TYPE(System.Int32,System.UInt32,System.Int32,System.UInt32)">
            <summary>
            removeReason must be REMOVE_REASON_USED, REMOVE_REASON_GIVEN, REMOVE_REASON_DROPPED or REMOVE_REASON_DEBUG, unless amount is -1
            
            removeReason: see REMOVE_WEAPON_FROM_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x8A779706DA5CA3DD(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Only used in R* SP Scripts native_son2, native_son3 and smuggler2
            Params: p2 = -1
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x9409C62504A8F9E9(System.Int32,System.Boolean)">
            <summary>
            Only used in R* SP Script guama3
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GET_PED_AMMO_TYPE_FROM_WEAPON(System.Int32,System.UInt32)">
            <summary>
            Returns the current ammo type of the specified ped's specified weapon.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPONTYPE_MODEL(System.UInt32)">
            <summary>
            Gets the model hash from the weapon hash.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPONTYPE_SLOT(System.UInt32)">
            <summary>
            Returns hash where WEAPON_ is replaced with SLOT_
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0xF8204EF17410BF43(System.UInt32,System.Single,System.Single,System.UInt64)">
            <summary>
            Returns weaponHash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._IS_WEAPON_KIT(System.UInt32)">
            <summary>
            Returns true when the weapon passed is either a lasso, the camera or the binoculars
            _IS_WEAPON_M* - _IS_WEAPON_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._IS_WEAPON_KIT_2(System.UInt32)">
            <summary>
            Returns true when the weapon passed is either the fishingrod, a lasso, the camera or the binoculars
            _IS_WEAPON_M* - _IS_WEAPON_P*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GIVE_WEAPON_TO_PED(System.Int32,System.UInt32,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Single,System.Single,System.UInt32,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Gives the ped the weapon.
            List: https://github.com/femga/rdr3_discoveries/blob/master/weapons/weapons.lua
            
            Params: p7 is 0.5f, and p8 is 1.0f. p11 and p12 are both 0 in R* Scripts
            attachPoint: see SET_CURRENT_PED_WEAPON
            addReason: see _ADD_AMMO_TO_PED
            permanentDegradation: default 0.5, any higher than 0 it will automatically make the weapon worn, you can also adjust the value to change the weapons maximum cleanliness
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._HIDE_PED_WEAPONS(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Unequip current weapon and set current weapon to WEAPON_UNARMED.
            p0 usually 2 in R* scripts. Doesn't seem to have any effect if changed....
            immediately: if true it will instantly switch to unarmed
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.SET_CURRENT_PED_WEAPON(System.Int32,System.UInt32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            attachPoint:
            enum eWeaponAttachPoint
            {
            	WEAPON_ATTACH_POINT_INVALID = -1,
            	WEAPON_ATTACH_POINT_HAND_PRIMARY = 0,
            	WEAPON_ATTACH_POINT_HAND_SECONDARY = 1,
            	WEAPON_ATTACH_POINT_PISTOL_R = 2,
            	MAX_HAND_WEAPON_ATTACH_POINTS = 2,
            	WEAPON_ATTACH_POINT_PISTOL_L = 3,
            	WEAPON_ATTACH_POINT_KNIFE = 4,
            	WEAPON_ATTACH_POINT_LASSO = 5,
            	WEAPON_ATTACH_POINT_THROWER = 6,
            	WEAPON_ATTACH_POINT_BOW = 7,
            	WEAPON_ATTACH_POINT_BOW_ALTERNATE = 8,
            	WEAPON_ATTACH_POINT_RIFLE = 9,
            	WEAPON_ATTACH_POINT_RIFLE_ALTERNATE = 10,
            	WEAPON_ATTACH_POINT_LANTERN = 11,
            	WEAPON_ATTACH_POINT_TEMP_LANTERN = 12,
            	WEAPON_ATTACH_POINT_MELEE = 13,
            	MAX_SYNCED_WEAPON_ATTACH_POINTS = 13,
            	WEAPON_ATTACH_POINT_HIP = 14,
            	WEAPON_ATTACH_POINT_BOOT = 15,
            	WEAPON_ATTACH_POINT_BACK = 16,
            	WEAPON_ATTACH_POINT_FRONT = 17,
            	WEAPON_ATTACH_POINT_SHOULDERSLING = 18,
            	WEAPON_ATTACH_POINT_LEFTBREAST = 19,
            	WEAPON_ATTACH_POINT_RIGHTBREAST = 20,
            	WEAPON_ATTACH_POINT_LEFTARMPIT = 21,
            	WEAPON_ATTACH_POINT_RIGHTARMPIT = 22,
            	WEAPON_ATTACH_POINT_LEFTARMPIT_RIFLE = 23,
            	WEAPON_ATTACH_POINT_SATCHEL = 24,
            	WEAPON_ATTACH_POINT_LEFTARMPIT_BOW = 25,
            	WEAPON_ATTACH_POINT_RIGHT_HAND_EXTRA = 26,
            	WEAPON_ATTACH_POINT_LEFT_HAND_EXTRA = 27,
            	WEAPON_ATTACH_POINT_RIGHT_HAND_AUX = 28,
            	MAX_WEAPON_ATTACH_POINTS = 29
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GET_CURRENT_PED_WEAPON(System.Int32,System.UInt32*,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            attachPoint: see SET_CURRENT_PED_WEAPON
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GET_CURRENT_PED_WEAPON_ENTITY_INDEX(System.Int32,System.Int32)">
            <summary>
            Returns weaponObject, attachPoint: see SET_CURRENT_PED_WEAPON
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_BEST_PED_WEAPON_IN_GROUP(System.Int32,System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            If near your horse when called, weapons stored on your horse will be considered
            Returns weaponHash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_DEFAULT_UNARMED_WEAPON_HASH(System.Int32)">
            <summary>
            Returns the ped's default unarmed weapon hash as defined in CPedModelInfo (DefaultUnarmedWeapon).
            Falls back to WEAPON_UNARMED if the ped doesn't have a valid model info pointer, or 0 if the ped doesn't exist.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_AMMO_IN_TURRET(System.Int32,System.UInt32,System.Int32)">
            <summary>
            turretHash: WEAPON_TURRET_MAXIUM, WEAPON_TURRET_GATLING, WEAPON_TURRET_CANNON, WEAPON_TURRET_REVOLVING_CANNON
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x2387D6E9C6B478AA(System.Int32)">
            <summary>
            Returns true if ped is holstering/unholstering a weapon
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PED_WEAPON_IN_SLOT(System.Int32,System.UInt32)">
            <summary>
            slotHash is usually just the weaponHash name, but WEAPON_* is replaced with SLOT_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GIVE_DELAYED_WEAPON_TO_PED(System.Int32,System.UInt32,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            addReason: see _ADD_AMMO_TO_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.REMOVE_WEAPON_FROM_PED(System.Int32,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            removeReason:
            enum eRemoveItemReason : Hash
            {
            	REMOVE_REASON_CLIENT_PURGED = 0x4A4E94DC,
            	REMOVE_REASON_COALESCE = 0x2ABE393E,
            	REMOVE_REASON_DEBUG = 0xA07362E6,
            	REMOVE_REASON_DEFAULT = 0xF77DE93D,
            	REMOVE_REASON_DELETE_CHARACTER = 0x20AFBDE9,
            	REMOVE_REASON_DROPPED = 0xEC7FB5D5,
            	REMOVE_REASON_DUPLICATE = 0x19047132,
            	REMOVE_REASON_GIFTED_INCORRECTLY = 0x9C4E3829,
            	REMOVE_REASON_GIVEN = 0xAD5377D4,
            	REMOVE_REASON_INSUFFICIENT_INVENTORY = 0x518D1AAE,
            	REMOVE_REASON_ITEM_DOES_NOT_EXIST = 0xEAD5D889,
            	REMOVE_REASON_LOADOUT = 0x1B94E3BA,
            	REMOVE_REASON_SET_AMOUNT = 0x19D5CFA5,
            	REMOVE_REASON_SOLD = 0x76C4B482,
            	REMOVE_REASON_USED = 0x2188E0A3,
            	REMOVE_REASON_USE_FAILED = 0x671F9EAD
            };
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(System.Int32,System.Boolean)">
            <summary>
            Hides the ped's weapon during a cutscene.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_PED_WEAPON_ATTACH_POINT_VISIBILITY(System.Int32,System.Int32,System.Boolean)">
            <summary>
            attachPoint: see SET_CURRENT_PED_WEAPON
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x2EBF70E1D8C06683(System.Int32,System.UInt32)">
            <summary>
            _SET_A* - _SET_B*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x63B83A526329AFBC(System.UInt64)">
            <summary>
            Only used in R* Script fme_escaped_convicts, p0 = 0
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.MAKE_PED_DROP_WEAPON(System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Old name: _DROP_CURRENT_PED_WEAPON
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PED_CURRENT_HELD_WEAPON(System.Int32)">
            <summary>
            Returns eCurrentHeldWeapon
            _GET_R* - _GET_T*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_NAME(System.UInt32)">
            <summary>
            Returns "WNS_INVALID" if the weapon is invalid/doesn't exist.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SEND_WEAPON_TO_INVENTORY(System.Int32,System.UInt32)">
            <summary>
            Appears to just send specified weapon to your horse holster without having to be close
            However, the weapon is not visible on the horse holster, but you can reach the weapon on the weapon wheel
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x14FF0C2545527F9B(System.Int32,System.UInt32,System.Int32)">
            <summary>
            Puts the gun visibly in your horse's holster without having to be close to the horse. Use 0xE9BD19F8121ADE3E before using this native
            _A* or _B*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_OBJECT_FROM_PED(System.Int32,System.Boolean)">
            <summary>
            Detaches the weapon from the ped and actually removes the ped's weapon
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PED_WEAPON_OBJECT(System.Int32,System.Boolean)">
            <summary>
            _GET_M* - _GET_PED_A*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GIVE_WEAPON_COMPONENT_TO_ENTITY(System.Int32,System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            entity can be a ped or weapon object.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_GUN_SPINNING_WEAPON_EMOTE_TRICK_TYPE_HASH(System.UInt32,System.Int32)">
            <summary>
            Returns iSpinHash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_ACTIVE_GUN_SPINNING_EQUIP_KIT_EMOTE_TWIRL(System.Int32,System.UInt32)">
            <summary>
            emote hashes: KIT_EMOTE_TWIRL_GUN, KIT_EMOTE_TWIRL_GUN_LEFT_HOLSTER, KIT_EMOTE_TWIRL_GUN_DUAL, 0 (to unequip)
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PED_GUN_SPINNING_EQUIPPED_KIT_EMOTE_TWIRL(System.Int32)">
            <summary>
            Returns emote Hash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_ACTIVE_GUN_SPINNING_KIT_EMOTE_TWIRL(System.Int32,System.Int32,System.UInt32)">
            <summary>
            spinHash can be -1, 0 to disable
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PED_GUN_SPINNING_HASH_FROM_WEAPON_EMOTE_VARIATION(System.Int32,System.Int32)">
            <summary>
            Returns iSpinHash / iVariationSpin
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_EMOTE_VARIATION(System.Int32,System.Int32)">
            <summary>
            Returns weaponEmoteVariation
            
            WEAPON_EMOTE_VARIATION_INVALID = -2,
            WEAPON_EMOTE_VARIATION_BASE,
            WEAPON_EMOTE_VARIATION_A,
            WEAPON_EMOTE_VARIATION_B,
            WEAPON_EMOTE_VARIATION_C,
            WEAPON_EMOTE_VARIATION_D,
            WEAPON_EMOTE_VARIATION_PREVIEW,
            WEAPON_EMOTE_NUM_VARIATIONS
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_GUN_SPINNING_INVENTORY_SLOT_ID_ACTIVATE(System.Int32,System.Int32)">
            <summary>
            _STOP_* - _TEST_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_CORRECT_KIT_EMOTE_TWIRL_GUN(System.Int32,System.UInt64*)">
            <summary>
            _GET_BEST_* - _GET_CLOSEST_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_DEFAULT_PED_WEAPON_COLLECTION(System.UInt32)">
            <summary>
            Returns weaponCollection Hash
            Example: RE_POLICECHASE_MALES_01: Carbine Repeater + Knife, LO_AGRO_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x9EEFD670F10656D7(System.UInt32,System.UInt32)">
            <summary>
            Returns weaponHash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.IS_WEAPON_A_GUN(System.UInt32)">
            <summary>
            Returns true if CWeaponInfoFlags::Flags::Gun is set.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_DAMAGE(System.Int32)">
            <summary>
            Related to weapon visual damage, not actual damage.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_WEAPON_DAMAGE(System.Int32,System.Single,System.Boolean)">
            <summary>
            Related to weapon visual damage, not actual damage.
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._SET_WEAPON_LEVEL_THRESHOLD(System.Int32,System.Single)">
            <summary>
            every other level will have the max value of (brokeLevel - threshold)
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GET_WEAPON_DEGRADATION(System.Int32)">
            <summary>
            0.0: good condition, 1.0: poor condition
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.GET_WEAPON_PERMANENT_DEGRADATION(System.Int32)">
            <summary>
            Related to rust of weapons
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_CURRENT_PED_WEAPON_AMMO_TYPE(System.Int32,System.Int32)">
            <summary>
            Returns ammoHash from weaponObject (Returned by 0x6CA484C9A7377E4F)
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_CURRENT_AMMO_TYPE_FROM_GUID(System.Int32,System.UInt64*)">
            <summary>
            Returns ammoHash
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_WEAPON_ATTACH_POINT(System.Int32,System.Int32)">
            <summary>
            Returns WeaponAttachPoint
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON.SET_CURRENT_PED_WEAPON_BY_GUID(System.Int32,System.UInt64*,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Equips a weapon from a weaponItem, similar to GIVE_WEAPON_TO_PED
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._GET_PLAYER_PED_QUICK_SWAP_WEAPON_BY_GUID(System.Int32,System.UInt64*,System.UInt64*)">
            <summary>
            Outputs cached guids
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x0DE0944ECCB3DF5D(System.UInt64)">
            <summary>
            _GET_D* - _GET_L*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x46D42883E873C1D7(System.Int32)">
            <summary>
            _GET_NUM_*
            </summary>
        </member>
        <member name="M:RDR2.Native.WEAPON._0x65DC4AC5B96614CB(System.UInt32)">
            <summary>
            Returns attachPoint
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RDR2.Native.ZONE._GET_MAP_ZONE_AT_COORDS(System.Single,System.Single,System.Single,System.Int32)" -->
        <member name="M:RDR2.Native.ZONE._GET_WATER_MAP_ZONE_AT_COORDS(System.Single,System.Single,System.Single)">
            <summary>
            Returns the zone's name hash if its type matches one of the following:
            - LAKE
            - RIVER
            - OIL_SPILL
            - SWAMP
            - OCEAN
            - CREEK
            - POND
            - GLACIER
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPAPP._0xB6FD96420C0126A1(System.UInt32,System.Boolean)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPAPP._0x74BCCEB233AD95B2(System.UInt32,System.Int32)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPAPP._0x29C733459A9011EB(System.UInt32,System.String)">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPAPP._0x7AF1BB4504EA5ED9">
            <summary>
            Hardcoded to return false.
            </summary>
        </member>
        <member name="M:RDR2.Native.COMPAPP._0xCCB4635A071FB62D">
            <summary>
            nullsub, doesn't do anything
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ActivePose">
            <summary>
            Gets a ActivePose Helper class for sending ActivePose <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ApplyImpulse">
            <summary>
            Gets a ApplyImpulse Helper class for sending ApplyImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ApplyBulletImpulse">
            <summary>
            Gets a ApplyBulletImpulse Helper class for sending ApplyBulletImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BodyRelax">
            <summary>
            Gets a BodyRelax Helper class for sending BodyRelax <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureBalance">
            <summary>
            Gets a ConfigureBalance Helper class for sending ConfigureBalance <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureBalanceReset">
            <summary>
            Gets a ConfigureBalanceReset Helper class for sending ConfigureBalanceReset <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            reset the values configurable by the Configure Balance message to their defaults.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureSelfAvoidance">
            <summary>
            Gets a ConfigureSelfAvoidance Helper class for sending ConfigureSelfAvoidance <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            this single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureBullets">
            <summary>
            Gets a ConfigureBullets Helper class for sending ConfigureBullets <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureBulletsExtra">
            <summary>
            Gets a ConfigureBulletsExtra Helper class for sending ConfigureBulletsExtra <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureLimits">
            <summary>
            Gets a ConfigureLimits Helper class for sending ConfigureLimits <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureSoftLimit">
            <summary>
            Gets a ConfigureSoftLimit Helper class for sending ConfigureSoftLimit <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureShotInjuredArm">
            <summary>
            Gets a ConfigureShotInjuredArm Helper class for sending ConfigureShotInjuredArm <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure the injured arm reaction during shot
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureShotInjuredLeg">
            <summary>
            Gets a ConfigureShotInjuredLeg Helper class for sending ConfigureShotInjuredLeg <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure the injured leg reaction during shot
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.DefineAttachedObject">
            <summary>
            Gets a DefineAttachedObject Helper class for sending DefineAttachedObject <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ForceToBodyPart">
            <summary>
            Gets a ForceToBodyPart Helper class for sending ForceToBodyPart <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Apply an impulse to a named body part
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.LeanInDirection">
            <summary>
            Gets a LeanInDirection Helper class for sending LeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.LeanRandom">
            <summary>
            Gets a LeanRandom Helper class for sending LeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.LeanToPosition">
            <summary>
            Gets a LeanToPosition Helper class for sending LeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.LeanTowardsObject">
            <summary>
            Gets a LeanTowardsObject Helper class for sending LeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HipsLeanInDirection">
            <summary>
            Gets a HipsLeanInDirection Helper class for sending HipsLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HipsLeanRandom">
            <summary>
            Gets a HipsLeanRandom Helper class for sending HipsLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HipsLeanToPosition">
            <summary>
            Gets a HipsLeanToPosition Helper class for sending HipsLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HipsLeanTowardsObject">
            <summary>
            Gets a HipsLeanTowardsObject Helper class for sending HipsLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ForceLeanInDirection">
            <summary>
            Gets a ForceLeanInDirection Helper class for sending ForceLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ForceLeanRandom">
            <summary>
            Gets a ForceLeanRandom Helper class for sending ForceLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ForceLeanToPosition">
            <summary>
            Gets a ForceLeanToPosition Helper class for sending ForceLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ForceLeanTowardsObject">
            <summary>
            Gets a ForceLeanTowardsObject Helper class for sending ForceLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetStiffness">
            <summary>
            Gets a SetStiffness Helper class for sending SetStiffness <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetMuscleStiffness">
            <summary>
            Gets a SetMuscleStiffness Helper class for sending SetMuscleStiffness <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetWeaponMode">
            <summary>
            Gets a SetWeaponMode Helper class for sending SetWeaponMode <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Use this message to set the character's weapon mode. This is an alternative to the setWeaponMode public function.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.RegisterWeapon">
            <summary>
            Gets a RegisterWeapon Helper class for sending RegisterWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Use this message to register weapon. This is an alternative to the registerWeapon public function.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotRelax">
            <summary>
            Gets a ShotRelax Helper class for sending ShotRelax <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.FireWeapon">
            <summary>
            Gets a FireWeapon Helper class for sending FireWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            One shot message apply a force to the hand as we fire the gun that should be in this hand
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ConfigureConstraints">
            <summary>
            Gets a ConfigureConstraints Helper class for sending ConfigureConstraints <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            One shot to give state of constraints on character and response to constraints
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.StayUpright">
            <summary>
            Gets a StayUpright Helper class for sending StayUpright <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.StopAllBehaviours">
            <summary>
            Gets a StopAllBehaviors Helper class for sending StopAllBehaviors <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Send this message to immediately stop all behaviors from executing.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetCharacterStrength">
            <summary>
            Gets a SetCharacterStrength Helper class for sending SetCharacterStrength <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1]
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetCharacterHealth">
            <summary>
            Gets a SetCharacterHealth Helper class for sending SetCharacterHealth <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Sets character's health on the dead-to-alive scale: [0..1]
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetFallingReaction">
            <summary>
            Gets a SetFallingReaction Helper class for sending SetFallingReaction <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Sets the type of reaction if catchFall is called
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetCharacterUnderwater">
            <summary>
            Gets a SetCharacterUnderwater Helper class for sending SetCharacterUnderwater <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Sets viscosity applied to damping limbs
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetCharacterCollisions">
            <summary>
            Gets a SetCharacterCollisions Helper class for sending SetCharacterCollisions <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            setCharacterCollisions:
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetCharacterDamping">
            <summary>
            Gets a SetCharacterDamping Helper class for sending SetCharacterDamping <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Damp out cartwheeling and somersaulting above a certain threshold
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SetFrictionScale">
            <summary>
            Gets a SetFrictionScale Helper class for sending SetFrictionScale <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            setFrictionScale:
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.AnimPose">
            <summary>
            Gets a AnimPose Helper class for sending AnimPose <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ArmsWindmill">
            <summary>
            Gets a ArmsWindmill Helper class for sending ArmsWindmill <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ArmsWindmillAdaptive">
            <summary>
            Gets a ArmsWindmillAdaptive Helper class for sending ArmsWindmillAdaptive <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BalancerCollisionsReaction">
            <summary>
            Gets a BalancerCollisionsReaction Helper class for sending BalancerCollisionsReaction <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BodyBalance">
            <summary>
            Gets a BodyBalance Helper class for sending BodyBalance <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BodyFoetal">
            <summary>
            Gets a BodyFoetal Helper class for sending BodyFoetal <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BodyRollUp">
            <summary>
            Gets a BodyRollUp Helper class for sending BodyRollUp <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BodyWrithe">
            <summary>
            Gets a BodyWrithe Helper class for sending BodyWrithe <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.BraceForImpact">
            <summary>
            Gets a BraceForImpact Helper class for sending BraceForImpact <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Buoyancy">
            <summary>
            Gets a Buoyancy Helper class for sending Buoyancy <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.CatchFall">
            <summary>
            Gets a CatchFall Helper class for sending CatchFall <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Electrocute">
            <summary>
            Gets a Electrocute Helper class for sending Electrocute <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.FallOverWall">
            <summary>
            Gets a FallOverWall Helper class for sending FallOverWall <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Grab">
            <summary>
            Gets a Grab Helper class for sending Grab <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HeadLook">
            <summary>
            Gets a HeadLook Helper class for sending HeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.HighFall">
            <summary>
            Gets a HighFall Helper class for sending HighFall <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.IncomingTransforms">
            <summary>
            Gets a IncomingTransforms Helper class for sending IncomingTransforms <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.InjuredOnGround">
            <summary>
            Gets a InjuredOnGround Helper class for sending InjuredOnGround <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            InjuredOnGround
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Carried">
            <summary>
            Gets a Carried Helper class for sending Carried <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Carried
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Dangle">
            <summary>
            Gets a Dangle Helper class for sending Dangle <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Dangle
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.OnFire">
            <summary>
            Gets a OnFire Helper class for sending OnFire <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.PedalLegs">
            <summary>
            Gets a PedalLegs Helper class for sending PedalLegs <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.PointArm">
            <summary>
            Gets a PointArm Helper class for sending PointArm <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to overridebodyParts: Arms (useLeftArm, useRightArm)
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.PointGun">
            <summary>
            Gets a PointGun Helper class for sending PointGun <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.PointGunExtra">
            <summary>
            Gets a PointGunExtra Helper class for sending PointGunExtra <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.RollDownStairs">
            <summary>
            Gets a RollDownStairs Helper class for sending RollDownStairs <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Shot">
            <summary>
            Gets a Shot Helper class for sending Shot <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotNewBullet">
            <summary>
            Gets a ShotNewBullet Helper class for sending ShotNewBullet <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotSnap">
            <summary>
            Gets a ShotSnap Helper class for sending ShotSnap <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotShockSpin">
            <summary>
            Gets a ShotShockSpin Helper class for sending ShotShockSpin <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotFallToKnees">
            <summary>
            Gets a ShotFallToKnees Helper class for sending ShotFallToKnees <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            configure the fall to knees shot.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotFromBehind">
            <summary>
            Gets a ShotFromBehind Helper class for sending ShotFromBehind <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            configure the shot from behind reaction
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotInGuts">
            <summary>
            Gets a ShotInGuts Helper class for sending ShotInGuts <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            configure the shot in guts reaction
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotHeadLook">
            <summary>
            Gets a ShotHeadLook Helper class for sending ShotHeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.ShotConfigureArms">
            <summary>
            Gets a ShotConfigureArms Helper class for sending ShotConfigureArms <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            configure the arm reactions in shot
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.SmartFall">
            <summary>
            Gets a SmartFall Helper class for sending SmartFall <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
            <remarks>
            Clone of High Fall with a wider range of operating conditions.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.StaggerFall">
            <summary>
            Gets a StaggerFall Helper class for sending StaggerFall <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Teeter">
            <summary>
            Gets a Teeter Helper class for sending Teeter <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.UpperBodyFlinch">
            <summary>
            Gets a UpperBodyFlinch Helper class for sending UpperBodyFlinch <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.Euphoria.Yanked">
            <summary>
            Gets a Yanked Helper class for sending Yanked <see cref="T:RDR2.NaturalMotion.Message"/> to this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="T:RDR2.NaturalMotion.Message">
            <summary>
            A base class for manually building a <see cref="T:RDR2.NaturalMotion.Message"/>.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.#ctor(System.String)">
            <summary>
            Creates a class to manually build <see cref="T:RDR2.NaturalMotion.Message"/>s that can be sent to any <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="message">The name of the natural motion message.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.Abort(RDR2.Ped)">
            <summary>
            DO NOT USE DO NOT USE/>.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SendTo(RDR2.Ped)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:RDR2.Ped"/> that will loop until manually aborted.
            </summary>
            <param name="target">The <see cref="T:RDR2.Ped"/> to send the <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SendTo(RDR2.Ped,System.Int32)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:RDR2.Ped"/> for a specified duration.
            </summary>
            <param name="target">The <see cref="T:RDR2.Ped"/> to send the <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <param name="duration">How long to apply the behavior for (-1 for looped).</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SetArgument(System.String,System.Boolean)">
            <summary>
            Sets a <see cref="T:RDR2.NaturalMotion.Message"/> argument to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SetArgument(System.String,System.Int32)">
            <summary>
            Sets a <see cref="T:RDR2.NaturalMotion.Message"/> argument to a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SetArgument(System.String,System.Single)">
            <summary>
            Sets a <see cref="T:RDR2.NaturalMotion.Message"/> argument to a <see cref="T:System.Single"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SetArgument(System.String,System.String)">
            <summary>
            Sets a <see cref="T:RDR2.NaturalMotion.Message"/> argument to a <see cref="T:System.String"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.SetArgument(System.String,RDR2.Math.Vector3)">
            <summary>
            Sets a <see cref="T:RDR2.NaturalMotion.Message"/> argument to a <see cref="T:RDR2.Math.Vector3"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.ResetArguments">
            <summary>
            Resets all arguments to their default values.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.Message.ToString">
            <summary>
            Returns the internal message name.
            </summary>
        </member>
        <member name="T:RDR2.NaturalMotion.CustomHelper">
            <summary>
            A helper class for building a <seealso cref="T:RDR2.NaturalMotion.Message" /> and sending it to a given <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.CustomHelper.#ctor(RDR2.Ped,System.String)">
            <summary>
            Creates a helper class for building Natural Motion messages to send to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="target">The <see cref="T:RDR2.Ped"/> that the message will be applied to.</param>
            <param name="message">The name of the natural motion message.</param>
        </member>
        <member name="M:RDR2.NaturalMotion.CustomHelper.Start">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:RDR2.Ped"/> that will loop until manually aborted.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.CustomHelper.Start(System.Int32)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:RDR2.Ped"/> for a specified duration.
            </summary>
            <param name="duration">How long to apply the behavior for (-1 for looped).</param>
        </member>
        <member name="M:RDR2.NaturalMotion.CustomHelper.Stop">
            <summary>
            Stops this Natural Motion behavior on the <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ActivePoseHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ActivePoseHelper for sending a ActivePose <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ActivePose <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ActivePoseHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ActivePoseHelper.UseGravityCompensation">
            <summary>
            Apply gravity compensation.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ActivePoseHelper.AnimSource">
            <summary>
            Animation source.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ApplyImpulseHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ApplyImpulseHelper for sending a ApplyImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ApplyImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.EqualizeAmount">
            <summary>
            0 means straight impulse, 1 means multiply by the mass (change in velocity).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.PartIndex">
            <summary>
            Index of part being hit. -1 apply impulse to COM.
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.Impulse">
            <summary>
            Impulse vector (impulse is change in momentum).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -4500.0f.
            Max value = 4500.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.HitPoint">
            <summary>
            Optional point on part where hit. If not supplied then the impulse is applied at the part center.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.LocalHitPointInfo">
            <summary>
            Hit point in local coordinates of body part.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.LocalImpulseInfo">
            <summary>
            Impulse in local coordinates of body part.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyImpulseHelper.AngularImpulse">
            <summary>
            Impulse should be considered an angular impulse.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ApplyBulletImpulseHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ApplyBulletImpulseHelper for sending a ApplyBulletImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ApplyBulletImpulse <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.EqualizeAmount">
            <summary>
            0 means straight impulse, 1 means multiply by the mass (change in velocity).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.PartIndex">
            <summary>
            Index of part being hit.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.Impulse">
            <summary>
            Impulse vector (impulse is change in momentum).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1000.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.HitPoint">
            <summary>
            Optional point on part where hit.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.LocalHitPointInfo">
            <summary>
            True = hitPoint is in local coordinates of bodyPart, false = hit point is in world coordinates.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ApplyBulletImpulseHelper.ExtraShare">
            <summary>
            If not 0.0 then have an extra bullet applied to spine0 (approximates the COM).  Uses setup from configureBulletsExtra.  0-1 shared 0.0 = no extra bullet, 0.5 = impulse split equally between extra and bullet,  1.0 only extra bullet.  LT 0.0 then bullet + scaled extra bullet.  Eg.-0.5 = bullet + 0.5 impulse extra bullet.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.BodyRelaxHelper">
            <summary>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.BodyRelaxHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BodyRelaxHelper for sending a BodyRelax <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BodyRelax <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRelaxHelper.Relaxation">
            <summary>
            How relaxed the body becomes, in percentage relaxed. 100 being totally rag-dolled, 0 being very stiff and rigid.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRelaxHelper.Damping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRelaxHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRelaxHelper.HoldPose">
            <summary>
            Automatically hold the current pose as the character relaxes - can be used to avoid relaxing into a t-pose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRelaxHelper.DisableJointDriving">
            <summary>
            Sets the drive state to free - this reduces drifting on the ground.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureBalanceHelper">
            <summary>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureBalanceHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBalanceHelper for sending a ConfigureBalance <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureBalance <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepHeight">
            <summary>
            Maximum height that character steps vertically (above 0.2 is high ... But OK underwater).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.4f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepHeightInc4Step">
            <summary>
            Added to stepHeight if going up steps.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.4f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LegsApartRestep">
            <summary>
            If the legs end up more than (legsApartRestep + hipwidth) apart even though balanced, take another step.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LegsTogetherRestep">
            <summary>
            Mmmm0.1 for drunk if the legs end up less than (hipwidth - legsTogetherRestep) apart even though balanced, take another step.  A value of 1 will turn off this feature and the max value is hipWidth = 0.23f by default but is model dependent.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LegsApartMax">
            <summary>
            FRICTION WORKAROUND: if the legs end up more than (legsApartMax + hipwidth) apart when balanced, adjust the feet positions to slide back so they are legsApartMax + hipwidth apart.  Needs to be less than legsApartRestep to see any effect.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.TaperKneeStrength">
            <summary>
            Does the knee strength reduce with angle.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LegStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LeftLegSwingDamping">
            <summary>
            Damping of left leg during swing phase (mmmmDrunk used 1.25 to slow legs movement).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.2f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.RightLegSwingDamping">
            <summary>
            Damping of right leg during swing phase (mmmmDrunk used 1.25 to slow legs movement).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.2f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.OpposeGravityLegs">
            <summary>
            Gravity opposition applied to hips and knees.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.OpposeGravityAnkles">
            <summary>
            Gravity opposition applied to ankles.  General balancer likes 1.0.  StaggerFall likes 0.1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LeanAcc">
            <summary>
            Multiplier on the floorAcceleration added to the lean.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.HipLeanAcc">
            <summary>
            Multiplier on the floorAcceleration added to the leanHips.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LeanAccMax">
            <summary>
            Max floorAcceleration allowed for lean and leanHips.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ResistAcc">
            <summary>
            Level of cheat force added to character to resist the effect of floorAcceleration (anti-Acceleration) - added to upperbody.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ResistAccMax">
            <summary>
            Max floorAcceleration allowed for anti-Acceleration. If  GT 20.0 then it is probably in a crash.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FootSlipCompOnMovingFloor">
            <summary>
            This parameter will be removed when footSlipCompensation preserves the foot angle on a moving floor]. If the character detects a moving floor and footSlipCompOnMovingFloor is false then it will turn off footSlipCompensation - at footSlipCompensation preserves the global heading of the feet.  If footSlipCompensation is off then the character usually turns to the side in the end although when turning the vehicle turns it looks promising for a while.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AnkleEquilibrium">
            <summary>
            Ankle equilibrium angle used when static balancing.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ExtraFeetApart">
            <summary>
            Additional feet apart setting.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.DontStepTime">
            <summary>
            Amount of time at the start of a balance before the character is allowed to start stepping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.BalanceAbortThreshold">
            <summary>
            When the character gives up and goes into a fall.  Larger values mean that the balancer can lean more before failing.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.GiveUpHeight">
            <summary>
            Height between lowest foot and COM below which balancer will give up.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepClampScale">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepClampScaleVariance">
            <summary>
            Variance in clamp scale every step. If negative only takes away from clampScale.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.PredictionTimeHip">
            <summary>
            Amount of time (seconds) into the future that the character tries to move hip to (kind of).  Will be controlled by balancer in future but can help recover spine quicker from bending forwards to much.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.PredictionTime">
            <summary>
            Amount of time (seconds) into the future that the character tries to step to. Bigger values try to recover with fewer, bigger steps. Smaller values recover with smaller steps, and generally recover less.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.PredictionTimeVariance">
            <summary>
            Variance in predictionTime every step. If negative only takes away from predictionTime.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.MaxSteps">
            <summary>
            Maximum number of steps that the balancer will take.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.MaxBalanceTime">
            <summary>
            Maximum time(seconds) that the balancer will balance for.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ExtraSteps">
            <summary>
            Allow the balancer to take this many more steps before hitting maxSteps. If negative nothing happens(safe default).
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ExtraTime">
            <summary>
            Allow the balancer to balance for this many more seconds before hitting maxBalanceTime.  If negative nothing happens(safe default).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FallType">
            <summary>
            How to fall after maxSteps or maxBalanceTime.
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.FallType.RampDownStiffness"/>.
            If <see cref="F:RDR2.NaturalMotion.FallType.Slump"/> BCR has to be active.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FallMult">
            <summary>
            Multiply the rampDown of stiffness on falling by this amount ( GT 1 fall quicker).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FallReduceGravityComp">
            <summary>
            Reduce gravity compensation as the legs weaken on falling.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.RampHipPitchOnFail">
            <summary>
            Bend over when falling after maxBalanceTime.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StableLinSpeedThresh">
            <summary>
            Linear speed threshold for successful balance.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StableRotSpeedThresh">
            <summary>
            Rotational speed threshold for successful balance.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FailMustCollide">
            <summary>
            The upper body of the character must be colliding and other failure conditions met to fail.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.IgnoreFailure">
            <summary>
            Ignore maxSteps and maxBalanceTime and try to balance forever.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.ChangeStepTime">
            <summary>
            Time not in contact (airborne) before step is changed. If -ve don't change step.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.BalanceIndefinitely">
            <summary>
            Ignore maxSteps and maxBalanceTime and try to balance forever.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.MovingFloor">
            <summary>
            Temporary variable to ignore movingFloor code that generally causes the character to fall over if the feet probe a moving object e.g. treading on a gun.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AirborneStep">
            <summary>
            When airborne try to step.  Set to false for e.g. shotGun reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.UseComDirTurnVelThresh">
            <summary>
            Velocity below which the balancer turns in the direction of the COM forward instead of the ComVel - for use with shot from running with high upright constraint use 1.9.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.MinKneeAngle">
            <summary>
            Minimum knee angle (-ve value will mean this functionality is not applied).  0.4 seems a good value.
            </summary>
            <remarks>
            Default value = -0.5f.
            Min value = -0.5f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FlatterSwingFeet">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FlatterStaticFeet">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AvoidLeg">
            <summary>
            If true then balancer tries to avoid leg2leg collisions/avoid crossing legs. Avoid tries to not step across a line of the inside of the stance leg's foot.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AvoidFootWidth">
            <summary>
            NB. Very sensitive. Avoid tries to not step across a line of the inside of the stance leg's foot. AvoidFootWidth = how much inwards from the ankle this line is in (m).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AvoidFeedback">
            <summary>
            NB. Very sensitive. Avoid tries to not step across a line of the inside of the stance leg's foot. Avoid doesn't allow the desired stepping foot to cross the line.  avoidFeedback = how much of the actual crossing of that line is fedback as an error.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LeanAgainstVelocity">
            <summary>
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepDecisionThreshold">
            <summary>
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StepIfInSupport">
            <summary>
            The balancer sometimes decides to step even if balanced.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.AlwaysStepWithFarthest">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.StandUp">
            <summary>
            Standup more with increased velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.DepthFudge">
            <summary>
            Supposed to increase foot friction: Impact depth of a collision with the foot is changed when the balancer is running - impact.SetDepth(impact.GetDepth() - depthFudge).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.DepthFudgeStagger">
            <summary>
            Supposed to increase foot friction: Impact depth of a collision with the foot is changed when staggerFall is running - impact.SetDepth(impact.GetDepth() - depthFudgeStagger).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FootFriction">
            <summary>
            Foot friction multiplier is multiplied by this amount if balancer is running.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.FootFrictionStagger">
            <summary>
            Foot friction multiplier is multiplied by this amount if staggerFall is running.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.BackwardsLeanCutoff">
            <summary>
            Backwards lean threshold to cut off stay upright forces. 0.0 Vertical - 1.0 horizontal.  0.6 is a sensible value.  NB: the balancer does not fail in order to give stagger that extra step as it falls.  A backwards lean of GT 0.6 will generally mean the balancer will soon fail without stayUpright forces.
            </summary>
            <remarks>
            Default value = 1.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.GiveUpHeightEnd">
            <summary>
            If this value is different from giveUpHeight, actual giveUpHeight will be ramped toward this value.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.BalanceAbortThresholdEnd">
            <summary>
            If this value is different from balanceAbortThreshold, actual balanceAbortThreshold will be ramped toward this value.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.GiveUpRampDuration">
            <summary>
            Duration of ramp from start of behavior for above two parameters. If smaller than 0, no ramp is applied.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBalanceHelper.LeanToAbort">
            <summary>
            Lean at which to send abort message when maxSteps or maxBalanceTime is reached.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureBalanceResetHelper">
            <summary>
            Reset the values configurable by the Configure Balance message to their defaults.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureBalanceResetHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBalanceResetHelper for sending a ConfigureBalanceReset <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureBalanceReset <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Reset the values configurable by the Configure Balance message to their defaults.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper">
            <summary>
            This single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureSelfAvoidanceHelper for sending a ConfigureSelfAvoidance <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureSelfAvoidance <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.UseSelfAvoidance">
            <summary>
            Enable or disable self avoidance tech.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.OverwriteDragReduction">
            <summary>
            Specify whether self avoidance tech should use original IK input target or the target that has been already modified by getStabilisedPos() tech i.e. function that compensates for rotational and linear velocity of shoulder/thigh.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.TorsoSwingFraction">
            <summary>
            Place the adjusted target this much along the arc between effector (wrist) and target, value in range [0,1].
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.MaxTorsoSwingAngleRad">
            <summary>
            Max value on the effector (wrist) to adjusted target offset.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.6f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.SelfAvoidIfInSpineBoundsOnly">
            <summary>
            Restrict self avoidance to operate on targets that are within character torso bounds only.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.SelfAvoidAmount">
            <summary>
            Amount of self avoidance offset applied when angle from effector (wrist) to target is greater then right angle i.e. when total offset is a blend between where effector currently is to value that is a product of total arm length and selfAvoidAmount. SelfAvoidAmount is in a range between [0, 1].
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.OverwriteTwist">
            <summary>
            Overwrite desired IK twist with self avoidance procedural twist.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.UsePolarPathAlgorithm">
            <summary>
            Use the alternative self avoidance algorithm that is based on linear and polar target blending. WARNING: It only requires "radius" in terms of parametrization.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSelfAvoidanceHelper.Radius">
            <summary>
            Self avoidance radius, measured out from the spine axis along the plane perpendicular to that axis. The closer is the proximity of reaching target to that radius, the more polar (curved) motion is used for offsetting the target. WARNING: Parameter only used by the alternative algorithm that is based on linear and polar target blending.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureBulletsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBulletsHelper for sending a ConfigureBullets <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureBullets <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseSpreadOverParts">
            <summary>
            Spreads impulse across parts. Currently only for spine parts, not limbs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseLeakageStrengthScaled">
            <summary>
            For weaker characters subsequent impulses remain strong.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulsePeriod">
            <summary>
            Duration that impulse is spread over (triangular shaped).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseTorqueScale">
            <summary>
            An impulse applied at a point on a body equivalent to an impulse at the center of the body and a torque.  This parameter scales the torque component. (The torque component seems to be excite the rage looseness bug which sends the character in a sometimes wildly different direction to an applied impulse).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.LoosenessFix">
            <summary>
            Fix the rage looseness bug by applying only the impulse at the center of the body unless it is a spine part then apply the twist component only of the torque as well.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseDelay">
            <summary>
            Time from hit before impulses are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseReductionPerShot">
            <summary>
            By how much are subsequent impulses reduced (e.g. 0.0: no reduction, 0.1: 10% reduction each new hit).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseRecovery">
            <summary>
            Recovery rate of impulse strength per second (impulse strength from 0.0:1.0).  At 60fps a impulseRecovery=60.0 will recover in 1 frame.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseMinLeakage">
            <summary>
            The minimum amount of impulse leakage allowed.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueMode.Disabled"/>.
            If <see cref="F:RDR2.NaturalMotion.TorqueMode.Proportional"/> - proportional to character strength, can reduce impulse amount.
            If <see cref="F:RDR2.NaturalMotion.TorqueMode.Additive"/> - no reduction of impulse and not proportional to character strength.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueSpinMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueSpinMode.FromImpulse"/>.
            If <see cref="F:RDR2.NaturalMotion.TorqueSpinMode.Flipping"/> a burst effect is achieved.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueFilterMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueFilterMode.ApplyEveryBullet"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueAlwaysSpine3">
            <summary>
            Always apply torques to spine3 instead of actual part hit.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueDelay">
            <summary>
            Time from hit before torques are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorquePeriod">
            <summary>
            Duration of torque.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueGain">
            <summary>
            Multiplies impulse magnitude to arrive at torque that is applied.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueCutoff">
            <summary>
            Minimum ratio of impulse that remains after converting to torque (if in strength-proportional mode).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.TorqueReductionPerTick">
            <summary>
            Ratio of torque for next tick (e.g. 1.0: not reducing over time, 0.9: each tick torque is reduced by 10%).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.LiftGain">
            <summary>
            Amount of lift (directly multiplies torque axis to give lift force).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.CounterImpulseDelay">
            <summary>
            Time after impulse is applied that counter impulse is applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.CounterImpulseMag">
            <summary>
            Amount of the original impulse that is countered.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.CounterAfterMagReached">
            <summary>
            Applies the counter impulse counterImpulseDelay(secs) after counterImpulseMag of the Impulse has been applied.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.DoCounterImpulse">
            <summary>
            Add a counter impulse to the pelvis.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.CounterImpulse2Hips">
            <summary>
            Amount of the counter impulse applied to hips - the rest is applied to the part originally hit.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseNoBalMult">
            <summary>
            Amount to scale impulse by if the dynamicBalance is not OK.  1.0 means this functionality is not applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabStart">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabEnd">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabMult">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngStart">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngEnd">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngMult">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseVelStart">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseVelEnd">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseVelMult">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMult">
            <summary>
            Amount to scale impulse by if the character is airborne and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMultStart">
            <summary>
            If impulse is above this value scale it by impulseAirMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMax">
            <summary>
            Amount to clamp impulse to if character is airborne  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseAirApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseAirOn">
            <summary>
            Scale and/or clamp impulse if the character is airborne and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMult">
            <summary>
            Amount to scale impulse by if the character is contacting with one foot only and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMultStart">
            <summary>
            If impulse is above this value scale it by impulseOneLegMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMax">
            <summary>
            Amount to clamp impulse to if character is contacting with one foot only  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegOn">
            <summary>
            Scale and/or clamp impulse if the character is contacting with one leg only and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbRatio">
            <summary>
            0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbLowerShare">
            <summary>
            Rigid body response is shared between the upper and lower body (rbUpperShare = 1-rbLowerShare). RbLowerShare=0.5 gives upper and lower share scaled by mass.  i.e. if 70% ub mass and 30% lower mass then rbLowerShare=0.5 gives actualrbShare of 0.7ub and 0.3lb. rbLowerShare GT 0.5 scales the ub share down from 0.7 and the lb up from 0.3.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMoment">
            <summary>
            0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArm">
            <summary>
            Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArm">
            <summary>
            Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbRatioAirborne">
            <summary>
            If Airborne: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMomentAirborne">
            <summary>
            If Airborne: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArmAirborne">
            <summary>
            If Airborne: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArmAirborne">
            <summary>
            If Airborne: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbRatioOneLeg">
            <summary>
            If only one leg in contact: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMomentOneLeg">
            <summary>
            If only one leg in contact: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbTwistAxis">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.RbTwistAxis.WorldUp"/>.
            </remarks>.
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsHelper.RbPivot">
            <summary>
            If false pivot around COM always, if true change pivot depending on foot contact:  to feet center if both feet in contact, or foot position if 1 foot in contact or COM position if no feet in contact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBulletsExtraHelper for sending a ConfigureBulletsExtra <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureBulletsExtra <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpreadOverParts">
            <summary>
            Spreads impulse across parts. Currently only for spine parts, not limbs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulsePeriod">
            <summary>
            Duration that impulse is spread over (triangular shaped).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseTorqueScale">
            <summary>
            An impulse applied at a point on a body equivalent to an impulse at the center of the body and a torque.  This parameter scales the torque component. (The torque component seems to be excite the rage looseness bug which sends the character in a sometimes wildly different direction to an applied impulse).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.LoosenessFix">
            <summary>
            Fix the rage looseness bug by applying only the impulse at the center of the body unless it is a spine part then apply the twist component only of the torque as well.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseDelay">
            <summary>
            Time from hit before impulses are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueMode.Disabled"/>.
            If <see cref="F:RDR2.NaturalMotion.TorqueMode.Proportional"/> - proportional to character strength, can reduce impulse amount.
            If <see cref="F:RDR2.NaturalMotion.TorqueMode.Additive"/> - no reduction of impulse and not proportional to character strength.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueSpinMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueSpinMode.FromImpulse"/>.
            If <see cref="F:RDR2.NaturalMotion.TorqueSpinMode.Flipping"/> a burst effect is achieved.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueFilterMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TorqueFilterMode.ApplyEveryBullet"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueAlwaysSpine3">
            <summary>
            Always apply torques to spine3 instead of actual part hit.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueDelay">
            <summary>
            Time from hit before torques are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorquePeriod">
            <summary>
            Duration of torque.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueGain">
            <summary>
            Multiplies impulse magnitude to arrive at torque that is applied.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueCutoff">
            <summary>
            Minimum ratio of impulse that remains after converting to torque (if in strength-proportional mode).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.TorqueReductionPerTick">
            <summary>
            Ratio of torque for next tick (e.g. 1.0: not reducing over time, 0.9: each tick torque is reduced by 10%).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.LiftGain">
            <summary>
            Amount of lift (directly multiplies torque axis to give lift force).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulseDelay">
            <summary>
            Time after impulse is applied that counter impulse is applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulseMag">
            <summary>
            Amount of the original impulse that is countered.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.CounterAfterMagReached">
            <summary>
            Applies the counter impulse counterImpulseDelay(secs) after counterImpulseMag of the Impulse has been applied.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.DoCounterImpulse">
            <summary>
            Add a counter impulse to the pelvis.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulse2Hips">
            <summary>
            Amount of the counter impulse applied to hips - the rest is applied to the part originally hit.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseNoBalMult">
            <summary>
            Amount to scale impulse by if the dynamicBalance is not OK.  1.0 means this functionality is not applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabStart">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabEnd">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabMult">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngStart">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngEnd">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngMult">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelStart">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelEnd">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelMult">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMult">
            <summary>
            Amount to scale impulse by if the character is airborne and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMultStart">
            <summary>
            If impulse is above this value scale it by impulseAirMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMax">
            <summary>
            Amount to clamp impulse to if character is airborne  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirOn">
            <summary>
            Scale and/or clamp impulse if the character is airborne and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMult">
            <summary>
            Amount to scale impulse by if the character is contacting with one foot only and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMultStart">
            <summary>
            If impulse is above this value scale it by impulseOneLegMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMax">
            <summary>
            Amount to clamp impulse to if character is contacting with one foot only  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegOn">
            <summary>
            Scale and/or clamp impulse if the character is contacting with one leg only and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbRatio">
            <summary>
            0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbLowerShare">
            <summary>
            Rigid body response is shared between the upper and lower body (rbUpperShare = 1-rbLowerShare). RbLowerShare=0.5 gives upper and lower share scaled by mass.  i.e. if 70% ub mass and 30% lower mass then rbLowerShare=0.5 gives actualrbShare of 0.7ub and 0.3lb. rbLowerShare GT 0.5 scales the ub share down from 0.7 and the lb up from 0.3.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMoment">
            <summary>
            0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArm">
            <summary>
            Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArm">
            <summary>
            Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbRatioAirborne">
            <summary>
            If Airborne: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMomentAirborne">
            <summary>
            If Airborne: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArmAirborne">
            <summary>
            If Airborne: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArmAirborne">
            <summary>
            If Airborne: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbRatioOneLeg">
            <summary>
            If only one leg in contact: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMomentOneLeg">
            <summary>
            If only one leg in contact: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbTwistAxis">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.RbTwistAxis.WorldUp"/>.
            </remarks>.
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureBulletsExtraHelper.RbPivot">
            <summary>
            If false pivot around COM always, if true change pivot depending on foot contact:  to feet center if both feet in contact, or foot position if 1 foot in contact or COM position if no feet in contact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureLimitsHelper">
            <summary>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureLimitsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureLimitsHelper for sending a ConfigureLimits <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureLimits <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  for joint limits to configure. Ignored if index != -1.
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Enable">
            <summary>
            If false, disable (set all to PI, -PI) limits.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.ToDesired">
            <summary>
            If true, set limits to accommodate current desired angles.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Restore">
            <summary>
            Return to cached defaults?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.ToCurAnimation">
            <summary>
            If true, set limits to the current animated limits.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Index">
            <summary>
            Index of effector to configure.  Set to -1 to use mask.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Lean1">
            <summary>
            Custom limit values to use if not setting limits to desired. Limits are RAGE-native, not NM-wrapper-native.
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Lean2">
            <summary>
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Twist">
            <summary>
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureLimitsHelper.Margin">
            <summary>
            Joint limit margin to add to current animation limits when using those to set runtime limits.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureSoftLimitHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureSoftLimitHelper for sending a ConfigureSoftLimit <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureSoftLimit <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.Index">
            <summary>
            Select limb that the soft limit is going to be applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.Stiffness">
            <summary>
            Stiffness of the soft limit.
            Parameter is used to calculate spring term that contributes to the desired acceleration.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.Damping">
            <summary>
            Damping of the soft limit.
            Parameter is used to calculate damper term that contributes to the desired acceleration.
            To have the system critically dampened set it to 1.0.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.9f.
            Max value = 1.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.LimitAngle">
            <summary>
            Soft limit angle.
            Positive angle in RAD, measured relatively either from hard limit maxAngle (approach direction = -1) or minAngle (approach direction = 1).
            This angle will be clamped if outside the joint hard limit range.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.ApproachDirection">
            <summary>
            Limit angle can be measured relatively to joints hard limit minAngle or maxAngle.
            Set it to +1 to measure soft limit angle relatively to hard limit minAngle that corresponds to the maximum stretch of the elbow.
            Set it to -1 to measure soft limit angle relatively to hard limit maxAngle that corresponds to the maximum stretch of the knee.
            </summary>
            <remarks>
            Default value = 1.
            Min value = -1.
            Max value = 1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureSoftLimitHelper.VelocityScaled">
            <summary>
            Scale stiffness based on character angular velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper">
            <summary>
            This single message allows you to configure the injured arm reaction during shot.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureShotInjuredArmHelper for sending a ConfigureShotInjuredArm <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureShotInjuredArm <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure the injured arm reaction during shot.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.InjuredArmTime">
            <summary>
            Length of the reaction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.HipYaw">
            <summary>
            Amount of hip twist.  (Negative values twist into bullet direction - probably not what is wanted).
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.HipRoll">
            <summary>
            Amount of hip roll.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.ForceStepExtraHeight">
            <summary>
            Additional height added to stepping foot.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.7f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.ForceStep">
            <summary>
            Force a step to be taken whether pushed out of balance or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.StepTurn">
            <summary>
            Turn the character using the balancer.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.VelMultiplierStart">
            <summary>
            Start velocity where parameters begin to be ramped down to zero linearly.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.VelMultiplierEnd">
            <summary>
            End velocity of ramp where parameters are scaled to zero.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 1.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.VelForceStep">
            <summary>
            Velocity above which a step is not forced.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.VelStepTurn">
            <summary>
            Velocity above which a stepTurn is not asked for.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredArmHelper.VelScales">
            <summary>
            Use the velocity scaling parameters.
            Tune for standing still then use velocity scaling to make sure a running character stays balanced (the turning tends to make the character fall over more at speed).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper">
            <summary>
            This single message allows you to configure the injured leg reaction during shot.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureShotInjuredLegHelper for sending a ConfigureShotInjuredLeg <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureShotInjuredLeg <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure the injured leg reaction during shot.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.TimeBeforeCollapseWoundLeg">
            <summary>
            Time before a wounded leg is set to be weak and cause the character to collapse.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryTime">
            <summary>
            Leg injury duration (reaction to being shot in leg).
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegForceStep">
            <summary>
            Force a step to be taken whether pushed out of balance or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegLimpBend">
            <summary>
            Bend the legs via the balancer by this amount if stepping on the injured leg.
            0.2 seems a good default.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegLiftTime">
            <summary>
            Leg lift duration (reaction to being shot in leg).
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjury">
            <summary>
            Leg injury - leg strength is reduced.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryHipPitch">
            <summary>
            Leg injury bend forwards amount when not lifting leg.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryLiftHipPitch">
            <summary>
            Leg injury bend forwards amount when lifting leg.
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjurySpineBend">
            <summary>
            Leg injury bend forwards amount when not lifting leg.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryLiftSpineBend">
            <summary>
            Leg injury bend forwards amount when lifting leg.
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.DefineAttachedObjectHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the DefineAttachedObjectHelper for sending a DefineAttachedObject <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the DefineAttachedObject <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.DefineAttachedObjectHelper.PartIndex">
            <summary>
            Index of part to attach to.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.DefineAttachedObjectHelper.ObjectMass">
            <summary>
            Mass of the attached object.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.DefineAttachedObjectHelper.WorldPos">
            <summary>
            World position of attached object's center of mass. Must be updated each frame.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ForceToBodyPartHelper">
            <summary>
            Apply an impulse to a named body part.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ForceToBodyPartHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ForceToBodyPartHelper for sending a ForceToBodyPart <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ForceToBodyPart <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Apply an impulse to a named body part.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceToBodyPartHelper.PartIndex">
            <summary>
            Part or link or bound index.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceToBodyPartHelper.Force">
            <summary>
            Force to apply.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -50.0f, 0.0f).
            Min value = -100000.0f.
            Max value = 100000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceToBodyPartHelper.ForceDefinedInPartSpace">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.LeanInDirectionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the LeanInDirectionHelper for sending a LeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the LeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.LeanRandomHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the LeanRandomHelper for sending a LeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the LeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanRandomHelper.ChangeTimeMin">
            <summary>
            Minimum time until changing direction.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.LeanToPositionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the LeanToPositionHelper for sending a LeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the LeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.LeanTowardsObjectHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the LeanTowardsObjectHelper for sending a LeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the LeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to lean towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.LeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to lean towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HipsLeanInDirectionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanInDirectionHelper for sending a HipsLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HipsLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HipsLeanRandomHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanRandomHelper for sending a HipsLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HipsLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanRandomHelper.ChangeTimeMin">
            <summary>
            Min time until changing direction.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HipsLeanToPositionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanToPositionHelper for sending a HipsLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HipsLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HipsLeanTowardsObjectHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanTowardsObjectHelper for sending a HipsLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HipsLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to lean hips towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HipsLeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to lean hips towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ForceLeanInDirectionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanInDirectionHelper for sending a ForceLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ForceLeanInDirection <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanInDirectionHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ForceLeanRandomHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanRandomHelper for sending a ForceLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ForceLeanRandom <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanRandomHelper.ChangeTimeMin">
            <summary>
            Min time until changing direction.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanRandomHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ForceLeanToPositionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanToPositionHelper for sending a ForceLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ForceLeanToPosition <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanToPositionHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanTowardsObjectHelper for sending a ForceLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ForceLeanTowardsObject <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to move towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to move towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ForceLeanTowardsObjectHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetStiffnessHelper">
            <summary>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetStiffnessHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetStiffnessHelper for sending a SetStiffness <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetStiffness <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetStiffnessHelper.BodyStiffness">
            <summary>
            Stiffness of whole character.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 2.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetStiffnessHelper.Damping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetStiffnessHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetMuscleStiffnessHelper">
            <summary>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetMuscleStiffnessHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetMuscleStiffnessHelper for sending a SetMuscle stiffness <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetMuscle stiffness <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetMuscleStiffnessHelper.MuscleStiffness">
            <summary>
            Muscle stiffness of joint/s.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetMuscleStiffnessHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetWeaponModeHelper">
            <summary>
            Use this message to set the character's weapon mode.  This is an alternativeto the setWeaponMode public function.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetWeaponModeHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetWeaponModeHelper for sending a SetWeaponMode <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetWeaponMode <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to set the character's weapon mode.  This is an alternativeto the setWeaponMode public function.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetWeaponModeHelper.WeaponMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.WeaponMode.PistolRight"/>.
            </remarks>.
        </member>
        <member name="T:RDR2.NaturalMotion.RegisterWeaponHelper">
            <summary>
            Use this message to register weapon.  This is an alternativeto the registerWeapon public function.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.RegisterWeaponHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the RegisterWeaponHelper for sending a RegisterWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the RegisterWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to register weapon.  This is an alternativeto the registerWeapon public function.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.Hand">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.Hand.Right"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.LevelIndex">
            <summary>
            Level index of the weapon.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.ConstraintHandle">
            <summary>
            Pointer to the hand-gun constraint handle.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToHandA">
            <summary>
            A vector of the gunToHand matrix.  The gunToHandMatrix is the desired gunToHandMatrix in the aimingPose. (The gunToHandMatrix when pointGun starts can be different so will be blended to this desired one).
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToHandB">
            <summary>
            B vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 1.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToHandC">
            <summary>
            C vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToHandD">
            <summary>
            D vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToMuzzleInGun">
            <summary>
            Gun center to muzzle expressed in gun co-ordinates.  To get the line of sight/barrel of the gun. Assumption: the muzzle direction is always along the same primary axis of the gun.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RegisterWeaponHelper.GunToButtInGun">
            <summary>
            Gun center to butt expressed in gun co-ordinates.  The gun pivots around this point when aiming.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotRelaxHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotRelaxHelper for sending a ShotRelax <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotRelax <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotRelaxHelper.RelaxPeriodUpper">
            <summary>
            Time over which to relax to full relaxation for upper body.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotRelaxHelper.RelaxPeriodLower">
            <summary>
            Time over which to relax to full relaxation for lower body.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.FireWeaponHelper">
            <summary>
            One shot message apply a force to the hand as we fire the gun that should be in this hand.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.FireWeaponHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the FireWeaponHelper for sending a FireWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the FireWeapon <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            One shot message apply a force to the hand as we fire the gun that should be in this hand.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.FiredWeaponStrength">
            <summary>
            The force of the gun.
            </summary>
            <remarks>
            Default value = 1000.0f.
            Min value = 0.0f.
            Max value = 10000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.GunHandEnum">
            <summary>
            Which hand is the gun in.
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.Hand.Left"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.ApplyFireGunForceAtClavicle">
            <summary>
            Should we apply some of the force at the shoulder. Force double handed weapons (Ak47 etc).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.InhibitTime">
            <summary>
            Minimum time before next fire impulse.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.Direction">
            <summary>
            Direction of impulse in gun frame.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FireWeaponHelper.Split">
            <summary>
            Split force between hand and clavicle when applyFireGunForceAtClavicle is true. 1 = all hand, 0 = all clavicle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ConfigureConstraintsHelper">
            <summary>
            One shot to give state of constraints on character and response to constraints.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ConfigureConstraintsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ConfigureConstraintsHelper for sending a ConfigureConstraints <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ConfigureConstraints <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            One shot to give state of constraints on character and response to constraints.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.HandCuffs">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.HandCuffsBehindBack">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.LegCuffs">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.RightDominant">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.PassiveMode">
            <summary>
            0 setCurrent, 1= IK to dominant, (2=pointGunLikeIK //not implemented).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 5.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.BespokeBehavior">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ConfigureConstraintsHelper.Blend2ZeroPose">
            <summary>
            Blend Arms to zero pose.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.StayUprightHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the StayUprightHelper for sending a StayUpright <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the StayUpright <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.UseForces">
            <summary>
            Enable force based constraint.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.UseTorques">
            <summary>
            Enable torque based constraint.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.LastStandMode">
            <summary>
            Uses position/orientation control on the spine and drifts in the direction of bullets.  This ignores all other stayUpright settings.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.LastStandSinkRate">
            <summary>
            The sink rate (higher for a faster drop).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.LastStandHorizDamping">
            <summary>
            Higher values for more damping.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.LastStandMaxTime">
            <summary>
            Max time allowed in last stand mode.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TurnTowardsBullets">
            <summary>
            Use cheat torques to face the direction of bullets if not facing too far away.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.VelocityBased">
            <summary>
            Make strength of constraint function of COM velocity.  Uses -1 for forceDamping if the damping is positive.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TorqueOnlyInAir">
            <summary>
            Only apply torque based constraint when airBorne.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceStrength">
            <summary>
            Strength of constraint.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceDamping">
            <summary>
            Damping in constraint: -1 makes it scale automagically with forceStrength.  Other negative values will scale this automagic damping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceFeetMult">
            <summary>
            Multiplier to the force applied to the feet.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceSpine3Share">
            <summary>
            Share of pelvis force applied to spine3.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceLeanReduction">
            <summary>
            How much the character lean is taken into account when reducing the force.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceInAirShare">
            <summary>
            Share of the feet force to the airborne foot.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceMin">
            <summary>
            When min and max are greater than 0 the constraint strength is determined from character strength, scaled into the range given by min and max.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceMax">
            <summary>
            See above.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceSaturationVel">
            <summary>
            When in velocityBased mode, the COM velocity at which constraint reaches maximum strength (forceStrength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.ForceThresholdVel">
            <summary>
            When in velocityBased mode, the COM velocity above which constraint starts applying forces.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TorqueStrength">
            <summary>
            Strength of torque based constraint.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TorqueDamping">
            <summary>
            Damping of torque based constraint.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TorqueSaturationVel">
            <summary>
            When in velocityBased mode, the COM velocity at which constraint reaches maximum strength (torqueStrength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.TorqueThresholdVel">
            <summary>
            When in velocityBased mode, the COM velocity above which constraint starts applying torques.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.SupportPosition">
            <summary>
            Distance the foot is behind Com projection that is still considered able to generate the support for the upright constraint.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.NoSupportForceMult">
            <summary>
            Still apply this fraction of the upright constaint force if the foot is not in a position (defined by supportPosition) to generate the support for the upright constraint.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.StepUpHelp">
            <summary>
            Strength of cheat force applied upwards to spine3 to help the character up steps/slopes.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.StayUpAcc">
            <summary>
            How much the cheat force takes into account the acceleration of moving platforms.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StayUprightHelper.StayUpAccMax">
            <summary>
            The maximum floorAcceleration (of a moving platform) that the cheat force takes into account.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.StopAllBehavioursHelper">
            <summary>
            Send this message to immediately stop all behaviors from executing.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.StopAllBehavioursHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the StopAllBehaviorsHelper for sending a StopAllBehaviors <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the StopAllBehaviors <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Send this message to immediately stop all behaviors from executing.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetCharacterStrengthHelper">
            <summary>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1].
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetCharacterStrengthHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterStrengthHelper for sending a SetCharacterStrength <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetCharacterStrength <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1].
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterStrengthHelper.CharacterStrength">
            <summary>
            Strength of character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetCharacterHealthHelper">
            <summary>
            Sets character's health on the dead-to-alive scale: [0..1].
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetCharacterHealthHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterHealthHelper for sending a SetCharacterHealth <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetCharacterHealth <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets character's health on the dead-to-alive scale: [0..1].
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterHealthHelper.CharacterHealth">
            <summary>
            Health of character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetFallingReactionHelper">
            <summary>
            Sets the type of reaction if catchFall is called.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetFallingReactionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetFallingReactionHelper for sending a SetFallingReaction <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetFallingReaction <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets the type of reaction if catchFall is called.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.HandsAndKnees">
            <summary>
            Set to true to get handsAndKnees catchFall if catchFall called. If true allows the dynBalancer to stay on during the catchfall and modifies the catch fall to give a more alive looking performance (hands and knees for front landing or sitting up for back landing).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.CallRDS">
            <summary>
            If true catchFall will call rollDownstairs if comVel GT comVelRDSThresh - prevents excessive sliding in catchFall.  Was previously only true for handsAndKnees.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.ComVelRDSThresh">
            <summary>
            ComVel above which rollDownstairs will start - prevents excessive sliding in catchFall.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.ResistRolling">
            <summary>
            For rds catchFall only: True to resist rolling motion (rolling motion is set off by ub contact and a sliding velocity), false to allow more of a continuous rolling  (rolling motion is set off at a sliding velocity).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.ArmReduceSpeed">
            <summary>
            Strength is reduced in the catchFall when the arms contact the ground.  0.2 is good for handsAndKnees.  2.5 is good for normal catchFall, anything lower than 1.0 for normal catchFall may lead to bad catchFall poses.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.ReachLengthMultiplier">
            <summary>
            Reach length multiplier that scales characters arm topological length, value in range from (0, 1 GT  where 1.0 means reach length is maximum.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.3f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.InhibitRollingTime">
            <summary>
            Time after hitting ground that the catchFall can call rds.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.ChangeFrictionTime">
            <summary>
            Time after hitting ground that the catchFall can change the friction of parts to inhibit sliding.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.GroundFriction">
            <summary>
            8.0 was used on yanked) Friction multiplier on body parts when on ground.  Character can look too slidy with groundFriction = 1.  Higher values give a more jerky reaction but this seems timestep dependent especially for dragged by the feet.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.FrictionMin">
            <summary>
            Min Friction of an impact with a body part (not head, hands or feet) - to increase friction of slippy environment to get character to roll better.  Applied in catchFall and rollUp(rollDownStairs).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.FrictionMax">
            <summary>
            Max Friction of an impact with a body part (not head, hands or feet) - to increase friction of slippy environment to get character to roll better.  Applied in catchFall and rollUp(rollDownStairs).
            </summary>
            <remarks>
            Default value = 9999.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.StopOnSlopes">
            <summary>
            Apply tactics to help stop on slopes.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.StopManual">
            <summary>
            Override slope value to manually force stopping on flat ground.  Encourages character to come to rest face down or face up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.StoppedStrengthDecay">
            <summary>
            Speed at which strength reduces when stopped.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.SpineLean1Offset">
            <summary>
            Bias spine post towards hunched (away from arched).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.RiflePose">
            <summary>
            Hold rifle in a safe position to reduce complications with collision.  Only applied if holding a rifle.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.HkHeadAvoid">
            <summary>
            Enable head ground avoidance when handsAndKnees is true.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.AntiPropClav">
            <summary>
            Discourage the character getting stuck propped up by elbows when falling backwards - by inhibiting backwards moving clavicles (keeps the arms slightly wider).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.AntiPropWeak">
            <summary>
            Discourage the character getting stuck propped up by elbows when falling backwards - by weakening the arms as soon they hit the floor.  (Also stops the hands lifting up when flat on back).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.HeadAsWeakAsArms">
            <summary>
            Head weakens as arms weaken. If false and antiPropWeak when falls onto back doesn't loosen neck so early (matches bodyStrength instead).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFallingReactionHelper.SuccessStrength">
            <summary>
            When bodyStrength is less than successStrength send a success feedback - DO NOT GO OUTSIDE MIN/MAX PARAMETER VALUES OTHERWISE NO SUCCESS FEEDBACK WILL BE SENT.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.3f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetCharacterUnderwaterHelper">
            <summary>
            Sets viscosity applied to damping limbs.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterUnderwaterHelper for sending a SetCharacterUnderwater <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetCharacterUnderwater <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets viscosity applied to damping limbs.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.Underwater">
            <summary>
            Is character underwater?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.Viscosity">
            <summary>
            Viscosity applied to character's parts.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.GravityFactor">
            <summary>
            Gravity factor applied to character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.Stroke">
            <summary>
            Swimming force applied to character as a function of handVelocity and footVelocity.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1000.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterUnderwaterHelper.LinearStroke">
            <summary>
            Swimming force (linearStroke=true,False) = (f(v),f(v*v)).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetCharacterCollisionsHelper">
            <summary>
            SetCharacterCollisions:.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetCharacterCollisionsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterCollisionsHelper for sending a SetCharacterCollisions <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetCharacterCollisions <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            SetCharacterCollisions:.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.Spin">
            <summary>
            Sliding friction turned into spin 80.0 (used in demo videos) good for rest of default params below.  If 0.0 then no collision enhancement.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.MaxVelocity">
            <summary>
            Torque = spin*(relative velocity) up to this maximum for relative velocity.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.ApplyToAll">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.ApplyToSpine">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.ApplyToThighs">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.ApplyToClavicles">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.ApplyToUpperArms">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.FootSlip">
            <summary>
            Allow foot slipping if collided.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterCollisionsHelper.VehicleClass">
            <summary>
            ClassType of the object against which to enhance the collision.  All character vehicle interaction (e.g. braceForImpact glancing spins) relies on this value so EDIT WISELY. If it is used for things other than vehicles then NM should be informed.
            </summary>
            <remarks>
            Default value = 15.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetCharacterDampingHelper">
            <summary>
            Damp out cartwheeling and somersaulting above a certain threshold.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetCharacterDampingHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterDampingHelper for sending a SetCharacterDamping <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetCharacterDamping <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Damp out cartwheeling and somersaulting above a certain threshold.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.SomersaultThresh">
            <summary>
            Somersault AngularMomentum measure above which we start damping - try 34.0.  Falling over straight backwards gives 54 on hitting ground.
            </summary>
            <remarks>
            Default value = 34.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.SomersaultDamp">
            <summary>
            Amount to damp somersaulting by (spinning around left/right axis) - try 0.45.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.CartwheelThresh">
            <summary>
            Cartwheel AngularMomentum measure above which we start damping - try 27.0.
            </summary>
            <remarks>
            Default value = 27.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.CartwheelDamp">
            <summary>
            Amount to damp somersaulting by (spinning around front/back axis) - try 0.8.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.VehicleCollisionTime">
            <summary>
            Time after impact with a vehicle to apply characterDamping. -ve values mean always apply whether collided with vehicle or not. =0.0 never apply. =timestep apply for only that frame.  A typical roll from being hit by a car lasts about 4secs.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetCharacterDampingHelper.V2">
            <summary>
            If true damping is proportional to Angular momentum squared.  If false proportional to Angular momentum.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SetFrictionScaleHelper">
            <summary>
            SetFrictionScale:.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SetFrictionScaleHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SetFrictionScaleHelper for sending a SetFrictionScale <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SetFrictionScale <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            SetFrictionScale:.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFrictionScaleHelper.Scale">
            <summary>
            Friction scale to be applied to parts in mask.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFrictionScaleHelper.GlobalMin">
            <summary>
            Character-wide minimum impact friction. Affects all parts (not just those in mask).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1000000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFrictionScaleHelper.GlobalMax">
            <summary>
            Character-wide maximum impact friction. Affects all parts (not just those in mask).
            </summary>
            <remarks>
            Default value = 999999.0f.
            Min value = 0.0f.
            Max value = 1000000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SetFrictionScaleHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.AnimPoseHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the AnimPoseHelper for sending a AnimPose <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the AnimPose <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffness">
            <summary>
            Muscle stiffness of masked joints. -values mean don't apply (just use defaults or ones applied by behaviors - safer if you are going to return to a behavior).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.Stiffness">
            <summary>
            Stiffness of masked joints. -ve values mean don't apply stiffness or damping (just use defaults or ones applied by behaviors).  If you are using animpose fullbody on its own then this gives the opprtunity to use setStffness and setMuscle stiffness messages to set up the character's muscles. Mmmmtodo get rid of this -ve.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.1f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.Damping">
            <summary>
            Damping of masked joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.EffectorMask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation).
            </summary>
            <remarks>
            Default value = "ub".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.OverideHeadlook">
            <summary>
            Overide Headlook behavior (if animPose includes the head).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.OveridePointArm">
            <summary>
            Overide PointArm behavior (if animPose includes the arm/arms).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.OveridePointGun">
            <summary>
            Overide PointGun behavior (if animPose includes the arm/arms)//mmmmtodo not used at moment.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.UseZMPGravityCompensation">
            <summary>
            If true then modify gravity compensation based on stance (can reduce gravity compensation to zero if cofm is outside of balance area).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravityCompensation">
            <summary>
            Gravity compensation applied to joints in the effectorMask. If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffnessLeftArm">
            <summary>
            Muscle stiffness applied to left arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffnessRightArm">
            <summary>
            Muscle stiffness applied to right arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffnessSpine">
            <summary>
            Muscle stiffness applied to spine (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffnessLeftLeg">
            <summary>
            Muscle stiffness applied to left leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.MuscleStiffnessRightLeg">
            <summary>
            Muscle stiffness applied to right leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.StiffnessLeftArm">
            <summary>
            Stiffness  applied to left arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.StiffnessRightArm">
            <summary>
            Stiffness applied to right arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.StiffnessSpine">
            <summary>
            Stiffness applied to spine (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.StiffnessLeftLeg">
            <summary>
            Stiffness applied to left leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.StiffnessRightLeg">
            <summary>
            Stiffness applied to right leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampingLeftArm">
            <summary>
            Damping applied to left arm (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampingRightArm">
            <summary>
            Damping applied to right arm (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampingSpine">
            <summary>
            Damping applied to spine (applied after stiffness). If stiffness-ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampingLeftLeg">
            <summary>
            Damping applied to left leg (applied after stiffness). If stiffness-ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampingRightLeg">
            <summary>
            Damping applied to right leg (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravCompLeftArm">
            <summary>
            Gravity compensation applied to left arm (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravCompRightArm">
            <summary>
            Gravity compensation applied to right arm (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravCompSpine">
            <summary>
            Gravity compensation applied to spine (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravCompLeftLeg">
            <summary>
            Gravity compensation applied to left leg (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.GravCompRightLeg">
            <summary>
            Gravity compensation applied to right leg (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.ConnectedLeftHand">
            <summary>
            Is the left hand constrained to the world/ an object: -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.ConnectedRightHand">
            <summary>
            Is the right hand constrained to the world/ an object: -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.ConnectedLeftFoot">
            <summary>
            Is the left foot constrained to the world/ an object: -2=do not set in animpose (e.g. let the balancer decide), -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.ConnectedRightFoot">
            <summary>
            Is the right foot constrained to the world/ an object: -2=do not set in animpose (e.g. let the balancer decide),-1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.AnimSource">
            <summary>
            </summary>
        </member>
        <member name="P:RDR2.NaturalMotion.AnimPoseHelper.DampenSideMotionInstanceIndex">
            <summary>
            LevelIndex of object to dampen side motion relative to. -1 means not used.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ArmsWindmillHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ArmsWindmillHelper for sending a ArmsWindmill <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ArmsWindmill <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftPartID">
            <summary>
            ID of part that the circle uses as local space for positioning.
            </summary>
            <remarks>
            Default value = 10.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftRadius1">
            <summary>
            Radius for first axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftRadius2">
            <summary>
            Radius for second axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftSpeed">
            <summary>
            Speed of target around the circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftNormal">
            <summary>
            Euler Angles orientation of circle in space of part with part ID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.2f, 0.2f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftCentre">
            <summary>
            Centre of circle in the space of partID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.5f, -0.1f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightPartID">
            <summary>
            ID of part that the circle uses as local space for positioning.
            </summary>
            <remarks>
            Default value = 10.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightRadius1">
            <summary>
            Radius for first axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightRadius2">
            <summary>
            Radius for second axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightSpeed">
            <summary>
            Speed of target around the circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightNormal">
            <summary>
            Euler Angles orientation of circle in space of part with part ID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -0.2f, -0.2f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightCentre">
            <summary>
            Centre of circle in the space of partID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -0.5f, -0.1f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.ShoulderStiffness">
            <summary>
            Stiffness applied to the shoulders.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.ShoulderDamping">
            <summary>
            Damping applied to the shoulders.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.ElbowStiffness">
            <summary>
            Stiffness applied to the elbows.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.ElbowDamping">
            <summary>
            Damping applied to the elbows.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.LeftElbowMin">
            <summary>
            Minimum left elbow bend.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.7f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.RightElbowMin">
            <summary>
            Minimum right elbow bend.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.7f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.PhaseOffset">
            <summary>
            Phase offset(degrees) when phase synchronization is turned on.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -360.0f.
            Max value = 360.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.DragReduction">
            <summary>
            How much to compensate for movement of character/target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.IKtwist">
            <summary>
            Angle of elbow around twist axis ?.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.AngVelThreshold">
            <summary>
            Value of character angular speed above which adaptive arm motion starts.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.AngVelGain">
            <summary>
            Multiplies angular speed of character to get speed of arms.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.MirrorMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.MirrorMode.Mirrored"/>.
            If <see cref="F:RDR2.NaturalMotion.MirrorMode.Parallel"/> leftArm parameters are used.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.AdaptiveMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.AdaptiveMode.NotAdaptive"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.ForceSync">
            <summary>
            Toggles phase synchronization.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.UseLeft">
            <summary>
            Use the left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.UseRight">
            <summary>
            Use the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillHelper.DisableOnImpact">
            <summary>
            If true, each arm will stop windmilling if it hits the ground.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ArmsWindmillAdaptiveHelper for sending a ArmsWindmillAdaptive <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ArmsWindmillAdaptive <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.AngSpeed">
            <summary>
            Controls the speed of the windmilling.
            </summary>
            <remarks>
            Default value = 6.3f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.BodyStiffness">
            <summary>
            Controls how stiff the rest of the body is.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.Amplitude">
            <summary>
            Controls how large the motion is, higher values means the character waves his arms in a massive arc.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.Phase">
            <summary>
            Set to a non-zero value to desynchronize the left and right arms motion.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -4.0f.
            Max value = 8.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.ArmStiffness">
            <summary>
            How stiff the arms are controls how pronounced the windmilling motion appears.
            </summary>
            <remarks>
            Default value = 14.1f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.LeftElbowAngle">
            <summary>
            If not negative then left arm will blend to this angle.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.RightElbowAngle">
            <summary>
            If not negative then right arm will blend to this angle.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.Lean1mult">
            <summary>
            0 arms go up and down at the side. 1 circles. 0..1 elipse.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.Lean1offset">
            <summary>
            0.f center of circle at side.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -6.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.ElbowRate">
            <summary>
            Rate at which elbow tries to match *ElbowAngle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.ArmDirection">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.ArmDirections.Adaptive"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.DisableOnImpact">
            <summary>
            If true, each arm will stop windmilling if it hits the ground.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.SetBackAngles">
            <summary>
            If true, back angles will be set to compliment arms windmill.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.UseAngMom">
            <summary>
            If true, use angular momentum about com to choose arm circling direction. Otherwise use com angular velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.BendLeftElbow">
            <summary>
            If true, bend the left elbow to give a stunt man type scramble look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.BendRightElbow">
            <summary>
            If true, bend the right elbow to give a stunt man type scramble look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ArmsWindmillAdaptiveHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "ub".
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BalancerCollisionsReactionHelper for sending a BalancerCollisionsReaction <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BalancerCollisionsReaction <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.NumStepsTillSlump">
            <summary>
            Begin slump and stop stepping after this many steps.
            </summary>
            <remarks>
            Default value = 4.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.Stable2SlumpTime">
            <summary>
            Time after becoming stable leaning against a wall that slump starts.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ExclusionZone">
            <summary>
            Steps are ihibited to not go closer to the wall than this (after impact).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.FootFrictionMultStart">
            <summary>
            Friction multiplier applied to feet when slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.FootFrictionMultRate">
            <summary>
            Friction multiplier reduced by this amount every second after slump starts (only if character is not slumping).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.BackFrictionMultStart">
            <summary>
            Friction multiplier applied to back when slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.BackFrictionMultRate">
            <summary>
            Friction multiplier reduced by this amount every second after slump starts (only if character is not slumping).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ImpactLegStiffReduction">
            <summary>
            Reduce the stiffness of the legs by this much as soon as an impact is detected.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SlumpLegStiffReduction">
            <summary>
            Reduce the stiffness of the legs by this much as soon as slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SlumpLegStiffRate">
            <summary>
            Rate at which the stiffness of the legs is reduced during slump.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ReactTime">
            <summary>
            Time that the character reacts to the impact with ub flinch and writhe.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ImpactExagTime">
            <summary>
            Time that the character exaggerates impact with spine.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinTime">
            <summary>
            Duration that the glance torque is applied for.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinMag">
            <summary>
            Magnitude of the glance torque.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinDecayMult">
            <summary>
            Multiplier used when decaying torque spin over time.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColWithIndex">
            <summary>
            Used so impact with the character that is pushing you over doesn't set off the behavior.
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SlumpMode">
            <summary>
            0=Normal slump(less movement then slump and movement LT small), 1=fast slump, 2=less movement then slump.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ReboundMode">
            <summary>
            0=fall2knees/slump if shot not running, 1=stumble, 2=slump, 3=restart.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColMassBelow">
            <summary>
            Collisions with non-fixed objects with mass below this will not set this behavior off (e.g. ignore guns).
            </summary>
            <remarks>
            Default value = 20.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ForwardMode">
            <summary>
            0=slump, 1=fallToKnees if shot is running, otherwise slump.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.TimeToForward">
            <summary>
            Time after a forwards impact before forwardMode is called (leave sometime for a rebound or brace - the min of 0.1 is to ensure fallOverWall can start although it probably needs only 1or2 frames for the probes to return).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ReboundForce">
            <summary>
            If forwards impact only: cheat force to try to get the character away from the wall.  3 is a good value.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.BraceWall">
            <summary>
            Brace against wall if forwards impact(at the moment only if bodyBalance is running/in charge of arms).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColVolumeBelow">
            <summary>
            Collisions with non-fixed objects with volume below this will not set this behavior off.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.FallOverWallDrape">
            <summary>
            Use fallOverWall as the main drape reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.FallOverHighWalls">
            <summary>
            Trigger fall over wall if hit up to spine2 else only if hit up to spine1.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.Snap">
            <summary>
            Add a Snap to when you hit a wall to emphasize the hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapMag">
            <summary>
            The magnitude of the snap reaction.
            </summary>
            <remarks>
            Default value = -0.6f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapDirectionRandomness">
            <summary>
            The character snaps in a prescribed way (decided by bullet direction) - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapLeftArm">
            <summary>
            Snap the leftArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapRightArm">
            <summary>
            Snap the rightArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapLeftLeg">
            <summary>
            Snap the leftLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapRightLeg">
            <summary>
            Snap the rightLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapSpine">
            <summary>
            Snap the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapNeck">
            <summary>
            Snap the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapPhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapHipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.UnSnapInterval">
            <summary>
            Interval before applying reverse snap.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.UnSnapRatio">
            <summary>
            The magnitude of the reverse snap.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.SnapUseTorques">
            <summary>
            Use torques to make the snap otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ImpactWeaknessZeroDuration">
            <summary>
            Duration for which the character's upper body stays at minimum stiffness (not quite zero).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ImpactWeaknessRampDuration">
            <summary>
            Duration of the ramp to bring the character's upper body stiffness back to normal levels.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ImpactLoosenessAmount">
            <summary>
            How loose the character is on impact. Between 0 and 1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictim">
            <summary>
            Detected an object behind a shot victim in the direction of a bullet?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictimPos">
            <summary>
            The intersection pos of a detected object behind a shot victim in the direction of a bullet.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictimNormal">
            <summary>
            The normal of a detected object behind a shot victim in the direction of a bullet.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BodyBalanceHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BodyBalanceHelper for sending a BodyBalance <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BodyBalance <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmStiffness">
            <summary>
            NB. WAS m_bodyStiffness ClaviclesStiffness=9.0f.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.Elbow">
            <summary>
            How much the elbow swings based on the leg movement.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.Shoulder">
            <summary>
            How much the shoulder(lean1) swings based on the leg movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmDamping">
            <summary>
            NB. WAS m_damping NeckDamping=1 ClaviclesDamping=1.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SpineStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SomersaultAngle">
            <summary>
            Multiplier of the somersault 'angle' (lean forward/back) for arms out (lean2).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SomersaultAngleThreshold">
            <summary>
            Amount of somersault 'angle' before m_somersaultAngle is used for ArmsOut. Unless drunk - DO NOT EXCEED 0.8.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SideSomersaultAngle">
            <summary>
            Amount of side somersault 'angle' before sideSomersault is used for ArmsOut. Unless drunk - DO NOT EXCEED 0.8.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SideSomersaultAngleThreshold">
            <summary>
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BackwardsAutoTurn">
            <summary>
            Automatically turn around if moving backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TurnWithBumpRadius">
            <summary>
            0.9 is a sensible value.  If pusher within this distance then turn to get out of the way of the pusher.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BackwardsArms">
            <summary>
            Bend elbows, relax shoulders and inhibit spine twist when moving backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BlendToZeroPose">
            <summary>
            Blend upper body to zero pose as the character comes to rest. If false blend to a stored pose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmsOutOnPush">
            <summary>
            Put arms out based on lean2 of legs, or angular velocity (lean or twist), or lean (front/back or side/side).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmsOutOnPushMultiplier">
            <summary>
            Arms out based on lean2 of the legs to simulate being pushed.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmsOutOnPushTimeout">
            <summary>
            Number of seconds before turning off the armsOutOnPush response only for Arms out based on lean2 of the legs (NOT for the angle or angular velocity).
            </summary>
            <remarks>
            Default value = 1.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ReturningToBalanceArmsOut">
            <summary>
            Range 0:1 0 = don't raise arms if returning to upright position, 0.x = 0.x*raise arms based on angvel and 'angle' settings, 1 = raise arms based on angvel and 'angle' settings.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmsOutStraightenElbows">
            <summary>
            Multiplier for straightening the elbows based on the amount of arms out(lean2) 0 = dont straighten elbows. Otherwise straighten elbows proportionately to armsOut.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ArmsOutMinLean2">
            <summary>
            Minimum desiredLean2 applied to shoulder (to stop arms going above shoulder height or not).
            </summary>
            <remarks>
            Default value = -9.9f.
            Min value = -10.0f.
            Max value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.SpineDamping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.UseBodyTurn">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ElbowAngleOnContact">
            <summary>
            On contact with upperbody the desired elbow angle is set to at least this value.
            </summary>
            <remarks>
            Default value = 1.9f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BendElbowsTime">
            <summary>
            Time after contact (with Upper body) that the min m_elbowAngleOnContact is applied.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BendElbowsGait">
            <summary>
            Minimum desired angle of elbow during non contact arm swing.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HipL2ArmL2">
            <summary>
            Mmmmdrunk = 0.2 multiplier of hip lean2 (star jump) to give shoulder lean2 (flapping).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ShoulderL2">
            <summary>
            Mmmmdrunk = 0.7 shoulder lean2 offset.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ShoulderL1">
            <summary>
            Mmmmdrunk 1.1 shoulder lean1 offset (+ve frankenstein).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ShoulderTwist">
            <summary>
            Mmmmdrunk = 0.0 shoulder twist.
            </summary>
            <remarks>
            Default value = -0.4f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TurnOffProb">
            <summary>
            Weighted probability that turn will be off. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.Turn2VelProb">
            <summary>
            Weighted probability of turning towards velocity. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TurnAwayProb">
            <summary>
            Weighted probability of turning away from headLook target. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TurnLeftProb">
            <summary>
            Weighted probability of turning left. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TurnRightProb">
            <summary>
            Weighted probability of turning right. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.Turn2TargetProb">
            <summary>
            Weighted probability of turning towards headLook target. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.AngVelMultiplier">
            <summary>
            Somersault, twist, sideSomersault) multiplier of the angular velocity  for arms out (lean2) (somersault, twist, sideSomersault).
            </summary>
            <remarks>
            Default value = Vector3(4.0f, 1.0f, 4.0f).
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.AngVelThreshold">
            <summary>
            Somersault, twist, sideSomersault) threshold above which angVel is used for arms out (lean2) Unless drunk - DO NOT EXCEED 7.0 for each component.
            </summary>
            <remarks>
            Default value = Vector3(1.2f, 3.0f, 1.2f).
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BraceDistance">
            <summary>
            If -ve then do not brace.  distance from object at which to raise hands to brace 0.5 good if newBrace=true - otherwise 0.65.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TargetPredictionTime">
            <summary>
            Time expected to get arms up from idle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.ReachAbsorbtionTime">
            <summary>
            Larger values and he absorbs the impact more.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BraceStiffness">
            <summary>
            Stiffness of character. Catch_fall stiffness scales with this too, with its defaults at this values default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.MinBraceTime">
            <summary>
            Minimum bracing time so the character doesn't look twitchy.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.TimeToBackwardsBrace">
            <summary>
            Time before arm brace kicks in when hit from behind.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HandsDelayMin">
            <summary>
            If bracing with 2 hands delay one hand by at least this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.HandsDelayMax">
            <summary>
            If bracing with 2 hands delay one hand by at most this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.BraceOffset">
            <summary>
            BraceTarget is global headLookPos plus braceOffset m in the up direction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.MoveRadius">
            <summary>
            If -ve don't move away from pusher unless moveWhenBracing is true and braceDistance  GT  0.0f.  if the pusher is closer than moveRadius then move away from it.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.MoveAmount">
            <summary>
            Amount of leanForce applied away from pusher.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyBalanceHelper.MoveWhenBracing">
            <summary>
            Only move away from pusher when bracing against pusher.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BodyFoetalHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BodyFoetalHelper for sending a BodyFoetal <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BodyFoetal <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.Stiffness">
            <summary>
            The stiffness of the body determines how fast the character moves into the position, and how well that they hold it.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.DampingFactor">
            <summary>
            Sets damping value for the character joints.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.Asymmetry">
            <summary>
            A value between 0-1 that controls how asymmetric the results are by varying stiffness across the body.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.RandomSeed">
            <summary>
            Random seed used to generate asymmetry values.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.BackTwist">
            <summary>
            Amount of random back twist to add.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyFoetalHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BodyRollUpHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BodyRollUpHelper for sending a BodyRollUp <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BodyRollUp <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.Stiffness">
            <summary>
            Stiffness of whole body.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.UseArmToSlowDown">
            <summary>
            The degree to which the character will try to stop a barrel roll with his arms.
            </summary>
            <remarks>
            Default value = 1.3f.
            Min value = -2.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.ArmReachAmount">
            <summary>
            The likeliness of the character reaching for the ground with its arms.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.LegPush">
            <summary>
            Used to keep rolling down slope, 1 is full (kicks legs out when pointing upwards).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.AsymmetricalLegs">
            <summary>
            0 is no leg asymmetry in 'foetal' position.  greater than 0 a asymmetricalLegs-rand(30%), added/minus each joint of the legs in radians.  Random number changes about once every roll.  0.4 gives a lot of asymmetry.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.NoRollTimeBeforeSuccess">
            <summary>
            Time that roll velocity has to be lower than rollVelForSuccess, before success message is sent.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.RollVelForSuccess">
            <summary>
            Lower threshold for roll velocity at which success message can be sent.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.RollVelLinearContribution">
            <summary>
            Contribution of linear COM velocity to roll Velocity (if 0, roll velocity equal to COM angular velocity).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.VelocityScale">
            <summary>
            Scales perceived body velocity.  The higher this value gets, the more quickly the velocity measure saturates, resulting in a tighter roll at slower speeds. (NB: Set to 1 to match earlier behavior).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.VelocityOffset">
            <summary>
            Offsets perceived body velocity.  Increase to create larger "dead zone" around zero velocity where character will be less rolled. (NB: Reset to 0 to match earlier behavior).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyRollUpHelper.ApplyMinMaxFriction">
            <summary>
            Controls whether or not behavior enforces min/max friction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BodyWritheHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BodyWritheHelper for sending a BodyWrithe <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BodyWrithe <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ArmStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BackStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.LegStiffness">
            <summary>
            The stiffness of the character will determine how 'determined' a writhe this is - high values will make him thrash about wildly.
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ArmDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BackDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.LegDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ArmPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BackPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.LegPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ArmAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BackAmplitude">
            <summary>
            Scales the amount of writhe. 0 = no writhe.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.LegAmplitude">
            <summary>
            Scales the amount of writhe. 0 = no writhe.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ElbowAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.KneeAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.RollOverFlag">
            <summary>
            Flag to set trying to rollOver.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BlendArms">
            <summary>
            Blend the writhe arms with the current desired arms (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BlendBack">
            <summary>
            Blend the writhe spine and neck with the current desired (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.BlendLegs">
            <summary>
            Blend the writhe legs with the current desired legs (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ApplyStiffness">
            <summary>
            Use writhe stiffnesses if true. If false don't set any stiffnesses.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.OnFire">
            <summary>
            Extra shoulderBlend. Rolling:one way only, maxRollOverTime, rollOverRadius, doesn't reduce arm stiffness to help rolling. No shoulder twist.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ShoulderLean1">
            <summary>
            Blend writhe shoulder desired lean1 with this angle in RAD. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.ShoulderLean2">
            <summary>
            Blend writhe shoulder desired lean2 with this angle in RAD. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.Lean1BlendFactor">
            <summary>
            Shoulder desired lean1 with shoulderLean1 angle blend factor. Set it to 0 to use original shoulder withe desired lean1 angle for shoulders. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.Lean2BlendFactor">
            <summary>
            Shoulder desired lean2 with shoulderLean2 angle blend factor. Set it to 0 to use original shoulder withe desired lean2 angle for shoulders. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.RollTorqueScale">
            <summary>
            Scale rolling torque that is applied to character spine.
            </summary>
            <remarks>
            Default value = 150.0f.
            Min value = 0.0f.
            Max value = 300.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.MaxRollOverTime">
            <summary>
            Rolling torque is ramped down over time. At this time in seconds torque value converges to zero. Use this parameter to restrict time the character is rolling. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BodyWritheHelper.RollOverRadius">
            <summary>
            Rolling torque is ramped down with distance measured from position where character hit the ground and started rolling. At this distance in meters torque value converges to zero. Use this parameter to restrict distance the character travels due to rolling. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.BraceForImpactHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BraceForImpactHelper for sending a BraceForImpact <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the BraceForImpact <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.BraceDistance">
            <summary>
            Distance from object at which to raise hands to brace 0.5 good if newBrace=true - otherwise 0.65.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.TargetPredictionTime">
            <summary>
            Time epected to get arms up from idle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.ReachAbsorbtionTime">
            <summary>
            Larger values and he absorbs the impact more.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.InstanceIndex">
            <summary>
            LevelIndex of object to brace.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.BodyStiffness">
            <summary>
            Stiffness of character. Catch_fall stiffness scales with this too, with its defaults at this values default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GrabDontLetGo">
            <summary>
            Once a constraint is made, keep reaching with whatever hand is allowed.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GrabStrength">
            <summary>
            Strength in hands for grabbing (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = 40.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GrabDistance">
            <summary>
            Relative distance at which the grab starts.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GrabReachAngle">
            <summary>
            Angle from front at which the grab activates. If the point is outside this angle from front will not try to grab.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.2f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GrabHoldTimer">
            <summary>
            Amount of time, in seconds, before grab automatically bails.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MaxGrabCarVelocity">
            <summary>
            Don't try to grab a car moving above this speed mmmmtodo make this the relative velocity of car to character?.
            </summary>
            <remarks>
            Default value = 95.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.LegStiffness">
            <summary>
            Balancer leg stiffness mmmmtodo remove this parameter and use configureBalance?.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.TimeToBackwardsBrace">
            <summary>
            Time before arm brace kicks in when hit from behind.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.Look">
            <summary>
            Position to look at, e.g. the driver.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.Pos">
            <summary>
            Location of the front part of the object to brace against. This should be the center of where his hands should meet the object.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MinBraceTime">
            <summary>
            Minimum bracing time so the character doesn't look twitchy.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.HandsDelayMin">
            <summary>
            If bracing with 2 hands delay one hand by at least this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.HandsDelayMax">
            <summary>
            If bracing with 2 hands delay one hand by at most this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MoveAway">
            <summary>
            Move away from the car (if in reaching zone).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MoveAwayAmount">
            <summary>
            ForceLean away amount (-ve is lean towards).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MoveAwayLean">
            <summary>
            Lean away amount (-ve is lean towards).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.MoveSideways">
            <summary>
            Amount of sideways movement if at the front or back of the car to add to the move away from car.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.BbArms">
            <summary>
            Use bodyBalance arms for the default (non bracing) behavior if bodyBalance is active.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.NewBrace">
            <summary>
            Use the new brace prediction code.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.BraceOnImpact">
            <summary>
            If true then if a shin or thigh is in contact with the car then brace. NB: newBrace must be true.  For those situations where the car has pushed the ped backwards (at the same speed as the car) before the behavior has been started and so doesn't predict an impact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.Roll2Velocity">
            <summary>
            When rollDownStairs is running use roll2Velocity to control the helper torques (this only attempts to roll to the chaarcter's velocity not some default linear velocity mag.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.RollType">
            <summary>
            0 = original/roll off/stay on car:  Roll with character velocity, 1 = //Gentle: roll off/stay on car = use relative velocity of character to car to roll against, 2 = //roll over car:  Roll against character velocity.  i.e. roll against any velocity picked up by hitting car, 3 = //Gentle: roll over car:  use relative velocity of character to car to roll with.
            </summary>
            <remarks>
            Default value = 3.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.SnapImpacts">
            <summary>
            Exaggerate impacts using snap.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.SnapImpact">
            <summary>
            Exaggeration amount of the initial impact (legs).  +ve fold with car impact (as if pushed at hips in the car velocity direction).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = 7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.SnapBonnet">
            <summary>
            Exaggeration amount of the secondary (torso) impact with bonnet. +ve fold with car impact (as if pushed at hips by the impact normal).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = -7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.SnapFloor">
            <summary>
            Exaggeration amount of the impact with the floor after falling off of car +ve fold with floor impact (as if pushed at hips in the impact normal direction).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = 7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.DampVel">
            <summary>
            Damp out excessive spin and upward velocity when on car.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.DampSpin">
            <summary>
            Amount to damp spinning by (cartwheeling and somersaulting).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.DampUpVel">
            <summary>
            Amount to damp upward velocity by to limit the amount of air above the car the character can get.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.DampSpinThresh">
            <summary>
            Angular velocity above which we start damping.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.DampUpVelThresh">
            <summary>
            Upward velocity above which we start damping.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsHelp">
            <summary>
            Enhance a glancing spin with the side of the car by modulating body friction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsEndMin">
            <summary>
            ID for glancing spin. Min depth to be considered from either end (front/rear) of a car (-ve is inside the car area).
            </summary>
            <remarks>
            Default value = -0.1f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsSideMin">
            <summary>
            ID for glancing spin. Min depth to be considered on the side of a car (-ve is inside the car area).
            </summary>
            <remarks>
            Default value = -0.2f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsSideMax">
            <summary>
            ID for glancing spin. Max depth to be considered on the side of a car (+ve is outside the car area).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsUpness">
            <summary>
            ID for glancing spin. Character has to be more upright than this value for it to be considered on the side of a car. Fully upright = 1, upsideDown = -1.  Max Angle from upright is acos(gsUpness).
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsCarVelMin">
            <summary>
            ID for glancing spin. Minimum car velocity.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsScale1Foot">
            <summary>
            Apply gsFricScale1 to the foot if colliding with car.  (Otherwise foot friction - with the ground - is determined by gsFricScale2 if it is in gsFricMask2).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsFricScale1">
            <summary>
            Glancing spin help. Friction scale applied when to the side of the car.  e.g. make the character spin more by upping the friction against the car.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsFricMask1">
            <summary>
            Glancing spin help. Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation). Note gsFricMask1 and gsFricMask2 are made independent by the code so you can have fb for gsFricMask1 but gsFricScale1 will not be applied to any body parts in gsFricMask2.
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsFricScale2">
            <summary>
            Glancing spin help. Friction scale applied when to the side of the car.  e.g. make the character spin more by lowering the feet friction. You could also lower the wrist friction here to stop the car pulling along the hands i.e. gsFricMask2 = la|uw.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BraceForImpactHelper.GsFricMask2">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation). Note gsFricMask1 and gsFricMask2 are made independent by the code so you can have fb for gsFricMask1 but gsFricScale1 will not be applied to any body parts in gsFricMask2.
            </summary>
            <remarks>
            Default value = la.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.BuoyancyHelper">
            <summary>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.BuoyancyHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the BuoyancyHelper for sending a Buoyancy <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Buoyancy <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.SurfacePoint">
            <summary>
            Arbitrary point on surface of water.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.SurfaceNormal">
            <summary>
            Normal to surface of water.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.Buoyancy">
            <summary>
            Buoyancy multiplier.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.ChestBuoyancy">
            <summary>
            Buoyancy multiplier for spine2/3. Helps character float upright.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.Damping">
            <summary>
            Damping for submerged parts.
            </summary>
            <remarks>
            Default value = 40.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.Righting">
            <summary>
            Use righting torque to being character face-up in water?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.RightingStrength">
            <summary>
            Strength of righting torque.
            </summary>
            <remarks>
            Default value = 25.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.BuoyancyHelper.RightingTime">
            <summary>
            How long to wait after chest hits water to begin righting torque.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.CatchFallHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the CatchFallHelper for sending a CatchFall <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the CatchFall <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.TorsoStiffness">
            <summary>
            Stiffness of torso.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.LegsStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 6.0f.
            Min value = 4.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.ArmsStiffness">
            <summary>
            Stiffness of arms.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.BackwardsMinArmOffset">
            <summary>
            0 will prop arms up near his shoulders. -0.3 will place hands nearer his behind.
            </summary>
            <remarks>
            Default value = -0.3f.
            Min value = -1.0f.
            Max value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.ForwardMaxArmOffset">
            <summary>
            0 will point arms down with angled body, 0.45 will point arms forward a bit to catch nearer the head.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.ZAxisSpinReduction">
            <summary>
            Tries to reduce the spin around the Z axis. Scale 0 - 1.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.ExtraSit">
            <summary>
            Scale extra-sit value 0..1. Setting to 0 helps with arched-back issues.  Set to 1 for a more alive-looking finish.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.UseHeadLook">
            <summary>
            Toggle to use the head look in this behavior.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.CatchFallHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ElectrocuteHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ElectrocuteHelper for sending a Electrocute <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Electrocute <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.StunMag">
            <summary>
            The magnitude of the reaction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.InitialMult">
            <summary>
            InitialMult*stunMag = The magnitude of the 1st snap reaction (other multipliers are applied after this).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.LargeMult">
            <summary>
            LargeMult*stunMag = The magnitude of a random large snap reaction (other multipliers are applied after this).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.LargeMinTime">
            <summary>
            Min time to next large random snap (about 14 snaps with stunInterval = 0.07s).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.LargeMaxTime">
            <summary>
            Max time to next large random snap (about 28 snaps with stunInterval = 0.07s).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.MovingMult">
            <summary>
            MovingMult*stunMag = The magnitude of the reaction if moving(comVelMag) faster than movingThresh.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.BalancingMult">
            <summary>
            BalancingMult*stunMag = The magnitude of the reaction if balancing = (not lying on the floor/ not upper body not collided) and not airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.AirborneMult">
            <summary>
            AirborneMult*stunMag = The magnitude of the reaction if airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.MovingThresh">
            <summary>
            If moving(comVelMag) faster than movingThresh then mvingMult applied to stunMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.StunInterval">
            <summary>
            Direction flips every stunInterval.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.DirectionRandomness">
            <summary>
            The character vibrates in a prescribed way - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.LeftArm">
            <summary>
            Vibrate the leftArm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.RightArm">
            <summary>
            Vibrate the rightArm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.LeftLeg">
            <summary>
            Vibrate the leftLeg.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.RightLeg">
            <summary>
            Vibrate the rightLeg.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.Spine">
            <summary>
            Vibrate the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.Neck">
            <summary>
            Vibrate the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.PhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.ApplyStiffness">
            <summary>
            Let electrocute apply a (higher generally) stiffness to the character whilst being vibrated.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.UseTorques">
            <summary>
            Use torques to make vibration otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ElectrocuteHelper.HipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.FallOverWallHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the FallOverWallHelper for sending a FallOverWall <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the FallOverWall <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.BodyStiffness">
            <summary>
            Stiffness of the body, roll up stiffness scales with this and defaults at this default value.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.Damping">
            <summary>
            Damping in the effectors.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MagOfForce">
            <summary>
            Magnitude of the falloverWall helper force.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MaxDistanceFromPelToHitPoint">
            <summary>
            The maximum distance away from the pelvis that hit points will be registered.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MaxForceDist">
            <summary>
            Maximum distance between hitPoint and body part at which forces are applied to part.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.StepExclusionZone">
            <summary>
            Specifies extent of area in front of the wall in which balancer won't try to take another step.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MinLegHeight">
            <summary>
            Minimum height of pelvis above feet at which fallOverWall is attempted.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.BodyTwist">
            <summary>
            Amount of twist to apply to the spine as the character tries to fling himself over the wall, provides more of a believable roll but increases the amount of lateral space the character needs to successfully flip.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MaxTwist">
            <summary>
            Max angle the character can twist before twsit helper torques are turned off.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.FallOverWallEndA">
            <summary>
            One end of the wall to try to fall over.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.FallOverWallEndB">
            <summary>
            One end of the wall over which we are trying to fall over.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.ForceAngleAbort">
            <summary>
            The angle abort threshold.
            </summary>
            <remarks>
            Default value = -0.2f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.ForceTimeOut">
            <summary>
            The force time out.
            </summary>
            <remarks>
            Default value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MoveArms">
            <summary>
            Lift the arms up if true.  Do nothing with the arms if false (eg when using catchfall arms or brace etc).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MoveLegs">
            <summary>
            Move the legs if true.  Do nothing with the legs if false (eg when using dynamicBalancer etc).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.BendSpine">
            <summary>
            Bend spine to help falloverwall if true.  Do nothing with the spine if false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.AngleDirWithWallNormal">
            <summary>
            Maximum angle in degrees (between the direction of the velocity of the COM and the wall normal) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = 180.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.LeaningAngleThreshold">
            <summary>
            Maximum angle in degrees (between the vertical vector and a vector from pelvis to lower neck) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = 180.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MaxAngVel">
            <summary>
            If the angular velocity is higher than maxAngVel, the torques and forces are not applied.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -1.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.AdaptForcesToLowWall">
            <summary>
            Will reduce the magnitude of the forces applied to the character to help him to fall over wall.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MaxWallHeight">
            <summary>
            Maximum height (from the lowest foot) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.DistanceToSendSuccessMessage">
            <summary>
            Minimum distance between the pelvis and the wall to send the success message. If negative doesn't take this parameter into account when sending feedback.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.RollingBackThr">
            <summary>
            Value of the angular velocity about the wallEgde above which the character is considered as rolling backwards i.e. goes in to fow_RollingBack state.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.RollingPotential">
            <summary>
            On impact with the wall if the rollingPotential(calculated from the characters linear velocity w.r.t the wall) is greater than this value the character will try to go over the wall otherwise it won't try (fow_Aborted).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.UseArmIK">
            <summary>
            Try to reach the wallEdge. To configure the IK : use limitAngleBack, limitAngleFront and limitAngleTotallyBack.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.ReachDistanceFromHitPoint">
            <summary>
            Distance from predicted hitpoint where each hands will try to reach the wall.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.MinReachDistanceFromHitPoint">
            <summary>
            Minimal distance from predicted hitpoint where each hands will try to reach the wall. Used if the hand target is outside the wall Edge.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.FallOverWallHelper.AngleTotallyBack">
            <summary>
            Max angle in degrees (between 1.the vector between two hips and 2. WallEdge) to try to reach the wall just behind his pelvis with his arms when the character is back to the wall.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.GrabHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the GrabHelper for sending a Grab <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Grab <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.UseLeft">
            <summary>
            Flag to toggle use of left hand.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.UseRight">
            <summary>
            Flag to toggle the use of the Right hand.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.DropWeaponIfNecessary">
            <summary>
            If hasn't grabbed when weapon carrying hand is close to target, grab anyway.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.DropWeaponDistance">
            <summary>
            Distance below which a weapon carrying hand will request weapon to be dropped.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.GrabStrength">
            <summary>
            Strength in hands for grabbing (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.StickyHands">
            <summary>
            Strength of cheat force on hands to pull towards target and stick to target ("cleverHandIK" strength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.TurnToTarget">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.TurnType.ToTarget"/>.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.GrabHoldMaxTimer">
            <summary>
            Amount of time, in seconds, before grab automatically bails.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.PullUpTime">
            <summary>
            Time to reach the full pullup strength.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.PullUpStrengthRight">
            <summary>
            Strength to pull up with the right arm. 0 = no pull up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.PullUpStrengthLeft">
            <summary>
            Strength to pull up with the left arm. 0 = no pull up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.Pos1">
            <summary>
            Grab pos1, right hand if not using line or surface grab.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.Pos2">
            <summary>
            Grab pos2, left hand if not using line or surface grab.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.Pos3">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.Pos4">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.NormalR">
            <summary>
            Normal for the right grab point.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.NormalL">
            <summary>
            Normal for the left grab point.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.NormalR2">
            <summary>
            Normal for the 2nd right grab point (if pointsX4grab=true).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.NormalL2">
            <summary>
            Normal for the 3rd left grab point (if pointsX4grab=true).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.HandsCollide">
            <summary>
            Hand collisions on when grabbing (false turns off hand collisions making grab more stable esp. To grab points slightly inside geometry).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.JustBrace">
            <summary>
            Flag to toggle between grabbing and bracing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.UseLineGrab">
            <summary>
            Use the line grab, Grab along the line (x-x2).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.PointsX4grab">
            <summary>
            Use 2 point.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.FromEA">
            <summary>
            Use 2 point.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.SurfaceGrab">
            <summary>
            Toggle surface grab on. Requires pos1,pos2,pos3 and pos4 to be specified.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.InstanceIndex">
            <summary>
            LevelIndex of instance to grab (-1 = world coordinates).
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.InstancePartIndex">
            <summary>
            BoundIndex of part on instance to grab (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.DontLetGo">
            <summary>
            Once a constraint is made, keep reaching with whatever hand is allowed - no matter what the angle/distance and whether or not the constraint has broken due to constraintForce  GT  grabStrength.  mmmtodo this is a badly named parameter.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.BodyStiffness">
            <summary>
            Stiffness of upper body. Scales the arm grab such that the armStiffness is default when this is at default value.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.ReachAngle">
            <summary>
            Angle from front at which the grab activates. If the point is outside this angle from front will not try to grab.
            </summary>
            <remarks>
            Default value = 2.8f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.OneSideReachAngle">
            <summary>
            Angle at which we will only reach with one hand.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.GrabDistance">
            <summary>
            Relative distance at which the grab starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.Move2Radius">
            <summary>
            Relative distance (additional to grabDistance - doesn't try to move inside grabDistance)at which the grab tries to use the balancer to move to the grab point.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.ArmStiffness">
            <summary>
            Stiffness of the arm.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.MaxReachDistance">
            <summary>
            Distance to reach out towards the grab point.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.OrientationConstraintScale">
            <summary>
            Scale torque used to rotate hands to face normals.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.MaxWristAngle">
            <summary>
            When we are grabbing the max angle the wrist ccan be at before we break the grab.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 3.2f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.UseHeadLookToTarget">
            <summary>
            If true, the character will look at targetForHeadLook after a hand grabs until the end of the behavior. (Before grabbing it looks at the grab target).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.LookAtGrab">
            <summary>
            If true, the character will look at the grab.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.GrabHelper.TargetForHeadLook">
            <summary>
            Only used if useHeadLookToTarget is true, the target in world space to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HeadLookHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HeadLookHelper for sending a HeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.Damping">
            <summary>
            Damping of the muscles.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.Stiffness">
            <summary>
            Stiffness of the muscles.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.InstanceIndex">
            <summary>
            LevelIndex of object to be looked at. Vel parameters are ignored if this is non -1.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.Vel">
            <summary>
            The velocity of the point being looked at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.Pos">
            <summary>
            The point being looked at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.AlwaysLook">
            <summary>
            Flag to force always to look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.EyesHorizontal">
            <summary>
            Keep the eyes horizontal.  Use true for impact with cars.  Use false if you want better look at target accuracy when the character is on the floor or leaned over alot.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.AlwaysEyesHorizontal">
            <summary>
            Keep the eyes horizontal.  Use true for impact with cars.  Use false if you want better look at target accuracy when the character is on the floor or leaned over (when not leaned over the eyes are still kept horizontal if eyesHorizontal=true ) alot.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.KeepHeadAwayFromGround">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HeadLookHelper.TwistSpine">
            <summary>
            Allow head look to twist spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.HighFallHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the HighFallHelper for sending a HighFall <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the HighFall <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.BodyStiffness">
            <summary>
            Stiffness of body. Value feeds through to bodyBalance (synced with defaults), to armsWindmill (14 for this value at default ), legs pedal, head look and roll down stairs directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Bodydamping">
            <summary>
            The damping of the joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Catchfalltime">
            <summary>
            The length of time before the impact that the character transitions to the landing.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.CrashOrLandCutOff">
            <summary>
            0.52angle is 0.868 dot//A threshold for deciding how far away from upright the character needs to be before bailing out (going into a foetal) instead of trying to land (keeping stretched out).  NB: never does bailout if ignorWorldCollisions true.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.PdStrength">
            <summary>
            Strength of the controller to keep the character at angle aimAngleBase from vertical.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.PdDamping">
            <summary>
            Damping multiplier of the controller to keep the character at angle aimAngleBase from vertical.  The actual damping is pdDamping*pdStrength*constant*angVel.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.ArmAngSpeed">
            <summary>
            Arm circling speed in armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.ArmAmplitude">
            <summary>
            In armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.ArmPhase">
            <summary>
            In armWindMillAdaptive 3.1 opposite for stuntman.
            1.0 old default. 0.0 in phase.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.ArmBendElbows">
            <summary>
            In armWindMillAdaptive bend the elbows as a function of armAngle.
            For stunt man true otherwise false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LegRadius">
            <summary>
            Radius of legs on pedal.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LegAngSpeed">
            <summary>
            In pedal.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LegAsymmetry">
            <summary>
            0.0 for stuntman.  Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Arms2LegsPhase">
            <summary>
            Phase angle between the arms and legs circling angle.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 6.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Arms2LegsSync">
            <summary>
            Syncs the arms angle to what the leg angle is.
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            All speed/direction parameters of armswindmill are overwritten if = <see cref="F:RDR2.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            If <see cref="F:RDR2.NaturalMotion.Synchroisation.SyncedAtStart"/> and you want synced arms/legs then armAngSpeed=legAngSpeed, legAsymmetry = 0.0 (to stop randomizations of the leg cicle speed).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.ArmsUp">
            <summary>
            Where to put the arms when preparing to land.
            Approx 1 = above head, 0 = head height, -1 = down.
            LT -2.0 use catchFall arms, LT -3.0 use prepare for landing pose if Agent is due to land vertically, feet first.
            </summary>
            <remarks>
            Default value = -3.1f.
            Min value = -4.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.OrientateBodyToFallDirection">
            <summary>
            Toggle to orientate to fall direction.
            i.e. orientate so that the character faces the horizontal velocity direction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.OrientateTwist">
            <summary>
            If false don't worry about the twist angle of the character when orientating the character.
            If false this allows the twist axis of the character to be free (You can get a nice twisting highFall like the one in dieHard 4 when the car goes into the helicopter).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.OrientateMax">
            <summary>
            DEVEL parameter - suggest you don't edit it.
            Maximum torque the orientation controller can apply.
            If 0 then no helper torques will be used.
            300 will orientate the character softly for all but extreme angles away from aimAngleBase.
            If abs (current -aimAngleBase) is getting near 3.0 then this can be reduced to give a softer feel.
            </summary>
            <remarks>
            Default value = 300.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.AlanRickman">
            <summary>
            If true then orientate the character to face the point from where it started falling.
            High fall like the one in "Die Hard" with Alan Rickman.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.FowardRoll">
            <summary>
            Try to execute a forward Roll on landing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.UseZeroPose_withFowardRoll">
            <summary>
            Blend to a zero pose when forward roll is attempted.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.AimAngleBase">
            <summary>
            Angle from vertical the pdController is driving to (positive = forwards).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.FowardVelRotation">
            <summary>
            Scale to add/subtract from aimAngle based on forward speed (Internal).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.FootVelCompScale">
            <summary>
            Scale to change to amount of vel that is added to the foot ik from the velocity (Internal).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.SideD">
            <summary>
            Side offset for the feet during prepareForLanding. +ve = right.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.FowardOffsetOfLegIK">
            <summary>
            Forward offset for the feet during prepareForLanding.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LegL">
            <summary>
            Leg Length for ik (Internal)//unused.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.CatchFallCutOff">
            <summary>
            0.5angle is 0.878 dot. Cutoff to go to the catchFall ( internal) //mmmtodo do like crashOrLandCutOff.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LegStrength">
            <summary>
            Strength of the legs at landing.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Balance">
            <summary>
            If true have enough strength to balance.  If false not enough strength in legs to balance (even though bodyBlance called).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.IgnorWorldCollisions">
            <summary>
            Never go into bailout (foetal).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.AdaptiveCircling">
            <summary>
            Stunt man type fall.
            Arm and legs circling direction controlled by angmom and orientation.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.Hula">
            <summary>
            With stunt man type fall.
            Hula reaction if can't see floor and not rotating fast.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.MaxSpeedForRecoverableFall">
            <summary>
            Character needs to be moving less than this speed to consider fall as a recoverable one.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.MinSpeedForBrace">
            <summary>
            Character needs to be moving at least this fast horizontally to start bracing for impact if there is an object along its trajectory.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.HighFallHelper.LandingNormal">
            <summary>
            Ray-cast normal doted with up direction has to be greater than this number to consider object flat enough to land on it.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.IncomingTransformsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the IncomingTransformsHelper for sending a IncomingTransforms <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the IncomingTransforms <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="T:RDR2.NaturalMotion.InjuredOnGroundHelper">
            <summary>
            InjuredOnGround.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.InjuredOnGroundHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the InjuredOnGroundHelper for sending a InjuredOnGround <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the InjuredOnGround <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            InjuredOnGround.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.NumInjuries">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury1Component">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury2Component">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury1LocalPosition">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury2LocalPosition">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury1LocalNormal">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.Injury2LocalNormal">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.AttackerPos">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.DontReachWithLeft">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.DontReachWithRight">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.InjuredOnGroundHelper.StrongRollForce">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.CarriedHelper">
            <summary>
            Carried.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.CarriedHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the CarriedHelper for sending a Carried <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Carried <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Carried.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.DangleHelper">
            <summary>
            Dangle.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.DangleHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the DangleHelper for sending a Dangle <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Dangle <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Dangle.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.DangleHelper.DoGrab">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.DangleHelper.GrabFrequency">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.OnFireHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the OnFireHelper for sending a OnFire <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the OnFire <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.StaggerTime">
            <summary>
            Max time for stumbling around before falling to ground.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.StaggerLeanRate">
            <summary>
            How quickly the character leans hips when staggering.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.StumbleMaxLeanBack">
            <summary>
            Max the character leans hips back when staggering.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.StumbleMaxLeanForward">
            <summary>
            Max the character leans hips forwards when staggering.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.ArmsWindmillWritheBlend">
            <summary>
            Blend armsWindmill with the bodyWrithe arms when character is upright.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.SpineStumbleWritheBlend">
            <summary>
            Blend spine stumble with the bodyWrithe spine when character is upright.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.LegsStumbleWritheBlend">
            <summary>
            Blend legs stumble with the bodyWrithe legs when character is upright.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.ArmsPoseWritheBlend">
            <summary>
            Blend the bodyWrithe arms with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.SpinePoseWritheBlend">
            <summary>
            Blend the bodyWrithe back with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.LegsPoseWritheBlend">
            <summary>
            Blend the bodyWrithe legs with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.RollOverFlag">
            <summary>
            Flag to set bodyWrithe trying to rollOver.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.RollTorqueScale">
            <summary>
            Scale rolling torque that is applied to character spine by bodyWrithe. Torque magnitude is calculated with the following formula: m_rollOverDirection*rollOverPhase*rollTorqueScale.
            </summary>
            <remarks>
            Default value = 25.0f.
            Min value = 0.0f.
            Max value = 300.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.PredictTime">
            <summary>
            Character pose depends on character facing direction that is evaluated from its COMTM orientation.
            Set this value to 0 to use no orientation prediction i.e. current character COMTM orientation will be used to determine character facing direction and finally the pose bodyWrithe is blending to.
            Set this value to  GT  0 to predict character COMTM orientation this amount of time in seconds to the future.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.MaxRollOverTime">
            <summary>
            Rolling torque is ramped down over time. At this time in seconds torque value converges to zero. Use this parameter to restrict time the character is rolling.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.OnFireHelper.RollOverRadius">
            <summary>
            Rolling torque is ramped down with distance measured from position where character hit the ground and started rolling. At this distance in meters torque value converges to zero. Use this parameter to restrict distance the character travels due to rolling.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.PedalLegsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the PedalLegsHelper for sending a PedalLegs <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the PedalLegs <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.PedalLeftLeg">
            <summary>
            Pedal with this leg or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.PedalRightLeg">
            <summary>
            Pedal with this leg or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.BackPedal">
            <summary>
            Pedal forwards or backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.Radius">
            <summary>
            Base radius of pedal action.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.AngularSpeed">
            <summary>
            Rate of pedaling. If adaptivePedal4Dragging is true then the legsAngularSpeed calculated to match the linear speed of the character can have a maximum value of angularSpeed (this max used to be hard coded to 13.0).
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.LegStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.PedalOffset">
            <summary>
            Move the center of the pedal for the left leg up by this amount, the right leg down by this amount.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.RandomSeed">
            <summary>
            Random seed used to generate speed changes.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.SpeedAsymmetry">
            <summary>
            Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.AdaptivePedal4Dragging">
            <summary>
            Will pedal in the direction of travel (if backPedal = false, against travel if backPedal = true) and with an angular velocity relative to speed upto a maximum of 13(rads/sec).  Use when being dragged by a car.  Overrides angularSpeed.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.AngSpeedMultiplier4Dragging">
            <summary>
            NewAngularSpeed = Clamp(angSpeedMultiplier4Dragging * linear_speed/pedalRadius, 0.0, angularSpeed).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.RadiusVariance">
            <summary>
            0-1 value used to add variance to the radius value while pedalling, to desynchonize the legs' movement and provide some variety.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.LegAngleVariance">
            <summary>
            0-1 value used to vary the angle of the legs from the hips during the pedal.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.CentreSideways">
            <summary>
            Move the center of the pedal for both legs sideways (+ve = right).  NB: not applied to hula.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.CentreForwards">
            <summary>
            Move the center of the pedal for both legs forward (or backward -ve).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.CentreUp">
            <summary>
            Move the center of the pedal for both legs up (or down -ve).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.Ellipse">
            <summary>
            Turn the circle into an ellipse.  Ellipse has horizontal radius a and vertical radius b.  If ellipse is +ve then a=radius*ellipse and b=radius.  If ellipse is -ve then a=radius and b = radius*ellipse.  0.0 = vertical line of length 2*radius, 0.0:1.0 circle squashed horizontally (vertical radius = radius), 1.0=circle.  -0.001 = horizontal line of length 2*radius, -0.0:-1.0 circle squashed vertically (horizontal radius = radius), -1.0 = circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.DragReduction">
            <summary>
            How much to account for the target moving through space rather than being static.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.Spread">
            <summary>
            Spread legs.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PedalLegsHelper.Hula">
            <summary>
            If true circle the legs in a hula motion.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.PointArmHelper">
            <summary>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to override body parts: Arms (useLeftArm, useRightArm).
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.PointArmHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the PointArmHelper for sending a PointArm <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the PointArm <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to override body parts: Arms (useLeftArm, useRightArm).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.TargetLeft">
            <summary>
            Point to point to (in world space).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.TwistLeft">
            <summary>
            Twist of the arm around point direction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmStraightnessLeft">
            <summary>
            Values less than 1 can give the arm a more bent look.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.UseLeftArm">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmStiffnessLeft">
            <summary>
            Stiffness of arm.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmDampingLeft">
            <summary>
            Damping value for arm used to point.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.InstanceIndexLeft">
            <summary>
            Level index of thing to point at, or -1 for none. if -1, target is specified in world space, otherwise it is an offset from the object specified by this index.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.PointSwingLimitLeft">
            <summary>
            Swing limit.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.UseZeroPoseWhenNotPointingLeft">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.TargetRight">
            <summary>
            Point to point to (in world space).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.TwistRight">
            <summary>
            Twist of the arm around point direction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmStraightnessRight">
            <summary>
            Values less than 1 can give the arm a more bent look.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.UseRightArm">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmStiffnessRight">
            <summary>
            Stiffness of arm.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.ArmDampingRight">
            <summary>
            Damping value for arm used to point.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.InstanceIndexRight">
            <summary>
            Level index of thing to point at, or -1 for none. if -1, target is specified in world space, otherwise it is an offset from the object specified by this index.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.PointSwingLimitRight">
            <summary>
            Swing limit.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointArmHelper.UseZeroPoseWhenNotPointingRight">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.PointGunHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the PointGunHelper for sending a PointGun <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the PointGun <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.EnableRight">
            <summary>
            Allow right hand to point/support?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.EnableLeft">
            <summary>
            Allow right hand to point/support?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.LeftHandTarget">
            <summary>
            Target for the left Hand.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.LeftHandTargetIndex">
            <summary>
            Index of the object that the left hand target is specified in, -1 is world space.
            </summary>
            <remarks>
            Default value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RightHandTarget">
            <summary>
            Target for the right Hand.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RightHandTargetIndex">
            <summary>
            Index of the object that the right hand target is specified in, -1 is world space.
            </summary>
            <remarks>
            Default value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.LeadTarget">
            <summary>
            NB: Only Applied to single handed weapons (some more work is required to have this tech on two handed weapons). Amount to lead target based on target velocity relative to the chest.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ArmStiffness">
            <summary>
            Stiffness of the arm.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 2.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ArmStiffnessDetSupport">
            <summary>
            Stiffness of the arm on pointing arm when a support arm is detached from a two-handed weapon.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 2.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ArmDamping">
            <summary>
            Damping.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.GravityOpposition">
            <summary>
            Amount of gravity opposition on pointing arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.GravOppDetachedSupport">
            <summary>
            Amount of gravity opposition on pointing arm when a support arm is detached from a two-handed weapon.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.MassMultDetachedSupport">
            <summary>
            Amount of mass of weapon taken into account by gravity opposition on pointing arm when a support arm is detached from a two-handed weapon.  The lower the value the more the character doesn't know about the weapon mass and therefore is more affected by it.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.AllowShotLooseness">
            <summary>
            Allow shot to set a lower arm muscleStiffness than pointGun normally would.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ClavicleBlend">
            <summary>
            How much of blend should come from incoming transforms 0(all IK) .. 1(all ITMs)   For pointing arms only.  (Support arm uses the IK solution as is for clavicles).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ElbowAttitude">
            <summary>
            Controls arm twist. (except in pistolIK).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.SupportConstraint">
            <summary>
            Type of constraint between the support hand and gun.  0=no constraint, 1=hard distance constraint, 2=Force based constraint, 3=hard spherical constraint.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ConstraintMinDistance">
            <summary>
            For supportConstraint = 1: Support hand constraint distance will be slowly reduced until it hits this value.  This is for stability and also allows the pointing arm to lead a little.  Don't set lower than NM_MIN_STABLE_DISTANCECONSTRAINT_DISTANCE 0.001f.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 0.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.MakeConstraintDistance">
            <summary>
            For supportConstraint = 1:  Minimum distance within which support hand constraint will be made.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ReduceConstraintLengthVel">
            <summary>
            For supportConstraint = 1:  Velocity at which to reduce the support hand constraint length.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.BreakingStrength">
            <summary>
            For supportConstraint = 1: strength of the supporting hands constraint (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.BrokenSupportTime">
            <summary>
            Once constraint is broken then do not try to reconnect/support for this amount of time.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.BrokenToSideProb">
            <summary>
            Probability that the when a constraint is broken that during brokenSupportTime a side pose will be selected.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ConnectAfter">
            <summary>
            If gunArm has been controlled by other behaviors for this time when it could have been pointing but couldn't due to pointing only allowed if connected, change gunArm pose to something that could connect for connectFor seconds.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ConnectFor">
            <summary>
            Time to try to reconnect for.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.OneHandedPointing">
            <summary>
            0 = don't allow, 1= allow for kPistol(two handed pistol) only, 2 = allow for kRifle only, 3 = allow for kPistol and kRifle. Allow one handed pointing - no constraint if cant be supported .  If not allowed then gunHand does not try to point at target if it cannot be supported - the constraint will be controlled by always support.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.AlwaysSupport">
            <summary>
            Support a non pointing gunHand i.e. if in zero pose (constrain as well  if constraint possible).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.PoseUnusedGunArm">
            <summary>
            Apply neutral pose when a gun arm isn't in use.  NB: at the moment Rifle hand is always controlled by pointGun.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.PoseUnusedSupportArm">
            <summary>
            Apply neutral pose when a support arm isn't in use.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.PoseUnusedOtherArm">
            <summary>
            Apply neutral pose to the non-gun arm (otherwise it is always under the control of other behaviors or not set). If the non-gun hand is a supporting hand it is not controlled by this parameter but by poseUnusedSupportArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.MaxAngleAcross">
            <summary>
            Max aiming angle(deg) sideways across body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.MaxAngleAway">
            <summary>
            Max aiming angle(deg) sideways away from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FallingLimits">
            <summary>
            0= don't apply limits.  1=apply the limits below only when the character is falling.  2 =  always apply these limits (instead of applying maxAngleAcross and maxAngleAway which only limits the horizontal angle but implicity limits the updown (the limit shape is a vertical hinge).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.AcrossLimit">
            <summary>
            Max aiming angle(deg) sideways across body midline measured from chest forward that the character will try to point.  i.e. for rightHanded gun this is the angle left of the midline.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.AwayLimit">
            <summary>
            Max aiming angle(deg) sideways away from body midline measured from chest forward that the character will try to point.  i.e. for rightHanded gun this is the angle right of the midline.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UpLimit">
            <summary>
            Max aiming angle(deg) upwards from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.DownLimit">
            <summary>
            Max aiming angle(deg) downwards from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 45.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RifleFall">
            <summary>
            Pose the rifle hand to reduce complications with collisions. 0 = false, 1 = always when falling, 2 = when falling except if falling backwards.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FallingSupport">
            <summary>
            Allow supporting of a rifle(or two handed pistol) when falling. 0 = false, 1 = support if allowed, 2 = support until constraint not active (don't allow support to restart), 3 = support until constraint not effective (support hand to support distance must be less than 0.15 - don't allow support to restart).
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FallingTypeSupport">
            <summary>
            What is considered a fall by fallingSupport). Apply fallingSupport 0=never(will support if allowed), 1 = falling, 2 = falling except if falling backwards, 3 = falling and collided, 4 = falling and collided except if falling backwards, 5 = falling except if falling backwards until collided.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 5.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.PistolNeutralType">
            <summary>
            0 = byFace, 1=acrossFront, 2=bySide.  NB: bySide is not connectible so be careful if combined with kPistol and oneHandedPointing = 0 or 2.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.NeutralPoint4Pistols">
            <summary>
            NOT IMPLEMENTED YET KEEP=false - use pointing for neutral targets in pistol modes.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.NeutralPoint4Rifle">
            <summary>
            Use pointing for neutral targets in rifle mode.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.CheckNeutralPoint">
            <summary>
            Check the neutral pointing is pointable, if it isn't then choose a neutral pose instead.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.Point2Side">
            <summary>
            Side, up, back) side is left for left arm, right for right arm mmmmtodo.
            </summary>
            <remarks>
            Default value = Vector3(5.0f, -5.0f, -2.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.Add2WeaponDistSide">
            <summary>
            Add to weaponDistance for point2Side neutral pointing (to straighten the arm).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.Point2Connect">
            <summary>
            Side, up, back) side is left for left arm, right for rght arm mmmmtodo.
            </summary>
            <remarks>
            Default value = Vector3(-1.0f, -0.9f, -0.2f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.Add2WeaponDistConnect">
            <summary>
            Add to weaponDistance for point2Connect neutral pointing (to straighten the arm).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UsePistolIK">
            <summary>
            Enable new ik for pistol pointing.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UseSpineTwist">
            <summary>
            Use spine twist to orient chest?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UseTurnToTarget">
            <summary>
            Turn balancer to help gun point at target.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UseHeadLook">
            <summary>
            Use head look to drive head?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ErrorThreshold">
            <summary>
            Angular difference between pointing direction and target direction above which feedback will be generated.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FireWeaponRelaxTime">
            <summary>
            Duration of arms relax following firing weapon.  NB:This is clamped (0,5) in pointGun.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FireWeaponRelaxAmount">
            <summary>
            Relax multiplier following firing weapon. Recovers over relaxTime.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.FireWeaponRelaxDistance">
            <summary>
            Range of motion for ik-based recoil.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.UseIncomingTransforms">
            <summary>
            Use the incoming transforms to inform the pointGun of the primaryWeaponDistance, poleVector for the arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.MeasureParentOffset">
            <summary>
            If useIncomingTransforms = true and measureParentOffset=true then measure the Pointing-from offset from parent effector, using itms - this should point the barrel of the gun to the target.  This is added to the rightHandParentOffset. NB NOT used if rightHandParentEffector LT 0.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.LeftHandParentOffset">
            <summary>
            Pointing-from offset from parent effector, expressed in spine3's frame, x = back/forward, y = right/left, z = up/down.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.LeftHandParentEffector">
            <summary>
            1 = Use leftShoulder. Effector from which the left hand pointing originates. Ie, point from this part to the target. -1 causes default offset for active weapon mode to be applied.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RightHandParentOffset">
            <summary>
            Pointing-from offset from parent effector, expressed in spine3's frame, x = back/forward, y = right/left, z = up/down. This is added to the measured one if useIncomingTransforms=true and measureParentOffset=true.  NB NOT used if rightHandParentEffector LT 0.  Pistol(0,0,0) Rifle(0.0032, 0.0, -0.0).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RightHandParentEffector">
            <summary>
            1 = Use rightShoulder.. Effector from which the right hand pointing originates. Ie, point from this part to the target. -1 causes default offset for active weapon mode to be applied.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.PrimaryHandWeaponDistance">
            <summary>
            Distance from the shoulder to hold the weapon. If -1 and useIncomingTransforms then weaponDistance is read from ITMs. WeaponDistance=primaryHandWeaponDistance clamped [0.2f:m_maxArmReach=0.65] if useIncomingTransforms = false. pistol 0.60383, rifle 0.336.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.ConstrainRifle">
            <summary>
            Use hard constraint to keep rifle stock against shoulder?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.RifleConstraintMinDistance">
            <summary>
            Rifle constraint distance. Deliberately kept large to create a flat constraint surface where rifle meets the shoulder.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.DisableArmCollisions">
            <summary>
            Disable collisions between right hand/forearm and the torso/legs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunHelper.DisableRifleCollisions">
            <summary>
            Disable collisions between right hand/forearm and spine3/spine2 if in rifle mode.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.PointGunExtraHelper">
            <summary>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.PointGunExtraHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the PointGunExtraHelper for sending a PointGunExtra <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the PointGunExtra <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.ConstraintStrength">
            <summary>
            For supportConstraint = 2: force constraint strength of the supporting hands - it gets shaky at about 4.0.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.ConstraintThresh">
            <summary>
            For supportConstraint = 2:  Like makeConstraintDistance. Force starts acting when the hands are  LT  3.0*thresh apart but is maximum strength  LT  thresh. For comparison: 0.1 is used for reachForWound in shot, 0.25 is used in grab.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.WeaponMask">
            <summary>
            Currently unused - no intoWorldTest. RAGE bit mask to exclude weapons from ray probe - currently defaults to MP3 weapon flag.
            </summary>
            <remarks>
            Default value = 1024.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.TimeWarpActive">
            <summary>
            Is timeWarpActive enabled?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.TimeWarpStrengthScale">
            <summary>
            Scale for arm and helper strength when timewarp is enabled. 1 = normal compensation.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.OriStiff">
            <summary>
            Hand stabilization controller stiffness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.OriDamp">
            <summary>
            Hand stabilization controller damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.PosStiff">
            <summary>
            Hand stabilization controller stiffness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.PointGunExtraHelper.PosDamp">
            <summary>
            Hand stabilization controller damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.RollDownStairsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the RollDownStairsHelper for sending a RollDownStairs <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the RollDownStairs <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.Stiffness">
            <summary>
            Effector Stiffness. Value feeds through to rollUp directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.Damping">
            <summary>
            Effector  Damping.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.Forcemag">
            <summary>
            Helper force strength.  Do not go above 1 for a rollDownStairs/roll along ground reaction.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.M_useArmToSlowDown">
            <summary>
            The degree to which the character will try to stop a barrel roll with his arms.
            </summary>
            <remarks>
            Default value = -1.9f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.UseZeroPose">
            <summary>
            Blends between a zeroPose and the Rollup, Faster the character is rotating the less the zeroPose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.SpinWhenInAir">
            <summary>
            Applied cheat forces to spin the character when in the air, the forces are 40% of the forces applied when touching the ground.  Be careful little bunny rabbits, the character could spin unnaturally in the air.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.M_armReachAmount">
            <summary>
            How much the character reaches with his arms to brace against the ground.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.M_legPush">
            <summary>
            Amount that the legs push outwards when tumbling.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.TryToAvoidHeadButtingGround">
            <summary>
            Blends between a zeroPose and the Rollup, Faster the character is rotating the less the zeroPose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ArmReachLength">
            <summary>
            The length that the arm reaches and so how much it straightens.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.CustomRollDir">
            <summary>
            Pass in a custom direction in to have the character try and roll in that direction.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.UseCustomRollDir">
            <summary>
            Pass in true to use the customRollDir parameter.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.StiffnessDecayTarget">
            <summary>
            The target linear velocity used to start the rolling.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.StiffnessDecayTime">
            <summary>
            Time, in seconds, to decay stiffness down to the stiffnessDecayTarget value (or -1 to disable).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.AsymmetricalLegs">
            <summary>
            0 is no leg asymmetry in 'foetal' position.  greater than 0 a asymmetricalLegs-rand(30%), added/minus each joint of the legs in radians.  Random number changes about once every roll.  0.4 gives a lot of asymmetry.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ZAxisSpinReduction">
            <summary>
            Tries to reduce the spin around the z axis. Scale 0 - 1.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.TargetLinearVelocityDecayTime">
            <summary>
            Time for the targetlinearVelocity to decay to zero.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.TargetLinearVelocity">
            <summary>
            Helper torques are applied to match the spin of the character to the max of targetLinearVelocity and COMVelMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.OnlyApplyHelperForces">
            <summary>
            Don't use rollup if true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.UseVelocityOfObjectBelow">
            <summary>
            Scale applied cheat forces/torques to (zero) if object underneath character has velocity greater than 1.f.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.UseRelativeVelocity">
            <summary>
            UseVelocityOfObjectBelow uses a relative velocity of the character to the object underneath.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ApplyFoetalToLegs">
            <summary>
            If true, use rollup for upper body and a kind of foetal behavior for legs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MovementLegsInFoetalPosition">
            <summary>
            Only used if applyFoetalToLegs = true : define the variation of angles for the joints of the legs.
            </summary>
            <remarks>
            Default value = 1.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MaxAngVelAroundFrontwardAxis">
            <summary>
            Only used if applyNewRollingCheatingTorques or applyHelPerTorqueToAlign defined to true : maximal angular velocity around frontward axis of the pelvis to apply cheating torques.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MinAngVel">
            <summary>
            Only used if applyNewRollingCheatingTorques or applyHelPerTorqueToAlign defined to true : minimal angular velocity of the roll to apply cheating torques.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ApplyNewRollingCheatingTorques">
            <summary>
            If true will use the new way to apply cheating torques (like in fallOverWall), otherwise will use the old way.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MaxAngVel">
            <summary>
            Only used if applyNewRollingCheatingTorques defined to true : maximal angular velocity of the roll to apply cheating torque.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MagOfTorqueToRoll">
            <summary>
            Only used if applyNewRollingCheatingTorques defined to true : magnitude of the torque to roll down the stairs.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 500.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ApplyHelPerTorqueToAlign">
            <summary>
            Apply torque to align the body orthogonally to the direction of the roll.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.DelayToAlignBody">
            <summary>
            Only used if applyHelPerTorqueToAlign defined to true : delay to start to apply torques.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.MagOfTorqueToAlign">
            <summary>
            Only used if applyHelPerTorqueToAlign defined to true : magnitude of the torque to align orthogonally the body.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 500.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.AirborneReduction">
            <summary>
            Ordinarily keep at 0.85.  Make this lower if you want spinning in the air.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.ApplyMinMaxFriction">
            <summary>
            Pass-through to Roll Up. Controls whether or not behavior enforces min/max friction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.RollDownStairsHelper.LimitSpinReduction">
            <summary>
            Scale zAxisSpinReduction back when rotating end-over-end (somersault) to give the body a chance to align with the axis of rotation.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotHelper for sending a Shot <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Shot <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.BodyStiffness">
            <summary>
            Stiffness of body. Feeds through to roll_up.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.SpineDamping">
            <summary>
            Stiffness of body. Feeds through to roll_up.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ArmStiffness">
            <summary>
            Arm stiffness.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialNeckStiffness">
            <summary>
            Initial stiffness of neck after being shot.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 3.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialNeckDamping">
            <summary>
            Intial damping of neck after being shot.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.NeckStiffness">
            <summary>
            Stiffness of neck.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 3.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.NeckDamping">
            <summary>
            Damping of neck.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.KMultOnLoose">
            <summary>
            How much to add to upperbody stiffness dependent on looseness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.KMult4Legs">
            <summary>
            How much to add to leg stiffnesses dependent on looseness.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.LoosenessAmount">
            <summary>
            How loose the character is made by a newBullet. Between 0 and 1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.Looseness4Fall">
            <summary>
            How loose the character is made by a newBullet if falling.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.Looseness4Stagger">
            <summary>
            How loose the upperBody of the character is made by a newBullet if staggerFall is running (and not falling).  Note atm the neck ramp values are ignored in staggerFall.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.MinArmsLooseness">
            <summary>
            Minimum looseness to apply to the arms.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.MinLegsLooseness">
            <summary>
            Minimum looseness to apply to the Legs.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.GrabHoldTime">
            <summary>
            How long to hold for before returning to relaxed arm position.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.SpineBlendExagCPain">
            <summary>
            True: spine is blended with zero pose, false: spine is blended with zero pose if not setting exag or cpain.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.SpineBlendZero">
            <summary>
            Spine is always blended with zero pose this much and up to 1 as the character become stationary.  If negative no blend is ever applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.BulletProofVest">
            <summary>
            Looseness applied to spine is different if bulletProofVest is true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AlwaysResetLooseness">
            <summary>
            Looseness always reset on shotNewBullet even if previous looseness ramp still running.  Except for the neck which has it's own ramp.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AlwaysResetNeckLooseness">
            <summary>
            Neck looseness always reset on shotNewBullet even if previous looseness ramp still running.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AngVelScale">
            <summary>
            How much to scale the angular velocity coming in from animation of a part if it is in angVelScaleMask (otherwise scale by 1.0).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AngVelScaleMask">
            <summary>
            Parts to scale the initial angular velocity by angVelScale (otherwize scale by 1.0).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.FlingWidth">
            <summary>
            Width of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.FlingTime">
            <summary>
            Duration of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.TimeBeforeReachForWound">
            <summary>
            Time, in seconds, before the character begins to grab for the wound on the first hit.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ExagDuration">
            <summary>
            Exaggerate bullet duration (at exagMag/exagTwistMag).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ExagMag">
            <summary>
            Exaggerate bullet spine Lean magnitude.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ExagTwistMag">
            <summary>
            Exaggerate bullet spine Twist magnitude.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ExagSmooth2Zero">
            <summary>
            Exaggerate bullet duration ramping to zero after exagDuration.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ExagZeroTime">
            <summary>
            Exaggerate bullet time spent at 0 spine lean/twist after exagDuration + exagSmooth2Zero.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CpainSmooth2Time">
            <summary>
            Conscious pain duration ramping from zero to cpainMag/cpainTwistMag.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CpainDuration">
            <summary>
            Conscious pain duration at cpainMag/cpainTwistMag after cpainSmooth2Time.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CpainMag">
            <summary>
            Conscious pain spine Lean(back/Forward) magnitude (Replaces spinePainMultiplier).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CpainTwistMag">
            <summary>
            Conscious pain spine Twist/Lean2Side magnitude Replaces spinePainTwistMultiplier).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CpainSmooth2Zero">
            <summary>
            Conscious pain ramping to zero after cpainSmooth2Time + cpainDuration (Replaces spinePainTime).
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.Crouching">
            <summary>
            Is the guy crouching or not.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ChickenArms">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.ReachForWound">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.Fling">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AllowInjuredArm">
            <summary>
            Injured arm code runs if arm hit (turns and steps and bends injured arm).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AllowInjuredLeg">
            <summary>
            When false injured leg is not bent and character does not bend to reach it.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AllowInjuredLowerLegReach">
            <summary>
            When false don't try to reach for injured Lower Legs (shins/feet).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.AllowInjuredThighReach">
            <summary>
            When false don't try to reach for injured Thighs.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.StableHandsAndNeck">
            <summary>
            Additional stability for hands and neck (less loose).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.Melee">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.FallingReaction">
            <summary>
            0=Rollup, 1=Catchfall, 2=rollDownStairs, 3=smartFall.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.UseExtendedCatchFall">
            <summary>
            Keep the character active instead of relaxing at the end of the catch fall.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialWeaknessZeroDuration">
            <summary>
            Duration for which the character's upper body stays at minimum stiffness (not quite zero).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialWeaknessRampDuration">
            <summary>
            Duration of the ramp to bring the character's upper body stiffness back to normal levels.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialNeckDuration">
            <summary>
            Duration for which the neck stays at intial stiffness/damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.InitialNeckRampDuration">
            <summary>
            Duration of the ramp to bring the neck stiffness/damping back to normal levels.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.UseCStrModulation">
            <summary>
            If enabled upper and lower body strength scales with character strength, using the range given by parameters below.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CStrUpperMin">
            <summary>
            Proportions to what the strength would be normally.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CStrUpperMax">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CStrLowerMin">
            <summary>
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.CStrLowerMax">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHelper.DeathTime">
            <summary>
            Time to death (HACK for underwater). If -ve don't ever die.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotNewBulletHelper">
            <summary>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotNewBulletHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotNewBulletHelper for sending a ShotNewBullet <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotNewBullet <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotNewBulletHelper.BodyPart">
            <summary>
            Part ID on the body where the bullet hit.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotNewBulletHelper.LocalHitPointInfo">
            <summary>
            If true then normal and hitPoint should be supplied in local coordinates of bodyPart.  If false then normal and hitPoint should be supplied in World coordinates.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotNewBulletHelper.Normal">
            <summary>
            Normal coming out of impact point on character.  Can be local or global depending on localHitPointInfo.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, -1.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotNewBulletHelper.HitPoint">
            <summary>
            Position of impact on character. Can be local or global depending on localHitPointInfo.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotNewBulletHelper.BulletVel">
            <summary>
            Bullet velocity in world coordinates.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -2000.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotSnapHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotSnapHelper for sending a ShotSnap <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotSnap <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.Snap">
            <summary>
            Add a Snap to shot.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapMag">
            <summary>
            The magnitude of the reaction.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapMovingMult">
            <summary>
            MovingMult*snapMag = The magnitude of the reaction if moving(comVelMag) faster than movingThresh.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapBalancingMult">
            <summary>
            BalancingMult*snapMag = The magnitude of the reaction if balancing = (not lying on the floor/ not upper body not collided) and not airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapAirborneMult">
            <summary>
            AirborneMult*snapMag = The magnitude of the reaction if airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapMovingThresh">
            <summary>
            If moving(comVelMag) faster than movingThresh then mvingMult applied to stunMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapDirectionRandomness">
            <summary>
            The character snaps in a prescribed way (decided by bullet direction) - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapLeftArm">
            <summary>
            Snap the leftArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapRightArm">
            <summary>
            Snap the rightArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapLeftLeg">
            <summary>
            Snap the leftLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapRightLeg">
            <summary>
            Snap the rightLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapSpine">
            <summary>
            Snap the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapNeck">
            <summary>
            Snap the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapPhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapHipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapUseBulletDir">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapHitPart">
            <summary>
            Snap only around the wounded part//mmmmtodo check whether bodyPart doesn't have to be remembered for unSnap.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.UnSnapInterval">
            <summary>
            Interval before applying reverse snap.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.UnSnapRatio">
            <summary>
            The magnitude of the reverse snap.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotSnapHelper.SnapUseTorques">
            <summary>
            Use torques to make the snap otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotShockSpinHelper">
            <summary>
            Configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotShockSpinHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotShockSpinHelper for sending a ShotShockSpin <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotShockSpin <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.AddShockSpin">
            <summary>
            If enabled, add a short 'shock' of torque to the character's spine to exaggerate bullet impact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.RandomizeShockSpinDirection">
            <summary>
            For use with close-range shotgun blasts, or similar.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.AlwaysAddShockSpin">
            <summary>
            If true, apply the shock spin no matter which body component was hit. Otherwise only apply if the spine or clavicles get hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinMin">
            <summary>
            Minimum amount of torque to add if using shock-spin feature.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinMax">
            <summary>
            Maximum amount of torque to add if using shock-spin feature.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinLiftForceMult">
            <summary>
            If greater than 0, apply a force to lift the character up while the torque is applied, trying to produce a dramatic spun/twist shotgun-to-the-chest effect. This is a scale of the torque applied, so 8.0 or so would give a reasonable amount of lift.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinDecayMult">
            <summary>
            Multiplier used when decaying torque spin over time.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinScalePerComponent">
            <summary>
            Torque applied is scaled by this amount across the spine components - spine2 recieving the full amount, then 3 and 1 and finally 0. Each time, this value is used to scale it down. 0.5 means half the torque each time.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinMaxTwistVel">
            <summary>
            Shock spin ends when twist velocity is greater than this value (try 6.0).  If set to -1 does not stop.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinScaleByLeverArm">
            <summary>
            Shock spin scales by lever arm of bullet i.e. bullet impact point to center line.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinAirMult">
            <summary>
            ShockSpin's torque is multipied by this value when both the character's feet are not in contact.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpin1FootMult">
            <summary>
            ShockSpin's torque is multipied by this value when the one of the character's feet are not in contact.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.ShockSpinFootGripMult">
            <summary>
            ShockSpin scales the torques applied to the feet by footSlipCompensation.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotShockSpinHelper.BracedSideSpinMult">
            <summary>
            If shot on a side with a forward foot and both feet are on the ground and balanced, increase the shockspin to compensate for the balancer naturally resisting spin to that side.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotFallToKneesHelper">
            <summary>
            Configure the fall to knees shot.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotFallToKneesHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotFallToKneesHelper for sending a ShotFallToKnees <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotFallToKnees <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the fall to knees shot.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FallToKnees">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkAlwaysChangeFall">
            <summary>
            Always change fall behavior.  If false only change when falling forward.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkBalanceTime">
            <summary>
            How long the balancer runs for before fallToKnees starts.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkHelperForce">
            <summary>
            Hip helper force magnitude - to help character lean over balance point of line between toes.
            </summary>
            <remarks>
            Default value = 200.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkHelperForceOnSpine">
            <summary>
            Helper force applied to spine3 as well.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkLeanHelp">
            <summary>
            Help balancer lean amount - to help character lean over balance point of line between toes.
            Half of this is also applied as hipLean.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkSpineBend">
            <summary>
            Bend applied to spine when falling from knees. (+ve forward - try -0.1) (only if rds called).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -0.2f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkStiffSpine">
            <summary>
            Stiffen spine when falling from knees (only if rds called).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkImpactLooseness">
            <summary>
            Looseness (muscleStiffness = 1.01f - m_parameters.ftkImpactLooseness) applied to upperBody on knee impacts.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkImpactLoosenessTime">
            <summary>
            Time that looseness is applied after knee impacts.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkBendRate">
            <summary>
            Rate at which the legs are bent to go from standing to on knees.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkHipBlend">
            <summary>
            Blend from current hip to balancing on knees hip angle.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkLungeProb">
            <summary>
            Probability that a lunge reaction will be allowed.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkKneeSpin">
            <summary>
            When on knees allow some spinning of the character.
            If false then the balancers' footSlipCompensation remains on and tends to keep the character facing the same way as when it was balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkFricMult">
            <summary>
            Multiplier on the reduction of friction for the feet based on angle away from horizontal - helps the character fall to knees quicker.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkHipAngleFall">
            <summary>
            Apply this hip angle when the character starts to fall backwards when on knees.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkPitchForwards">
            <summary>
            Hip pitch applied (+ve forward, -ve backwards) if character is falling forwards on way down to it's knees.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkPitchBackwards">
            <summary>
            Hip pitch applied (+ve forward, -ve backwards) if character is falling backwards on way down to it's knees.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkFallBelowStab">
            <summary>
            Balancer instability below which the character starts to bend legs even if it isn't going to fall on to it's knees (i.e. if going backwards).
            0.3 almost ensures a fall to knees but means the character will keep stepping backward until it slows down enough.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkBalanceAbortThreshold">
            <summary>
            When the character gives up and goes into a fall.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkOnKneesArmType">
            <summary>
            Type of arm response when on knees falling forward 0=useFallArms (from RollDownstairs or catchFall), 1= armsIn, 2=armsOut.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkReleaseReachForWound">
            <summary>
            Release the reachForWound this amount of time after the knees have hit.
            If LT 0.0 then keep reaching for wound regardless of fall/onground state.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkReachForWound">
            <summary>
            True = Keep reaching for wound regardless of fall/onground state.
            false = respect the shotConfigureArms params: reachFalling, reachFallingWithOneHand, reachOnFloor.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkReleasePointGun">
            <summary>
            Override the pointGun when knees hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFallToKneesHelper.FtkFailMustCollide">
            <summary>
            The upper body of the character must be colliding and other failure conditions met to fail.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotFromBehindHelper">
            <summary>
            Configure the shot from behind reaction.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotFromBehindHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotFromBehindHelper for sending a ShotFromBehind <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotFromBehind <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shot from behind reaction.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.ShotFromBehind">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbSpineAmount">
            <summary>
            SpineBend.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbNeckAmount">
            <summary>
            Neck Bend.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbHipAmount">
            <summary>
            Hip Pitch.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbKneeAmount">
            <summary>
            Knee bend.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbPeriod">
            <summary>
            ShotFromBehind reaction period after being shot.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbForceBalancePeriod">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbArmsOnset">
            <summary>
            Amount of time before applying spread out arms pose.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbKneesOnset">
            <summary>
            Amount of time before bending knees a bit.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbNoiseGain">
            <summary>
            Controls additional independent randomized bending of left/right elbows.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotFromBehindHelper.SfbIgnoreFail">
            <summary>
            0 = balancer fails as normal,
            1 = ignore backArchedBack and leanedTooFarBack balancer failures,
            2 = ignore backArchedBack balancer failure only,
            3 = ignore leanedTooFarBack balancer failure only.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotInGutsHelper">
            <summary>
            Configure the shot in guts reaction.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotInGutsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotInGutsHelper for sending a ShotInGuts <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotInGuts <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shot in guts reaction.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.ShotInGuts">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigSpineAmount">
            <summary>
            SpineBend.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigNeckAmount">
            <summary>
            Neck Bend.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigHipAmount">
            <summary>
            Hip Pitch.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigKneeAmount">
            <summary>
            Knee bend.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigPeriod">
            <summary>
            Active time after being shot.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigForceBalancePeriod">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotInGutsHelper.SigKneesOnset">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotHeadLookHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotHeadLookHelper for sending a ShotHeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotHeadLook <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.UseHeadLook">
            <summary>
            Use head look.
            Default: looks at provided target or if this is zero - looks forward or in velocity direction.
            If reachForWound is enabled, switches between looking at the wound and at the default target.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.HeadLook">
            <summary>
            Position to look at with headlook flag.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.HeadLookAtWoundMinTimer">
            <summary>
            Min time to look at wound.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.HeadLookAtWoundMaxTimer">
            <summary>
            Max time to look at wound.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.HeadLookAtHeadPosMaxTimer">
            <summary>
            Min time to look headLook or if zero - forward or in velocity direction.
            </summary>
            <remarks>
            Default value = 1.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotHeadLookHelper.HeadLookAtHeadPosMinTimer">
            <summary>
            Max time to look headLook or if zero - forward or in velocity direction.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.ShotConfigureArmsHelper">
            <summary>
            Configure the arm reactions in shot.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.ShotConfigureArmsHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the ShotConfigureArmsHelper for sending a ShotConfigureArms <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the ShotConfigureArms <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the arm reactions in shot.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Brace">
            <summary>
            Blind brace with arms if appropriate.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.PointGun">
            <summary>
            Point gun if appropriate.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.UseArmsWindmill">
            <summary>
            ArmsWindmill if going backwards fast enough.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.ReleaseWound">
            <summary>
            Release wound if going sideways/forward fast enough.
            0 = don't.
            1 = only if bracing.
            2 = any default arm reaction.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.ReachFalling">
            <summary>
            Reach for wound when falling.
            0 = false,
            1 = true,
            2 = once per shot performance.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.ReachFallingWithOneHand">
            <summary>
            Force character to reach for wound with only one hand when falling or fallen.
            0 = allow two-handed reach,
            1 = left only if two-handed possible,
            2 = right only if two-handed possible,
            3 = one handed but automatic (allows switching of hands).
            </summary>
            <remarks>
            Default value = 3.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.ReachOnFloor">
            <summary>
            ReachForWound when on floor - 0 = false, 1 = true, 2 = once per shot performance.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AlwaysReachTime">
            <summary>
            Inhibit arms brace for this amount of time after reachForWound has begun.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AWSpeedMult">
            <summary>
            For armsWindmill, multiplier on character speed - increase of speed of circling is proportional to character speed (max speed of circliing increase = 1.5). Eg. lowering the value increases the range of velocity that the 0-1.5 is applied over.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AWRadiusMult">
            <summary>
            For armsWindmill, multiplier on character speed - increase of radii is proportional to character speed (max radius increase = 0.45).
            E.g. lowering the value increases the range of velocity that the 0-0.45 is applied over.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AWStiffnessAdd">
            <summary>
            For armsWindmill, added arm stiffness ranges from 0 to AWStiffnessAdd.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.ReachWithOneHand">
            <summary>
            Force character to reach for wound with only one hand.
            0 = allow two-handed reach,
            1 = left only if two-handed possible,
            2 = right only if two-handed possible.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AllowLeftPistolRFW">
            <summary>
            Allow character to reach for wound with left hand if holding a pistol.
            It never will for a rifle.
            If pointGun is running this will only happen if the hand cannot point and pointGun:poseUnusedGunArm = false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.AllowRightPistolRFW">
            <summary>
            Allow character to reach for wound with right hand if holding a pistol.
            It never will for a rifle.
            If pointGun is running this will only happen if the hand cannot point and pointGun:poseUnusedGunArm = false.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.RfwWithPistol">
            <summary>
            Override pointGun and reachForWound if desired if holding a pistol.
            It never will for a rifle.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2Left">
            <summary>
            Fling the left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2Right">
            <summary>
            Fling the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2OverrideStagger">
            <summary>
            Override stagger arms even if staggerFall:m_upperBodyReaction = true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2TimeBefore">
            <summary>
            Time after hit that the fling will start (allows for a bit of loose arm movement from bullet impact.snap etc).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2Time">
            <summary>
            Duration of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2MStiffL">
            <summary>
            Muscle stiffness of the left arm.
            If negative then uses the shots underlying muscle stiffness from controlStiffness (i.e. respects looseness).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2MStiffR">
            <summary>
            Muscle stiffness of the right arm.
            If negative then uses the shots underlying muscle stiffness from controlStiffness (i.e. respects looseness).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2RelaxTimeL">
            <summary>
            Maximum time before the left arm relaxes in the fling.
            It will relax automatically when the arm has completed it's bent arm fling.
            This is what causes the arm to straighten.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2RelaxTimeR">
            <summary>
            Maximum time before the right arm relaxes in the fling.
            It will relax automatically when the arm has completed it's bent arm fling.
            This is what causes the arm to straighten.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMinL">
            <summary>
            Minimum fling angle for left arm.
            Fling angle is random in the range fling2AngleMin:fling2AngleMax.
            Angle of fling in radians measured from the body horizontal sideways from shoulder.
            Positive is up, 0 shoulder level, negative down.
            </summary>
            <remarks>
            Default value = -1.5f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMaxL">
            <summary>
            Maximum fling angle for left arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMinR">
            <summary>
            Minimum fling angle for right arm.
            </summary>
            <remarks>
            Default value = -1.5f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMaxR">
            <summary>
            Maximum fling angle for right arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMinL">
            <summary>
            Minimum left arm length.
            Arm length is random in the range fling2LengthMin:fling2LengthMax.
            Arm length maps one to one with elbow angle.
            These values are scaled internally for the female character.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMaxL">
            <summary>
            Maximum left arm length.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMinR">
            <summary>
            Min right arm length.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMaxR">
            <summary>
            Max right arm length.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.Bust">
            <summary>
            Has the character got a bust.
            If so then cupBust (move bust reach targets below bust) or bustElbowLift and cupSize (stop upperArm penetrating bust and move bust targets to surface of bust) are implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.BustElbowLift">
            <summary>
            Lift the elbows up this much extra to avoid upper arm penetrating the bust (when target hits spine2 or spine3).
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.CupSize">
            <summary>
            Amount reach target to bust (spine2) will be offset forward by.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.ShotConfigureArmsHelper.CupBust">
            <summary>
            All reach targets above or on the bust will cause a reach below the bust.
            (specifically moves spine3 and spine2 targets to spine1).
            BustElbowLift and cupSize are ignored.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:RDR2.NaturalMotion.SmartFallHelper">
            <summary>
            Clone of High Fall with a wider range of operating conditions.
            </summary>
        </member>
        <member name="M:RDR2.NaturalMotion.SmartFallHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the SmartFallHelper for sending a SmartFall <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the SmartFall <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
            <remarks>
            Clone of High Fall with a wider range of operating conditions.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.BodyStiffness">
            <summary>
            Stiffness of body.
            Value feeds through to bodyBalance (synced with defaults), to armsWindmill (14 for this value at default ), legs pedal, head look and roll down stairs directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Bodydamping">
            <summary>
            The damping of the joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Catchfalltime">
            <summary>
            The length of time before the impact that the character transitions to the landing.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.CrashOrLandCutOff">
            <summary>
            0.52angle is 0.868 dot//A threshold for deciding how far away from upright the character needs to be before bailing out (going into a foetal) instead of trying to land (keeping stretched out).
            NB: never does bailout if ignorWorldCollisions true.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.PdStrength">
            <summary>
            Strength of the controller to keep the character at angle aimAngleBase from vertical.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.PdDamping">
            <summary>
            Damping multiplier of the controller to keep the character at angle aimAngleBase from vertical.
            The actual damping is pdDamping*pdStrength*constant*angVel.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ArmAngSpeed">
            <summary>
            Arm circling speed in armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ArmAmplitude">
            <summary>
            In armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ArmPhase">
            <summary>
            In armWindMillAdaptive 3.1 opposite for stuntman.
            1.0 old default. 0.0 in phase.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ArmBendElbows">
            <summary>
            In armWindMillAdaptive bend the elbows as a function of armAngle.
            For stunt man true otherwise false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LegRadius">
            <summary>
            Radius of legs on pedal.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LegAngSpeed">
            <summary>
            In pedal.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LegAsymmetry">
            <summary>
            0.0 for stunt man.
            Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Arms2LegsPhase">
            <summary>
            Phase angle between the arms and legs circling angle.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 6.5f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Arms2LegsSync">
            <summary>
            Syncs the arms angle to what the leg angle is.
            </summary>
            <remarks>
            Default value = <see cref="F:RDR2.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            All speed/direction parameters of armswindmill are overwritten if = <see cref="F:RDR2.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            If <see cref="F:RDR2.NaturalMotion.Synchroisation.SyncedAtStart"/> and you want synced arms/legs then armAngSpeed=legAngSpeed, legAsymmetry = 0.0 (to stop randomizations of the leg cicle speed).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ArmsUp">
            <summary>
            Where to put the arms when preparing to land.
            Approx 1 = above head, 0 = head height, -1 = down.
            LT -2.0 use catchFall arms, LT -3.0 use prepare for landing pose if Agent is due to land vertically, feet first.
            </summary>
            <remarks>
            Default value = -3.1f.
            Min value = -4.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.OrientateBodyToFallDirection">
            <summary>
            Toggle to orientate to fall direction.  i.e. orientate so that the character faces the horizontal velocity direction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.OrientateTwist">
            <summary>
            If false don't worry about the twist angle of the character when orientating the character.
            If false this allows the twist axis of the character to be free (You can get a nice twisting highFall like the one in dieHard 4 when the car goes into the helicopter).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.OrientateMax">
            <summary>
            DEVEL parameter - suggest you don't edit it.  Maximum torque the orientation controller can apply.
            If 0 then no helper torques will be used.
            300 will orientate the character softly for all but extreme angles away from aimAngleBase.
            If abs (current -aimAngleBase) is getting near 3.0 then this can be reduced to give a softer feel.
            </summary>
            <remarks>
            Default value = 300.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.AlanRickman">
            <summary>
            If true then orientate the character to face the point from where it started falling.
            High fall like the one in "Die Hard" with Alan Rickman.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.FowardRoll">
            <summary>
            Try to execute a forward Roll on landing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.UseZeroPose_withFowardRoll">
            <summary>
            Blend to a zero pose when forward roll is attempted.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.AimAngleBase">
            <summary>
            Angle from vertical the pdController is driving to (positive = forwards).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.FowardVelRotation">
            <summary>
            Scale to add/subtract from aimAngle based on forward speed (Internal).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.FootVelCompScale">
            <summary>
            Scale to change to amount of vel that is added to the foot ik from the velocity (Internal).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.SideD">
            <summary>
            Sideoffset for the feet during prepareForLanding. +ve = right.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.FowardOffsetOfLegIK">
            <summary>
            Forward offset for the feet during prepareForLanding.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LegL">
            <summary>
            Leg Length for ik (Internal)//unused.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.CatchFallCutOff">
            <summary>
            0.5angle is 0.878 dot. Cutoff to go to the catchFall (internal) //mmmtodo do like crashOrLandCutOff.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LegStrength">
            <summary>
            Strength of the legs at landing.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Balance">
            <summary>
            If true have enough strength to balance.
            If false not enough strength in legs to balance (even though bodyBlance called).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.IgnorWorldCollisions">
            <summary>
            Never go into bailout (foetal).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.AdaptiveCircling">
            <summary>
            Stunt man type fall.  Arm and legs circling direction controlled by angmom and orientation.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Hula">
            <summary>
            With stunt man type fall.  Hula reaction if can't see floor and not rotating fast.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.MaxSpeedForRecoverableFall">
            <summary>
            Character needs to be moving less than this speed to consider fall as a recoverable one.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.MinSpeedForBrace">
            <summary>
            Character needs to be moving at least this fast horizontally to start bracing for impact if there is an object along its trajectory.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.LandingNormal">
            <summary>
            Ray-cast normal doted with up direction has to be greater than this number to consider object flat enough to land on it.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsForceMag">
            <summary>
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsTargetLinVeDecayTime">
            <summary>
            RDS: Time for the targetlinearVelocity to decay to zero.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsTargetLinearVelocity">
            <summary>
            RDS: Helper torques are applied to match the spin of the character to the max of targetLinearVelocity and COMVelMag.
            -1 to use initial character velocity.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsUseStartingFriction">
            <summary>
            Start Catch Fall/RDS state with specified friction.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsStartingFriction">
            <summary>
            Catch Fall/RDS starting friction.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsStartingFrictionMin">
            <summary>
            Catch Fall/RDS starting friction minimum.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.RdsForceVelThreshold">
            <summary>
            Velocity threshold under which RDS force mag will be applied.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.InitialState">
            <summary>
            Force initial state (used in vehicle bail out to start SF_CatchFall (6) earlier.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 7.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ChangeExtremityFriction">
            <summary>
            Allow friction changes to be applied to the hands and feet.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.Teeter">
            <summary>
            Set up an immediate teeter in the direction of trave if initial state is SF_Balance.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.TeeterOffset">
            <summary>
            Offset the default Teeter edge in the direction of travel.
            Will need to be tweaked depending on how close to the real edge AI tends to trigger the behavior.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.StopRollingTime">
            <summary>
            Time in seconds before ped should start actively trying to stop rolling.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ReboundScale">
            <summary>
            Scale for rebound assistance.
            0 = off,
            1 = very bouncy,
            2 = jbone crazy.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ReboundMask">
            <summary>
            Part mask to apply rebound assistance.
            </summary>
            <remarks>
            Default value = uk.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.ForceHeadAvoid">
            <summary>
            Force head avoid to be active during Catch Fall even when character is not on the ground.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.CfZAxisSpinReduction">
            <summary>
            Pass-through parameter for Catch Fall spin reduction.  Increase to stop more spin. 0..1.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.SplatWhenStopped">
            <summary>
            Transition to splat state when com vel is below value, regardless of character health or fall velocity.
            Set to zero to disable.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.BlendHeadWhenStopped">
            <summary>
            Blend head to neutral pose com vel approaches zero.
            Linear between zero and value.
            Set to zero to disable.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.SmartFallHelper.SpreadLegs">
            <summary>
            Spread legs amount for pedal during fall.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.StaggerFallHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the StaggerFallHelper for sending a StaggerFall <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the StaggerFall <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.ArmStiffness">
            <summary>
            Stiffness of arms. Catch_fall's stiffness scales with this value, but has default values when this is default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.ArmDamping">
            <summary>
            Sets damping value for the arms.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.SpineDamping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.SpineStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.ArmStiffnessStart">
            <summary>
            ArmStiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.ArmDampingStart">
            <summary>
            ArmDamping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.SpineDampingStart">
            <summary>
            SpineDamping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.SpineStiffnessStart">
            <summary>
            SpineStiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TimeAtStartValues">
            <summary>
            Time spent with Start values for arms and spine stiffness and damping i.e. for whiplash effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.RampTimeFromStartValues">
            <summary>
            Time spent ramping from Start to end values for arms and spine stiffness and damping i.e. for whiplash effect (occurs after timeAtStartValues).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.StaggerStepProb">
            <summary>
            Probability per step of time spent in a stagger step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.StepsTillStartEnd">
            <summary>
            Steps taken before lowerBodyStiffness starts ramping down by perStepReduction1.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TimeStartEnd">
            <summary>
            Time from start of behavior before lowerBodyStiffness starts ramping down for rampTimeToEndValues to endValues.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.RampTimeToEndValues">
            <summary>
            Time spent ramping from lowerBodyStiffness to lowerBodyStiffnessEnd.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LowerBodyStiffness">
            <summary>
            LowerBodyStiffness should be 12.
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LowerBodyStiffnessEnd">
            <summary>
            LowerBodyStiffness at end.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.PredictionTime">
            <summary>
            Amount of time (seconds) into the future that the character tries to step to.
            Bigger values try to recover with fewer, bigger steps.
            Smaller values recover with smaller steps, and generally recover less.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.PerStepReduction1">
            <summary>
            LowerBody stiffness will be reduced every step to make the character fallover.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LeanInDirRate">
            <summary>
            LeanInDirection will be increased from 0 to leanInDirMax linearly at this rate.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LeanInDirMaxF">
            <summary>
            Max of leanInDirection magnitude when going forwards.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LeanInDirMaxB">
            <summary>
            Max of leanInDirection magnitude when going backwards.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LeanHipsMaxF">
            <summary>
            Max of leanInDirectionHips magnitude when going forwards.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.LeanHipsMaxB">
            <summary>
            Max of leanInDirectionHips magnitude when going backwards.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.Lean2multF">
            <summary>
            Lean of spine to side in side velocity direction when going forwards.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.Lean2multB">
            <summary>
            Lean of spine to side in side velocity direction when going backwards.
            </summary>
            <remarks>
            Default value = -2.0f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.PushOffDist">
            <summary>
            Amount stance foot is behind com in the direction of velocity before the leg tries to pushOff to increase momentum.
            Increase to lower the probability of the pushOff making the character bouncy.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.MaxPushoffVel">
            <summary>
            Stance leg will only pushOff to increase momentum if the vertical hip velocity is less than this value. 0.4 seems like a good value.
            The higher it is the less this functionality is applied.
            If it is very low or negative this can stop the pushOff altogether.
            </summary>
            <remarks>
            Default value = 20.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.HipBendMult">
            <summary>
            HipBend scaled with velocity.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.AlwaysBendForwards">
            <summary>
            Bend forwards at the hip (hipBendMult) whether moving backwards or forwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.SpineBendMult">
            <summary>
            Spine bend scaled with velocity.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing, balancer default is 0.2.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TurnOffProb">
            <summary>
            Weighted probability that turn will be off.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.Turn2TargetProb">
            <summary>
            Weighted probability of turning towards headLook target.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.Turn2VelProb">
            <summary>
            Weighted probability of turning towards velocity.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TurnAwayProb">
            <summary>
            Weighted probability of turning away from headLook target.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TurnLeftProb">
            <summary>
            Weighted probability of turning left.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.TurnRightProb">
            <summary>
            Weighted probability of turning right.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.UseBodyTurn">
            <summary>
            Enable and provide a positive bodyTurnTimeout and provide a look-at target to make the character turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.StaggerFallHelper.UpperBodyReaction">
            <summary>
            Enable upper body reaction i.e. blindBrace and armswindmill.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.TeeterHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the TeeterHelper for sending a Teeter <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Teeter <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.EdgeLeft">
            <summary>
            Defines the left edge point (left of character facing edge).
            </summary>
            <remarks>
            Default value = Vector3(39.5f, 38.9f, 21.1f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.EdgeRight">
            <summary>
            Defines the right edge point (right of character facing edge).
            </summary>
            <remarks>
            Default value = Vector3(39.5f, 39.9f, 21.1f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.UseExclusionZone">
            <summary>
            Stop stepping across the line defined by edgeLeft and edgeRight.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.UseHeadLook">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.CallHighFall">
            <summary>
            Call highFall if fallen over the edge.
            If false just call blended writhe (to go over the top of the fall behavior of the underlying behavior e.g. bodyBalance).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.LeanAway">
            <summary>
            Lean away from the edge based on velocity towards the edge (if closer than 2m from edge).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.PreTeeterTime">
            <summary>
            Time-to-edge threshold to start pre-teeter (windmilling, etc).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.LeanAwayTime">
            <summary>
            Time-to-edge threshold to start leaning away from a potential fall.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.LeanAwayScale">
            <summary>
            Scales stay upright lean and hip pitch.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.TeeterHelper.TeeterTime">
            <summary>
            Time-to-edge threshold to start full-on teeter (more aggressive lean, drop-and-twist, etc).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.UpperBodyFlinchHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the UpperBodyFlinchHelper for sending a UpperBodyFlinch <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the UpperBodyFlinch <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.HandDistanceLeftRight">
            <summary>
            Left-Right distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.HandDistanceFrontBack">
            <summary>
            Front-Back distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.HandDistanceVertical">
            <summary>
            Vertical distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.BodyStiffness">
            <summary>
            Stiffness of body. Value carries over to head look, spine twist.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.BodyDamping">
            <summary>
            Damping value used for upper body.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.BackBendAmount">
            <summary>
            Amount to bend the back during the flinch.
            </summary>
            <remarks>
            Default value = -0.6f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.UseRightArm">
            <summary>
            Toggle to use the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.UseLeftArm">
            <summary>
            Toggle to Use the Left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.NoiseScale">
            <summary>
            Amplitude of the perlin noise applied to the arms positions in the flinch to the front part of the behavior.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.NewHit">
            <summary>
            Relaxes the character for 1 frame if set.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.ProtectHeadToggle">
            <summary>
            Always protect head.
            Note if false then character flinches if target is in front, protects head if target is behind.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.DontBraceHead">
            <summary>
            Don't protect head only brace from front. Turned on by bcr.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.ApplyStiffness">
            <summary>
            Turned of by bcr.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.HeadLookAwayFromTarget">
            <summary>
            Look away from target (unless protecting head then look between feet).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.UseHeadLook">
            <summary>
            Use headlook.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.TurnTowards">
            <summary>
            Ve balancer turn Towards, negative balancer turn Away, 0 balancer won't turn.
            There is a 50% chance that the character will not turn even if this parameter is set to turn.
            </summary>
            <remarks>
            Default value = 1.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.UpperBodyFlinchHelper.Pos">
            <summary>
            Position in world-space of object to flinch from.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:RDR2.NaturalMotion.YankedHelper.#ctor(RDR2.Ped)">
            <summary>
            Creates a new Instance of the YankedHelper for sending a Yanked <see cref="T:RDR2.NaturalMotion.Message"/> to a given <see cref="T:RDR2.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:RDR2.Ped"/> to send the Yanked <see cref="T:RDR2.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.ArmStiffness">
            <summary>
            Stiffness of arms when upright.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.ArmDamping">
            <summary>
            Sets damping value for the arms when upright.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineDamping">
            <summary>
            Spine damping when upright.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineStiffness">
            <summary>
            Spine stiffness when upright.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.ArmStiffnessStart">
            <summary>
            Arm stiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.ArmDampingStart">
            <summary>
            Arm damping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineDampingStart">
            <summary>
            Spine damping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineStiffnessStart">
            <summary>
            Spine stiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.TimeAtStartValues">
            <summary>
            Time spent with Start values for arms and spine stiffness and damping i.e. for whiplash effect.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.RampTimeFromStartValues">
            <summary>
            Time spent ramping from Start to end values for arms and spine stiffness and damping i.e. for whiplash effect (occurs after timeAtStartValues).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.StepsTillStartEnd">
            <summary>
            Steps taken before lowerBodyStiffness starts ramping down.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.TimeStartEnd">
            <summary>
            Time from start of behavior before lowerBodyStiffness starts ramping down by perStepReduction1.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.RampTimeToEndValues">
            <summary>
            Time spent ramping from lowerBodyStiffness to lowerBodyStiffnessEnd.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.LowerBodyStiffness">
            <summary>
            LowerBodyStiffness should be 12.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.LowerBodyStiffnessEnd">
            <summary>
            LowerBodyStiffness at end.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.PerStepReduction">
            <summary>
            LowerBody stiffness will be reduced every step to make the character fallover.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HipPitchForward">
            <summary>
            Amount to bend forward at the hips (+ve forward, -ve backwards).
            Behavior switches between hipPitchForward and hipPitchBack.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -1.3f.
            Max value = 1.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HipPitchBack">
            <summary>
            Amount to bend backwards at the hips (+ve backwards, -ve forwards).
            Behavior switches between hipPitchForward and hipPitchBack.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.3f.
            Max value = 1.3f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineBend">
            <summary>
            Bend/Twist the spine amount.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.FootFriction">
            <summary>
            Foot friction when standing/stepping.  0.5 gives a good slide sometimes.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.TurnThresholdMin">
            <summary>
            Min angle at which the turn with toggle to the other direction (actual toggle angle is chosen randomly in range min to max).
            If it is 1 then it will never toggle.
            If negative then no turn is applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.TurnThresholdMax">
            <summary>
            Max angle at which the turn with toggle to the other direction (actual toggle angle is chosen randomly in range min to max).
            If it is 1 then it will never toggle.
            If negative then no turn is applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.ComVelRDSThresh">
            <summary>
            For handsAndKnees catchfall ONLY: comVel above which rollDownstairs will start.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HulaPeriod">
            <summary>
            0.25 A complete wiggle will take 4*hulaPeriod.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.HipAmplitude">
            <summary>
            Amount of hip movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.SpineAmplitude">
            <summary>
            Amount of spine movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.MinRelaxPeriod">
            <summary>
            Wriggle relaxes for a minimum of minRelaxPeriod (if it is negative it is a multiplier on the time previously spent wriggling).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.MaxRelaxPeriod">
            <summary>
            Wriggle relaxes for a maximum of maxRelaxPeriod (if it is negative it is a multiplier on the time previously spent wriggling).
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.RollHelp">
            <summary>
            Amount of cheat torque applied to turn the character over.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundLegStiffness">
            <summary>
            Leg Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundArmStiffness">
            <summary>
            Arm Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundSpineStiffness">
            <summary>
            Spine Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundLegDamping">
            <summary>
            Leg Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundArmDamping">
            <summary>
            Arm Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundSpineDamping">
            <summary>
            Spine Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:RDR2.NaturalMotion.YankedHelper.GroundFriction">
            <summary>
            Friction multiplier on body parts when on ground.
            Character can look too slidy with groundFriction = 1.
            Higher values give a more jerky reaction but this seems timestep dependent especially for dragged by the feet.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:RDR2.UI.ContainerElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.ContainerElement"/> class used for grouping items on screen.
            </summary>
        </member>
        <member name="M:RDR2.UI.ContainerElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.ContainerElement"/> class used for grouping items on screen.
            </summary>
            <param name="position">Set the <see cref="P:RDR2.UI.ContainerElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.ContainerElement.Size"/> of the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
        </member>
        <member name="M:RDR2.UI.ContainerElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.ContainerElement"/> class used for grouping items on screen.
            </summary>
            <param name="position">Set the <see cref="P:RDR2.UI.ContainerElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.ContainerElement.Size"/> of the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.ContainerElement.Color"/> used to draw the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
        </member>
        <member name="M:RDR2.UI.ContainerElement.#ctor(System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.ContainerElement"/> class used for grouping items on screen.
            </summary>
            <param name="position">Set the <see cref="P:RDR2.UI.ContainerElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.ContainerElement.Size"/> of the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.ContainerElement.Color"/> used to draw the <see cref="T:RDR2.UI.ContainerElement"/>.</param>
            <param name="centered">Position the <see cref="T:RDR2.UI.ContainerElement"/> based on its center instead of top left corner, see also <seealso cref="P:RDR2.UI.ContainerElement.Centered"/>.</param>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.ContainerElement"/> will be drawn.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Color">
            <summary>
            Gets or sets the color of this <see cref="T:RDR2.UI.ContainerElement"/>.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.UI.ContainerElement"/>.
            </summary>
            <value>
            The position scaled on a 1280*720 pixel base.
            </value>
            <remarks>
            If ScaledDraw is called, the position will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </remarks>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Size">
            <summary>
            Gets or sets the size to draw the <see cref="T:RDR2.UI.ContainerElement"/>
            </summary>
            <value>
            The size on a 1280*720 pixel base
            </value>
            <remarks>
            If ScaledDraw is called, the size will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </remarks>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Centered">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.ContainerElement"/> should be positioned based on its center or top left corner
            </summary>
            <value>
              <c>true</c> if centered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.ContainerElement.Items">
            <summary>
            The <see cref="T:RDR2.UI.IElement"/>s Contained inside this <see cref="T:RDR2.UI.ContainerElement"/>
            </summary>
        </member>
        <member name="M:RDR2.UI.ContainerElement.Draw">
            <summary>
            Draws this <see cref="T:RDR2.UI.ContainerElement" /> this frame.
            </summary>
        </member>
        <member name="M:RDR2.UI.ContainerElement.Draw(System.Drawing.SizeF)">
            <summary>
            Draws this <see cref="T:RDR2.UI.ContainerElement" /> this frame at the specified offset.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.ContainerElement" /> using a 1280*720 pixel base.</param>
        </member>
        <member name="M:RDR2.UI.ContainerElement.ScaledDraw">
            <summary>
            Draws this <see cref="T:RDR2.UI.ContainerElement" /> this frame using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.ContainerElement.ScaledDraw(System.Drawing.SizeF)">
            <summary>
            Draws this <see cref="T:RDR2.UI.ContainerElement" /> this frame at the specified offset using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.ContainerElement" /> using a <see cref="P:RDR2.UI.Screen.ScaledWidth" />*720 pixel base.</param>
        </member>
        <member name="T:RDR2.UI.CustomSprite">
            <summary>
            A sprite element using a custom image texture.
            </summary>
        </member>
        <member name="M:RDR2.UI.CustomSprite.#ctor(System.String,System.Drawing.SizeF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.CustomSprite"/> class used for drawing external textures on the screen.
            </summary>
            <param name="filename">Full path to location of the <see cref="T:RDR2.UI.CustomSprite"/> on the disc.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.CustomSprite.Size"/> of the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.CustomSprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the specified file doesn't exist</exception>
        </member>
        <member name="M:RDR2.UI.CustomSprite.#ctor(System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.CustomSprite"/> class used for drawing external textures on the screen.
            </summary>
            <param name="filename">Full path to location of the <see cref="T:RDR2.UI.CustomSprite"/> on the disc.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.CustomSprite.Size"/> of the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.CustomSprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.CustomSprite.Color"/> used to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the specified file doesn't exist</exception>
        </member>
        <member name="M:RDR2.UI.CustomSprite.#ctor(System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.CustomSprite"/> class used for drawing external textures on the screen.
            </summary>
            <param name="filename">Full path to location of the <see cref="T:RDR2.UI.CustomSprite"/> on the disc.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.CustomSprite.Size"/> of the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.CustomSprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.CustomSprite.Color"/> used to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="rotation">Set the rotation to draw the sprite, measured in degrees, see also <seealso cref="P:RDR2.UI.CustomSprite.Rotation"/>.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the specified file doesn't exist</exception>
        </member>
        <member name="M:RDR2.UI.CustomSprite.#ctor(System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.CustomSprite"/> class used for drawing external textures on the screen.
            </summary>
            <param name="filename">Full path to location of the <see cref="T:RDR2.UI.CustomSprite"/> on the disc.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.CustomSprite.Size"/> of the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.CustomSprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.CustomSprite.Color"/> used to draw the <see cref="T:RDR2.UI.CustomSprite"/>.</param>
            <param name="rotation">Set the rotation to draw the sprite, measured in degrees, see also <seealso cref="P:RDR2.UI.CustomSprite.Rotation"/>.</param>
            <param name="centered">Position the <see cref="T:RDR2.UI.CustomSprite"/> based on its center instead of top left corner, see also <seealso cref="P:RDR2.UI.CustomSprite.Centered"/>.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the specified file doesn't exist</exception>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.CustomSprite" /> will be drawn.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Color">
            <summary>
            Gets or sets the color of this <see cref="T:RDR2.UI.CustomSprite" />.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.UI.CustomSprite" />.
            </summary>
            <value>
            The position scaled on a 1280*720 pixel base.
            </value>
            <remarks>
            If ScaledDraw is called, the position will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </remarks>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Size">
            <summary>
            Gets or sets the size to draw the <see cref="T:RDR2.UI.CustomSprite" />
            </summary>
            <value>
            The size on a 1280*720 pixel base
            </value>
            <remarks>
            If ScaledDraw is called, the size will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </remarks>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Rotation">
            <summary>
            Gets or sets the rotation to draw thie <see cref="T:RDR2.UI.CustomSprite" />.
            </summary>
            <value>
            The rotation measured in degrees, clockwise increasing, 0.0 at vertical
            </value>
        </member>
        <member name="P:RDR2.UI.CustomSprite.Centered">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.CustomSprite"/> should be positioned based on its center or top left corner
            </summary>
            <value>
              <c>true</c> if centered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RDR2.UI.CustomSprite.Draw">
            <summary>
            Draws this <see cref="T:RDR2.UI.CustomSprite" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.CustomSprite.Draw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.CustomSprite" /> at the specified offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:RDR2.UI.CustomSprite.ScaledDraw">
            <summary>
            Draws this <see cref="T:RDR2.UI.CustomSprite" /> using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.CustomSprite.ScaledDraw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.CustomSprite" /> at the specified offset using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="T:RDR2.UI.Font">
            <summary>
            An enumeration of fonts the game supports.
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.HapnaSlabSerifDemiBold">
            <summary>
            Body
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.DroidSerifPro">
            <summary>
            Body1
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRGothica">
            <summary>
            Catalog1
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRCatalogueNumbers">
            <summary>
            Catalog2
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.ArialDEBUG">
            <summary>
            Catalog3
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRCatalogueBold">
            <summary>
            Catalog4
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.CabritoNormDemi">
            <summary>
            Catalog5
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRChalkHand">
            <summary>
            Chalk
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.HelveticaNeueLT47LightCn">
            <summary>
            Debug_Bold
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRLinoNumbers">
            <summary>
            FixedWidthNumbers
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.Redemption">
            <summary>
            Font5
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RockstarGamertagCond">
            <summary>
            Gamername
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.DreamerScript">
            <summary>
            Handwritten
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRLedgerHand">
            <summary>
            Ledger
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RockstarTag">
            <summary>
            RockstarTAG
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.Arial">
            <summary>
            Social_Club_Cond_Bold
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRLino">
            <summary>
            Title
            </summary>
        </member>
        <member name="F:RDR2.UI.Font.RDRTurri">
            <summary>
            WantedPostersGeneric
            </summary>
        </member>
        <member name="T:RDR2.UI.Hud">
            <summary>
            Methods to manipulate the HUD (heads-up-display) of the game.
            </summary>
        </member>
        <member name="M:RDR2.UI.Hud.EnableHudContext(RDR2.UI.eHudContext)">
            <summary>
            Enables a <see cref="T:RDR2.UI.eHudContext"/>
            </summary>
            <param name="component">The <see cref="T:RDR2.UI.eHudContext"/> to enable</param>
        </member>
        <member name="M:RDR2.UI.Hud.DisableHudContext(RDR2.UI.eHudContext)">
            <summary>
            Disables a <see cref="T:RDR2.UI.eHudContext"/>
            </summary>
            <param name="component">The <see cref="T:RDR2.UI.eHudContext"/> to disable</param>
        </member>
        <member name="M:RDR2.UI.Hud.ShowCursorThisFrame">
            <summary>
            Shows the mouse cursor this frame.
            </summary>
        </member>
        <member name="P:RDR2.UI.Hud.CursorSprite">
            <summary>
            Gets or sets the sprite the cursor should used when drawn
            </summary>
        </member>
        <member name="P:RDR2.UI.Hud.IsVisible">
            <summary>
            Gets or sets a value indicating whether any HUD components should be rendered.
            </summary>
        </member>
        <member name="P:RDR2.UI.Hud.IsRadarVisible">
            <summary>
            Gets or sets a value indicating whether the radar is visible.
            </summary>
        </member>
        <member name="P:RDR2.UI.Hud.RadarZoom">
            <summary>
            Sets how far the minimap should be zoomed in.
            </summary>
            <value>
            The radar zoom; accepts values from 0 to 200.
            </value>
        </member>
        <member name="P:RDR2.UI.IElement.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.IElement"/> will be drawn.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.IElement.Color">
            <summary>
            Gets or sets the color of this <see cref="T:RDR2.UI.IElement"/>.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:RDR2.UI.IElement.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.UI.IElement"/>.
            </summary>
            <value>
            The position scaled on a 1280*720 pixel base.
            </value>
            <remarks>
            If ScaledDraw is called, the position will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </remarks>
        </member>
        <member name="P:RDR2.UI.IElement.Centered">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.IElement"/> should be positioned based on its center or top left corner
            </summary>
            <value>
              <c>true</c> if centered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RDR2.UI.IElement.Draw">
            <summary>
            Draws this <see cref="T:RDR2.UI.IElement"/> this frame.
            </summary>
        </member>
        <member name="M:RDR2.UI.IElement.Draw(System.Drawing.SizeF)">
            <summary>
            Draws this <see cref="T:RDR2.UI.IElement"/> this frame at the specified offset.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.IElement"/> using a 1280*720 pixel base.</param>
        </member>
        <member name="M:RDR2.UI.IElement.ScaledDraw">
            <summary>
            Draws this <see cref="T:RDR2.UI.IElement"/> this frame using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </summary>
        </member>
        <member name="M:RDR2.UI.IElement.ScaledDraw(System.Drawing.SizeF)">
            <summary>
            Draws this <see cref="T:RDR2.UI.IElement"/> this frame at the specified offset using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.IElement"/> using a <see cref="P:RDR2.UI.Screen.ScaledWidth"/>*720 pixel base.</param>
        </member>
        <member name="P:RDR2.UI.ISpriteElement.Size">
            <summary>
            Gets or sets the size to draw the <see cref="T:RDR2.UI.ISpriteElement"/>
            </summary>
            <value>
            The size on a 1280*720 pixel base
            </value>
            <remarks>
            If ScaledDraw is called, the size will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth"/>.
            </remarks>
        </member>
        <member name="P:RDR2.UI.ISpriteElement.Rotation">
            <summary>
            Gets or sets the rotation to draw thie <see cref="T:RDR2.UI.ISpriteElement"/>.
            </summary>
            <value>
            The rotation measured in degrees, clockwise increasing, 0.0 at vertical
            </value>
        </member>
        <member name="T:RDR2.UI.Screen">
            <summary>
            Methods to handle UI actions that affect the whole screen.
            </summary>
        </member>
        <member name="F:RDR2.UI.Screen.Width">
            <summary>
            The base width of the screen used for all UI Calculations, unless ScaledDraw is used
            </summary>
        </member>
        <member name="F:RDR2.UI.Screen.Height">
            <summary>
            The base height of the screen used for all UI Calculations
            </summary>
        </member>
        <member name="P:RDR2.UI.Screen.Resolution">
            <summary>
            Gets the actual screen resolution the game is being rendered at
            </summary>
        </member>
        <member name="P:RDR2.UI.Screen.AspectRatio">
            <summary>
            Gets the current screen aspect ratio
            </summary>
        </member>
        <member name="P:RDR2.UI.Screen.ScaledWidth">
            <summary>
            Gets the screen width scaled against a 720pixel height base.
            </summary>
        </member>
        <member name="P:RDR2.UI.Screen.IsFadedIn">
            <summary>
            Gets a value indicating whether the screen is faded in.
            </summary>
            <value>
            <c>true</c> if the screen is faded in; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.Screen.IsFadedOut">
            <summary>
            Gets a value indicating whether the screen is faded out.
            </summary>
            <value>
            <c>true</c> if the screen is faded out; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.Screen.IsFadingIn">
            <summary>
            Gets a value indicating whether the screen is fading in.
            </summary>
            <value>
            <c>true</c> if the screen is fading in; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.Screen.IsFadingOut">
            <summary>
            Gets a value indicating whether the screen is fading out.
            </summary>
            <value>
            <c>true</c> if the screen is fading out; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RDR2.UI.Screen.FadeIn(System.Int32)">
            <summary>
            Fades the screen in over a specific time, useful for transitioning
            </summary>
            <param name="duration">The time for the fade in to take</param>
        </member>
        <member name="M:RDR2.UI.Screen.FadeOut(System.Int32)">
            <summary>
            Fades the screen out over a specific time, useful for transitioning
            </summary>
            <param name="duration">The time for the fade out to take</param>
        </member>
        <member name="M:RDR2.UI.Screen.IsEffectActive(System.String)">
            <summary>
            Gets a value indicating whether the specific screen effect is running.
            </summary>
            <param name="effectName">The effect to check.</param>
            <returns><c>true</c> if the screen effect is active; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:RDR2.UI.Screen.PlayEffect(System.String)">
            <summary>
            Plays a post processing effect on screen
            </summary>
            <param name="effectName">The effect to play</param>
        </member>
        <member name="M:RDR2.UI.Screen.StopEffect(System.String)">
            <summary>
            Stops a running post processing effect on screen
            </summary>
            <param name="effectName">The effect to stop</param>
        </member>
        <member name="M:RDR2.UI.Screen.ClearEffect(System.String)">
            <summary>
            Stops a running post processing effect on screen
            </summary>
            <param name="effectName">The effect to stop</param>
        </member>
        <member name="M:RDR2.UI.Screen.StopAllEffects">
            <summary>
            Stops all currently running effects.
            </summary>
        </member>
        <member name="M:RDR2.UI.Screen.PrintSubtitle(System.String)">
            <summary>
            Shows a subtitle at the bottom of the screen for a given time
            </summary>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:RDR2.UI.Screen.PrintSubtitle(System.String[])">
            <summary>
            Shows a subtitle at the bottom of the screen for a given time
            </summary>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:RDR2.UI.Screen.DisplaySubtitle(System.String)">
            <summary>
            Shows a subtitle at the bottom of the screen for a given time.
            <remarks>This is an alias for <see cref="M:RDR2.UI.Screen.PrintSubtitle(System.String)"/></remarks>
            </summary>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:RDR2.UI.Screen.DisplaySubtitle(System.String[])">
            <summary>
            Shows a subtitle at the bottom of the screen for a given time.
            <remarks>This is an alias for <see cref="M:RDR2.UI.Screen.PrintSubtitle(System.String[])"/></remarks>
            </summary>
            <param name="message">The message to display.</param>
        </member>
        <member name="M:RDR2.UI.Screen.WorldToScreen(RDR2.Math.Vector3,System.Boolean)">
            <summary>
            Translates a point in WorldSpace to its given Coordinates on the <see cref="T:RDR2.UI.Screen"/>
            </summary>
            <param name="position">The position in the World.</param>
            <param name="scaleWidth">if set to <c>true</c> Returns the screen position scaled by <see cref="P:RDR2.UI.Screen.ScaledWidth"/>; otherwise, returns the screen position scaled by <see cref="F:RDR2.UI.Screen.Width"/>.</param>
            <returns></returns>
        </member>
        <member name="T:RDR2.UI.Sprite">
            <summary>
            A sprite element using a built-in texture.
            </summary>
        </member>
        <member name="M:RDR2.UI.Sprite.#ctor(System.String,System.String,System.Drawing.SizeF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.Sprite"/> class used for drawing in game textures on the screen.
            </summary>
            <param name="textureDict">The Texture dictionary where the <see cref="T:RDR2.UI.Sprite"/> is stored (the *.ytd file).</param>
            <param name="textureName">Name of the <see cref="T:RDR2.UI.Sprite"/> inside the Texture dictionary.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.Sprite.Size"/> of the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.Sprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
        </member>
        <member name="M:RDR2.UI.Sprite.#ctor(System.String,System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.Sprite"/> class used for drawing in game textures on the screen.
            </summary>
            <param name="textureDict">The Texture dictionary where the <see cref="T:RDR2.UI.Sprite"/> is stored (the *.ytd file).</param>
            <param name="textureName">Name of the <see cref="T:RDR2.UI.Sprite"/> inside the Texture dictionary.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.Sprite.Size"/> of the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.Sprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.Sprite.Color"/> used to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
        </member>
        <member name="M:RDR2.UI.Sprite.#ctor(System.String,System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.Sprite"/> class used for drawing in game textures on the screen.
            </summary>
            <param name="textureDict">The Texture dictionary where the <see cref="T:RDR2.UI.Sprite"/> is stored (the *.ytd file).</param>
            <param name="textureName">Name of the <see cref="T:RDR2.UI.Sprite"/> inside the Texture dictionary.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.Sprite.Size"/> of the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.Sprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.Sprite.Color"/> used to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="rotation">Set the rotation to draw the sprite, measured in degrees, see also <seealso cref="P:RDR2.UI.Sprite.Rotation"/>.</param>
        </member>
        <member name="M:RDR2.UI.Sprite.#ctor(System.String,System.String,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.Color,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.Sprite"/> class used for drawing in game textures on the screen.
            </summary>
            <param name="textureDict">The Texture dictionary where the <see cref="T:RDR2.UI.Sprite"/> is stored (the *.ytd file).</param>
            <param name="textureName">Name of the <see cref="T:RDR2.UI.Sprite"/> inside the Texture dictionary.</param>
            <param name="size">Set the <see cref="P:RDR2.UI.Sprite.Size"/> of the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.Sprite.Position"/> on screen where to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.Sprite.Color"/> used to draw the <see cref="T:RDR2.UI.Sprite"/>.</param>
            <param name="rotation">Set the rotation to draw the sprite, measured in degrees, see also <seealso cref="P:RDR2.UI.Sprite.Rotation"/>.</param>
            <param name="centered">Position the <see cref="T:RDR2.UI.Sprite"/> based on its center instead of top left corner, see also <seealso cref="P:RDR2.UI.Sprite.Centered"/>.</param>
        </member>
        <member name="P:RDR2.UI.Sprite.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.Sprite" /> will be drawn.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.Sprite.Color">
            <summary>
            Gets or sets the color of this <see cref="T:RDR2.UI.Sprite" />.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:RDR2.UI.Sprite.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.UI.Sprite" />.
            </summary>
            <value>
            The position scaled on a 1280*720 pixel base.
            </value>
            <remarks>
            If ScaledDraw is called, the position will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </remarks>
        </member>
        <member name="P:RDR2.UI.Sprite.Size">
            <summary>
            Gets or sets the size to draw the <see cref="T:RDR2.UI.Sprite" />
            </summary>
            <value>
            The size on a 1280*720 pixel base
            </value>
            <remarks>
            If ScaledDraw is called, the size will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </remarks>
        </member>
        <member name="P:RDR2.UI.Sprite.Rotation">
            <summary>
            Gets or sets the rotation to draw thie <see cref="T:RDR2.UI.Sprite" />.
            </summary>
            <value>
            The rotation measured in degrees, clockwise increasing, 0.0 at vertical
            </value>
        </member>
        <member name="P:RDR2.UI.Sprite.Centered">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.Sprite"/> should be positioned based on its center or top left corner
            </summary>
            <value>
              <c>true</c> if centered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RDR2.UI.Sprite.Draw">
            <summary>
            Draws this <see cref="T:RDR2.UI.Sprite" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.Sprite.Draw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.Sprite" /> at the specified offset.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:RDR2.UI.Sprite.ScaledDraw">
            <summary>
            Draws this <see cref="T:RDR2.UI.Sprite" /> using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.Sprite.ScaledDraw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.Sprite" /> at the specified offset using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.#ctor(System.String,System.Drawing.PointF,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.TextElement"/> class used for drawing text on the screen.
            </summary>
            <param name="caption">The <see cref="T:RDR2.UI.TextElement"/> to draw.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.TextElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="scale">Sets a <see cref="P:RDR2.UI.TextElement.Scale"/> used to increase of decrease the size of the <see cref="T:RDR2.UI.TextElement"/>, for no scaling use 1.0f.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.#ctor(System.String,System.Drawing.PointF,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.TextElement"/> class used for drawing text on the screen.
            </summary>
            <param name="caption">The <see cref="T:RDR2.UI.TextElement"/> to draw.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.TextElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="scale">Sets a <see cref="P:RDR2.UI.TextElement.Scale"/> used to increase of decrease the size of the <see cref="T:RDR2.UI.TextElement"/>, for no scaling use 1.0f.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.TextElement.Color"/> used to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.#ctor(System.String,System.Drawing.PointF,System.Single,System.Drawing.Color,RDR2.UI.Alignment)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.TextElement"/> class used for drawing text on the screen.
            </summary>
            <param name="caption">The <see cref="T:RDR2.UI.TextElement"/> to draw.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.TextElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="scale">Sets a <see cref="P:RDR2.UI.TextElement.Scale"/> used to increase of decrease the size of the <see cref="T:RDR2.UI.TextElement"/>, for no scaling use 1.0f.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.TextElement.Color"/> used to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="alignment">Sets the <see cref="P:RDR2.UI.TextElement.Alignment"/> used when drawing the text, <see cref="F:RDR2.UI.Alignment.Left"/>,<see cref="F:RDR2.UI.Alignment.Center"/> or <see cref="F:RDR2.UI.Alignment.Right"/>.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.#ctor(System.String,System.Drawing.PointF,System.Single,System.Drawing.Color,RDR2.UI.Alignment,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.TextElement"/> class used for drawing text on the screen.
            </summary>
            <param name="caption">The <see cref="T:RDR2.UI.TextElement"/> to draw.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.TextElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="scale">Sets a <see cref="P:RDR2.UI.TextElement.Scale"/> used to increase of decrease the size of the <see cref="T:RDR2.UI.TextElement"/>, for no scaling use 1.0f.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.TextElement.Color"/> used to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="alignment">Sets the <see cref="P:RDR2.UI.TextElement.Alignment"/> used when drawing the text, <see cref="F:RDR2.UI.Alignment.Left"/>,<see cref="F:RDR2.UI.Alignment.Center"/> or <see cref="F:RDR2.UI.Alignment.Right"/>.</param>
            <param name="shadow">Sets whether or not to draw the <see cref="T:RDR2.UI.TextElement"/> with a <see cref="P:RDR2.UI.TextElement.Shadow"/> effect.</param>
            <param name="outline">Sets whether or not to draw the <see cref="T:RDR2.UI.TextElement"/> with an <see cref="P:RDR2.UI.TextElement.Outline"/> around the letters.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.#ctor(System.String,System.Drawing.PointF,System.Single,System.Drawing.Color,RDR2.UI.Alignment,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:RDR2.UI.TextElement"/> class used for drawing text on the screen.
            </summary>
            <param name="caption">The <see cref="T:RDR2.UI.TextElement"/> to draw.</param>
            <param name="position">Set the <see cref="P:RDR2.UI.TextElement.Position"/> on screen where to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="scale">Sets a <see cref="P:RDR2.UI.TextElement.Scale"/> used to increase of decrease the size of the <see cref="T:RDR2.UI.TextElement"/>, for no scaling use 1.0f.</param>
            <param name="color">Set the <see cref="P:RDR2.UI.TextElement.Color"/> used to draw the <see cref="T:RDR2.UI.TextElement"/>.</param>
            <param name="alignment">Sets the <see cref="P:RDR2.UI.TextElement.Alignment"/> used when drawing the text, <see cref="F:RDR2.UI.Alignment.Left"/>,<see cref="F:RDR2.UI.Alignment.Center"/> or <see cref="F:RDR2.UI.Alignment.Right"/>.</param>
            <param name="shadow">Sets whether or not to draw the <see cref="T:RDR2.UI.TextElement"/> with a <see cref="P:RDR2.UI.TextElement.Shadow"/> effect.</param>
            <param name="outline">Sets whether or not to draw the <see cref="T:RDR2.UI.TextElement"/> with an <see cref="P:RDR2.UI.TextElement.Outline"/> around the letters.</param>
            <param name="wrapWidth">Sets how many horizontal pixel to draw before wrapping the <see cref="T:RDR2.UI.TextElement"/> on the next line down.</param>
        </member>
        <member name="P:RDR2.UI.TextElement.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.TextElement" /> will be drawn.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Color">
            <summary>
            Gets or sets the color of this <see cref="T:RDR2.UI.TextElement" />.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.UI.TextElement" />.
            </summary>
            <value>
            The position scaled on a 1280*720 pixel base.
            </value>
            <remarks>
            If ScaledDraw is called, the position will be scaled by the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </remarks>
        </member>
        <member name="P:RDR2.UI.TextElement.Scale">
            <summary>
            Gets or sets the scale of this <see cref="T:RDR2.UI.TextElement"/>.
            </summary>
            <value>
            The scale usually a value between ~0.5 and 3.0, Default = 1.0
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Caption">
            <summary>
            Gets or sets the text to draw in this <see cref="T:RDR2.UI.TextElement"/>.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Alignment">
            <summary>
            Gets or sets the alignment of this <see cref="T:RDR2.UI.TextElement"/>.
            </summary>
            <value>
            The alignment:<c>Left</c>, <c>Center</c>, <c>Right</c> Justify
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Shadow">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.TextElement"/> is drawn with a shadow effect.
            </summary>
            <value>
              <c>true</c> if shadow; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Outline">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.UI.TextElement"/> is drawn with an outline.
            </summary>
            <value>
              <c>true</c> if outline; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.WrapWidth">
            <summary>
            Gets or sets the maximum size of the <see cref="T:RDR2.UI.TextElement"/> before it wraps to a new line.
            </summary>
            <value>
            The width of the <see cref="T:RDR2.UI.TextElement"/>.
            </value>
        </member>
        <member name="P:RDR2.UI.TextElement.Centered">
            <summary>
            Gets or sets a value indicating whether the alignment of this <see cref="T:RDR2.UI.TextElement" /> is centered.
            See <see cref="P:RDR2.UI.TextElement.Alignment"/>
            </summary>
            <value>
              <c>true</c> if centered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:RDR2.UI.TextElement.Draw">
            <summary>
            Draws the <see cref="T:RDR2.UI.TextElement" /> this frame.
            </summary>
        </member>
        <member name="M:RDR2.UI.TextElement.Draw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.TextElement" /> this frame at the specified offset.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.TextElement" /> using a 1280*720 pixel base.</param>
        </member>
        <member name="M:RDR2.UI.TextElement.ScaledDraw">
            <summary>
            Draws the <see cref="T:RDR2.UI.TextElement" /> this frame using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
        </member>
        <member name="M:RDR2.UI.TextElement.ScaledDraw(System.Drawing.SizeF)">
            <summary>
            Draws the <see cref="T:RDR2.UI.TextElement" /> this frame at the specified offset using the width returned in <see cref="P:RDR2.UI.Screen.ScaledWidth" />.
            </summary>
            <param name="offset">The offset to shift the draw position of this <see cref="T:RDR2.UI.TextElement" /> using a <see cref="P:RDR2.UI.Screen.ScaledWidth" />*720 pixel base.</param>
        </member>
        <member name="M:RDR2.UI.Prompt.CreatePrompt(RDR2.eInputType,RDR2.UI.eUseContextMode,System.String,System.Int32,System.Int32,System.Int32,System.Int32,RDR2.UI.PromptTimingEvent)">
            <summary>
            Create a interactable HUD prompt.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.Text">
            <summary>
            Gets or sets the text on this <see cref="T:RDR2.UI.Prompt"/>.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.Visible">
            <summary>
            Gets or sets the visibility on this <see cref="T:RDR2.UI.Prompt"/>.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.Enabled">
            <summary>
            Gets or sets if this <see cref="T:RDR2.UI.Prompt"/> is enabled.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.IsPressed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/> is pressed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.IsJustPressed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/> is just pressed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.IsReleased">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/> is released.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.IsJustReleased">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/> is just pressed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasHoldModeCompleted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s hold mode has complete.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasMashModeCompleted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s mash mode has completed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasMashModeFailed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s mash mode has failed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasTimedEventCompleted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s timed event completed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasTimedEventFailed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s timed event failed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.HasCompleted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/>s <see cref="F:RDR2.UI.eUseContextMode.Press"/> or <see cref="F:RDR2.UI.eUseContextMode.Release"/> mode has been completed.
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.Priority">
            <summary>
            Sets the <see cref="T:RDR2.UI.Prompt"/> priority level
            </summary>
        </member>
        <member name="P:RDR2.UI.Prompt.IsPulsing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.UI.Prompt"/> is pulsing.
            </summary>
        </member>
        <member name="F:RDR2.UI.eUseContextMode.Rotate">
            <summary>
            Gamepad Only
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsLoaded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> has loaded.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsMetadataLoaded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> has its metadata loaded.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsLoading">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> is loading.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsRunning">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> is running.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsFinished">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> is finished.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsExitingThisFrame">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> is currently exiting this frame.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.HasExited">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> has exited.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsAborted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> is aborted.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsSkippable">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> can be skipped.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.CanBeSkipped">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> can be skipped.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.AnimScene.IsSkippable"/></remarks>
        </member>
        <member name="P:RDR2.AnimScene.WasSkipped">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> was skipped.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.IsPaused">
            <summary>
            Gets or sets whether this <see cref="T:RDR2.AnimScene"/> is paused.
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.Dictionary">
            <summary>
            Gets the dictionary hash of this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.Phase">
            <summary>
            Gets the phase this <see cref="T:RDR2.AnimScene"/> is at
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.Duration">
            <summary>
            Gets the duration length of this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.Time">
            <summary>
            Gets the current time this <see cref="T:RDR2.AnimScene"/> is at
            </summary>
        </member>
        <member name="P:RDR2.AnimScene.Rate">
            <summary>
            Gets or sets this <see cref="T:RDR2.AnimScene"/>'s rate.
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Load">
            <summary>
            Load this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Start">
            <summary>
            Start this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Abort">
            <summary>
            Abort this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Skip">
            <summary>
            Trigger a skip for this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.AnimScene"/> exists.
            </summary>
        </member>
        <member name="M:RDR2.AnimScene.Delete">
            <summary>
            Delete this <see cref="T:RDR2.AnimScene"/>
            </summary>
        </member>
        <member name="T:RDR2.eBlipSprite">
            <summary>
            The sprite icon to set the blip to. Here's a
            <see href="https://cdn.discordapp.com/attachments/450373719974477835/643937562091716638/unknown.png">reference image</see>
            in order from left-to-right by GlitchDetector, and each row indicates the different type.
            </summary>
        </member>
        <member name="M:RDR2.Entity.FromHandle(System.Int32)">
            <summary>
            Creates a new instance of an <see cref="T:RDR2.Entity"/> from the given handle.
            </summary>
            <param name="handle">The entity handle.</param>
            <returns>Returns a <see cref="T:RDR2.Ped"/> if this handle corresponds to a Ped.
            Returns a <see cref="T:RDR2.Vehicle"/> if this handle corresponds to a Vehicle.
            Returns a <see cref="T:RDR2.Prop"/> if this handle corresponds to a Prop.
            Returns <see langword="null"/> otherwise.</returns>
        </member>
        <member name="P:RDR2.Entity.IsDead">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is dead.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAlive">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is alive.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsPed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is a ped.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsObject">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is an object.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is a vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAnimal">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is an animal.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsOccluded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is occluded.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsOnFire">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is on fire.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsOnScreen">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is currently on screen.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsUpright">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is in the upright position.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsUpsideDown">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is upsidedown.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsInAir">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is in the air.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsInWater">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is in water.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsUnderwater">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is  underwater.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsFrozenInPlace">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/>'s position is frozen.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsOwnedByThisScript">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is owned by this script.
            </summary>
        </member>
        <member name="M:RDR2.Entity.RequestOwnership">
            <summary>
            Attempts to request script ownership of this <see cref="T:RDR2.Entity"/> if not already owned.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsStatic">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is static.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsDynamic">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is dynamic.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsInside">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is inside/in a interior.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsVisible">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> is visible.
            </summary>
        </member>
        <member name="P:RDR2.Entity.CarriableState">
            <summary>
            Gets the <see cref="T:RDR2.eCarriableState"/> this <see cref="T:RDR2.Entity"/> is currently in.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Model">
            <summary>
            Gets the model of the current <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Alpha">
            <summary>
            Gets or sets how opaque this <see cref="T:RDR2.Entity"/> is.
            </summary>
            <value>
            0 for completely see through, 255 for fully opaque
            </value>
        </member>
        <member name="P:RDR2.Entity.Opacity">
            <summary>
            Gets or sets how opaque this <see cref="T:RDR2.Entity"/> is.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Entity.Alpha"/></remarks>
            <value>
            0 for completely see through, 255 for fully opaque
            </value>
        </member>
        <member name="P:RDR2.Entity.EntityType">
            <summary>
            Gets the type of the current <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.LodDistance">
            <summary>
            Gets or sets the level of detail distance of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsMissionEntity">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is a mission entity.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsPersistent">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is persistent.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Health">
            <summary>
            Gets or sets the health of this <see cref="T:RDR2.Entity"/> as an <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.MaxHealth">
            <summary>
            Gets or sets the maximum health of this <see cref="T:RDR2.Entity"/> as an <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.Entity"/>.
            If the <see cref="T:RDR2.Entity"/> is <see cref="T:RDR2.Ped"/> and the <see cref="T:RDR2.Ped"/> is in a <see cref="T:RDR2.Vehicle"/>, the <see cref="T:RDR2.Vehicle"/>'s position will be returned or changed.
            </summary>
        </member>
        <member name="P:RDR2.Entity.PositionNoOffset">
            <summary>
            Sets the position of this <see cref="T:RDR2.Entity"/> without any offset.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Rotation">
            <summary>
            Gets or sets the rotation of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Heading">
            <summary>
            Gets or sets the heading or "yaw" of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.SubmergedLevel">
            <summary>
            Gets a value indicating how submersed this <see cref="T:RDR2.Entity"/> is, 1.0f means the whole entity is submerged.
            </summary>
        </member>
        <member name="P:RDR2.Entity.HeightAboveGround">
            <summary>
            Gets how high above ground this <see cref="T:RDR2.Entity"/> is.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Quaternion">
            <summary>
            Gets the quaternion of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.UpVector">
            <summary>
            Gets the vector that points above this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.RightVector">
            <summary>
            Gets the vector that points to the right of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.ForwardVector">
            <summary>
            Gets the vector that points in front of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Forward">
            <summary>
            Gets the vector that points in front of this <see cref="T:RDR2.Entity"/>.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Entity.ForwardVector"/></remarks>
        </member>
        <member name="M:RDR2.Entity.GetOffsetPosition(RDR2.Math.Vector3)">
            <summary>
            Gets the position in world coordinates of an offset relative this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="M:RDR2.Entity.GetPositionOffset(RDR2.Math.Vector3)">
            <summary>
            Gets the relative offset of this <see cref="T:RDR2.Entity"/> from a world coordinates position.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Velocity">
            <summary>
            Gets or sets the velocity of this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.Speed">
            <summary>
            Gets or sets this <see cref="T:RDR2.Entity"/>s speed.
            </summary>
            <value>
            The speed in m/s.
            </value>
        </member>
        <member name="P:RDR2.Entity.IsInvincible">
            <summary>
            Sets a value indicating whether this <see cref="T:RDR2.Entity"/> is invincible.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsOnlyDamagedByPlayer">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> can only be damaged by <see cref="T:RDR2.Player"/>s.
            </summary>
        </member>
        <member name="P:RDR2.Entity.CanBeDamaged">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> can be damaged.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsBulletProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is bullet proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsFlameProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is flame proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsExplosionProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is explosion proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsCollisionProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is collision proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsMeleeProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is melee proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsSteamProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is steam proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsSmokeProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is smoke proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsHeadshotProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is headshot proof.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsProjectileProof">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> is projectile proof.
            </summary>
        </member>
        <member name="M:RDR2.Entity.ClearProofs">
            <summary>
            Removes all proofs that are set on this <see cref="T:RDR2.Entity"/>
            </summary>
        </member>
        <member name="P:RDR2.Entity.ProofBits">
            <summary>
            Gets or sets the proofs currently set on this <see cref="T:RDR2.Entity"/> via bits
            </summary>
        </member>
        <member name="P:RDR2.Entity.HasCollision">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> has collision.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsCollisionEnabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> has collision.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Entity.HasCollision"/></remarks>
        </member>
        <member name="P:RDR2.Entity.HasCollidedWithAnything">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Entity"/> has recently collided with anything.
            </summary>
        </member>
        <member name="M:RDR2.Entity.SetNoCollision(RDR2.Entity,System.Boolean)">
            <summary>
            Sets the collision between this <see cref="T:RDR2.Entity"/> and another <see cref="T:RDR2.Entity"/>
            </summary>
            <param name="entity">The <see cref="T:RDR2.Entity"/> to set collision with</param>
            <param name="toggle">if set to <see langword="true" /> the 2 <see cref="T:RDR2.Entity"/>s wont collide with each other.</param>
        </member>
        <member name="M:RDR2.Entity.IsInArea(RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is in a specified area
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsInArea(RDR2.Math.Vector3,RDR2.Math.Vector3,System.Single)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is in a specified angled area
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsInAngledArea(RDR2.Math.Vector3,RDR2.Math.Vector3,System.Single)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is in a specified angled area
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsInRangeOf(RDR2.Math.Vector3,System.Single)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is in range of a specified position
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsNearEntity(RDR2.Entity,RDR2.Math.Vector3)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is near a specified <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsAtEntity(RDR2.Entity,RDR2.Math.Vector3)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is near a specified <see cref="T:RDR2.Entity"/>.
            </summary>
            <remarks>This is an alias for <see cref="M:RDR2.Entity.IsNearEntity(RDR2.Entity,RDR2.Math.Vector3)"/></remarks>
        </member>
        <member name="M:RDR2.Entity.IsTouching(RDR2.Model)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is touching an <see cref="T:RDR2.Entity"/> with the <see cref="P:RDR2.Entity.Model"/> <paramref name="model"/>.
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsTouching(RDR2.Entity)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is touching the <see cref="T:RDR2.Entity"/> <paramref name="entity"/>.
            </summary>
        </member>
        <member name="M:RDR2.Entity.AddBlip(RDR2.BlipType)">
            <summary>
            Creates a <see cref="T:RDR2.Blip"/> on this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.GetBlip">
            <summary>
            Gets the <see cref="T:RDR2.Blip"/> on this <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAttached">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is attached to any other <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAttachedToAnyObject">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is attached to a <see cref="T:RDR2.Prop"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAttachedToAnyPed">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is attached to a <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.Entity.IsAttachedToAnyVehicle">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is attached to a <see cref="T:RDR2.Vehicle"/>.
            </summary>
        </member>
        <member name="M:RDR2.Entity.Detach">
            <summary>
            Detaches this <see cref="T:RDR2.Entity"/> from any <see cref="T:RDR2.Entity"/> it may be attached to.
            </summary>
        </member>
        <member name="M:RDR2.Entity.AttachTo(RDR2.Entity,System.Int32)">
            <summary>
            Attach this <see cref="T:RDR2.Entity"/> to another <see cref="T:RDR2.Entity"/>
            </summary>
        </member>
        <member name="M:RDR2.Entity.AttachTo(RDR2.Entity,System.Int32,RDR2.Math.Vector3,RDR2.Math.Vector3)">
            <summary>
            Attach this <see cref="T:RDR2.Entity"/> to another <see cref="T:RDR2.Entity"/>
            </summary>
        </member>
        <member name="M:RDR2.Entity.IsAttachedTo(RDR2.Entity)">
            <summary>
            Determines whether this <see cref="T:RDR2.Entity"/> is attached to the specified <see cref="T:RDR2.Entity"/>.
            </summary>
            <param name="entity">The <see cref="T:RDR2.Entity"/> to check if this <see cref="T:RDR2.Entity"/> is attached to.</param>
            <returns>
              <see langword="true" /> if this <see cref="T:RDR2.Entity"/> is attached to <paramref name="entity"/>; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:RDR2.Entity.GetEntityAttachedTo">
            <summary>
            Gets the <see cref="T:RDR2.Entity"/> this <see cref="T:RDR2.Entity"/> is attached to.
            </summary>
        </member>
        <member name="M:RDR2.Entity.Delete">
            <summary>
            Instantly delete this <see cref="T:RDR2.Entity"/> from the game world.
            </summary>
        </member>
        <member name="M:RDR2.Entity.Exists">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Entity"/> exists in the game world.
            </summary>
        </member>
        <member name="M:RDR2.Entity.Exists(RDR2.Entity)">
            <summary>
            Gets a value indicating whether an <see cref="T:RDR2.Entity"/> is not <see langword="null"/>, and exists in the game world.
            </summary>
            <returns><see langword="true"/> if <see cref="T:RDR2.Entity"/> is not <see langword="null"/> and exists in the game world; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:RDR2.Model.Hash">
            <summary>
            Gets the hash for this <see cref="T:RDR2.Model"/>.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsValid">
            <summary>
            Gets if this <see cref="T:RDR2.Model"/> is valid.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsInCdImage">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is in the CD image.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsLoaded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is loaded so it can be spawned.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsCollisionLoaded">
            <summary>
            Gets a value indicating whether the collision for this <see cref="T:RDR2.Model"/> is loaded.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsPed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is a ped.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsObject">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is an object.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsBoat">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is a boat.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsTrain">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is a train.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsDraftVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is a draft vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Model.IsHorse">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Model"/> is horse.
            </summary>
        </member>
        <member name="M:RDR2.Model.Request">
            <summary>
            Request this <see cref="T:RDR2.Model"/> to be loaded into memory. Remember to mark this <see cref="T:RDR2.Model"/> as no longer needed when you are done with this <see cref="T:RDR2.Model"/>.
            </summary>
        </member>
        <member name="M:RDR2.Model.Request(System.Int32)">
            <summary>
            Request this <see cref="T:RDR2.Model"/> to be loaded into memory. Remember to mark this <see cref="T:RDR2.Model"/> as no longer needed when you are done with this <see cref="T:RDR2.Model"/>.
            </summary>
        </member>
        <member name="P:RDR2.Model.Dimensions">
            <summary>
            Gets the dimensions of this <see cref="T:RDR2.Model"/>.
            </summary>
            <returns>
            rearBottomLeft is the minimum dimensions, which contains the rear bottom left relative offset from the origin of the model,
             frontTopRight is the maximum dimensions, which contains the front top right relative offset from the origin of the model.
            </returns>
        </member>
        <member name="P:RDR2.Ped.IsPlayer">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is a player.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsDeadOrDying">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is dead or dying.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsAimingFromCover">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is aiming while in cover.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsGoingIntoCover">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is going into cover.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsCarryingSomething">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is carrying something.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsReadToRender">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is ready to render.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsUsingActionMode">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is using an action mode.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsUsingScenario">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is using a scenario.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInScenario">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in a scenario.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Ped.IsUsingScenario"/></remarks>
        </member>
        <member name="P:RDR2.Ped.IsChild">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is a child.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsCowering">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is cowering.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsDrunk">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is drunk.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsIntimidated">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is intimidated.
            </summary>
        </member>
        <member name="M:RDR2.Ped.Clone">
            <summary>
            Spawn an identical clone of this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="M:RDR2.Ped.Kill">
            <summary>
            Instantly kill this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="M:RDR2.Ped.Resurrect">
            <summary>
            Resurrects this <see cref="T:RDR2.Ped"/> from death.
            </summary>
        </member>
        <member name="M:RDR2.Ped.Revive">
            <summary>
            Revives this <see cref="T:RDR2.Ped"/> from death.
            </summary>
            <remarks>This is an alias for <see cref="M:RDR2.Ped.Resurrect"/></remarks>
        </member>
        <member name="P:RDR2.Ped.IsHuman">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is human.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsCuffed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is handcuffed.
            </summary>
        </member>
        <member name="P:RDR2.Ped.Gender">
            <summary>
            Gets the gender of this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.Ped.Scale">
            <summary>
            Sets the scale of this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.Ped.Sweat">
            <summary>
            Sets how much sweat should be rendered on this <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.Ped.WetnessHeight">
            <summary>
            Sets how high up on this <see cref="T:RDR2.Ped"/>s body water should be visible.
            </summary>
            <value>
            The height ranges from 0.0f to 1.99f, 0.0f being no water visible, 1.99f being covered in water.
            </value>
        </member>
        <member name="M:RDR2.Ped.Clean">
            <summary>
            Clean this <see cref="T:RDR2.Ped"/> from dirt, mud, snow, water, etc
            </summary>
        </member>
        <member name="M:RDR2.Ped.RandomizeOutfit">
            <summary>
            Randomize this <see cref="T:RDR2.Ped"/> outfit
            </summary>
        </member>
        <member name="M:RDR2.Ped.UpdateVariation">
            <summary>
            Update variation on this <see cref="T:RDR2.Ped"/>, needed after first creation, or when component or texture/overlay is changed.
            </summary>
        </member>
        <member name="M:RDR2.Ped.EquipOutfitComponent(System.UInt32)">
            <summary>
            Equip a specific outfit component on this <see cref="T:RDR2.Ped"/>.
            Must call <see cref="M:RDR2.Ped.UpdateVariation"/> to see changes.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsBeingArrested">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being arrested.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsExitingScenario">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is exiting/leaving a scenario.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsGettingUp">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is getting up from the ground.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsWrithing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is writhing.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsRunning">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is running.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsSprinting">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is sprinting.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsStandingStill">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is standing still.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsWalking">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is walking.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsAimingInTheAir">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is aiming in the air.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsArrestingAPed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is arresting another <see cref="T:RDR2.Ped"/>
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsLeadingHorse">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is leading a horse.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsClimbing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is climbing.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsDiving">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is diving.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsJumping">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is jumping.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsProne">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is prone.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsSitting">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is sitting.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsStopped">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is stopped.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsSwimming">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is swimming.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsSwimmingUnderwater">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is swimming underwater.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsClimbingLadder">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is climbing a ladder.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsVaulting">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is vaulting over something.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsSliding">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is sliding.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsOpeningDoor">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is opening a door.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsIdle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is idle.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Ped.IsStandingStill"/></remarks>
        </member>
        <member name="M:RDR2.Ped.IsHeadTrackingEntity(RDR2.Entity)">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is headtracking an <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="P:RDR2.Ped.AlwaysKeepTask">
            <summary>
            Set a value indicating whether this <see cref="T:RDR2.Ped"/> should keep scripted tasks.
            </summary>
        </member>
        <member name="P:RDR2.Ped.BlockPermanentEvents">
            <summary>
            Set a value indicating whether this <see cref="T:RDR2.Ped"/> should block non temporary events.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsRagdoll">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is ragdolling.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsFalling">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is falling.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsFallingOver">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is falling over.
            </summary>
        </member>
        <member name="P:RDR2.Ped.CanRagdoll">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is ragdolling.
            </summary>
        </member>
        <member name="M:RDR2.Ped.StopRagdoll">
            <summary>
            Set this <see cref="T:RDR2.Ped"/> to stop ragdolling.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsLassoed">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being lassoed.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsShooting">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is shooting.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsReloading">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is reloading.
            </summary>
        </member>
        <member name="P:RDR2.Ped.Accuracy">
            <summary>
            Gets or sets how accurate this <see cref="T:RDR2.Ped"/>s shooting ability is.
             The higher the value of this property is, the more likely it is that this <see cref="T:RDR2.Ped"/> will shoot at exactly where they are aiming at.
            </summary>
            <value>
            The accuracy from 0 to 100, 0 being very inaccurate, which means this <see cref="T:RDR2.Ped"/> cannot shoot at exactly where they are aiming at,
             100 being perfectly accurate.
            </value>
        </member>
        <member name="P:RDR2.Ped.ShootRate">
            <summary>
            Sets the rate this <see cref="T:RDR2.Ped"/> will shoot at.
            </summary>
            <value>
            The shoot rate from 0 to 1000. 100 is the default value.
            </value>
        </member>
        <member name="P:RDR2.Ped.IsInBoat">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in a boat.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInTrain">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in a train.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in a vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsJacking">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is jacking another <see cref="T:RDR2.Ped"/>.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsOnFoot">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is on foot.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsOnHorse">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is on a horse.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsOnMount">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is on a mount.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Ped.IsOnHorse"/></remarks>
        </member>
        <member name="P:RDR2.Ped.IsSittingInVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is sitting in a vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsEnteringVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is getting into a vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsGettingIntoAVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is getting into a vehicle.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Ped.IsEnteringVehicle"/></remarks>
        </member>
        <member name="P:RDR2.Ped.IsEnteringTransport">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is entering transport.
            </summary>
        </member>
        <member name="P:RDR2.Ped.CurrentMount">
            <summary>
            Gets the mount that this <see cref="T:RDR2.Ped"/> is currently on.
            </summary>
        </member>
        <member name="M:RDR2.Ped.IsInThisVehicle(RDR2.Vehicle)">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in a specific vehicle.
            </summary>
        </member>
        <member name="M:RDR2.Ped.IsSittingInThisVehicle(RDR2.Vehicle)">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is sitting in a specific vehicle.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsBeingHogtied">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being hogtied.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsBeingJacked">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being jacked.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsBeingStealthKilled">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being stealth killed.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsBeingStunned">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is being stunned.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsFleeing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is fleeing.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsHogtied">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is hogtied.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsHogtying">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is hogtying.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInCombat">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is in combat.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInMeleeCombat">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is melee combat.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsRespondingToThreat">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is responding to a threat.
            </summary>
        </member>
        <member name="P:RDR2.Ped.CanWrithe">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Ped"/> can writhe.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsIncapacitated">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is incapacitated.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsInjured">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is injured.
            </summary>
        </member>
        <member name="P:RDR2.Ped.IsFatallyInjured">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Ped"/> is fatally injured.
            </summary>
        </member>
        <member name="P:RDR2.Ped.DropsWeaponsOnDeath">
            <summary>
            Set this <see cref="T:RDR2.Ped"/> is drop his weapons on death.
            </summary>
        </member>
        <member name="P:RDR2.Ped.Voice">
            <summary>
            Set the voice this <see cref="T:RDR2.Ped"/> has
            </summary>
        </member>
        <member name="M:RDR2.Ped.PlaySpeech(System.String,System.String,RDR2.eSpeechParams,System.Int32)">
            <summary>
            Play a speech on this <see cref="T:RDR2.Ped"/>
            </summary>
        </member>
        <member name="P:RDR2.RelationshipGroup.Hash">
            <summary>
            Gets the hash for this <see cref="T:RDR2.RelationshipGroup"/>.
            </summary>
        </member>
        <member name="P:RDR2.RelationshipGroup.NativeValue">
            <summary>
            Gets the native representation of this <see cref="T:RDR2.RelationshipGroup"/>.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsDraftVehicle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is xxx.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsOnAllWheels">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is on all of its wheels.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsStopped">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is stopped.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsWrecked">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is wrecked.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsOnFire">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is on fire.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.IsStolen">
            <summary>
            Sets a value indicating whether this <see cref="T:RDR2.Vehicle"/> is stolen.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.ProvidesCover">
            <summary>
            Sets a value indicating whether this <see cref="T:RDR2.Vehicle"/> can provide cover.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.BodyHealth">
            <summary>
            Gets or sets this <see cref="T:RDR2.Vehicle"/>s body health.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.Speed">
            <summary>
            Gets or sets this <see cref="T:RDR2.Vehicle"/>s speed.
            </summary>
        </member>
        <member name="M:RDR2.Vehicle.Repair">
            <summary>
            Repair all damage to this <see cref="T:RDR2.Vehicle"/> instantaneously.
            </summary>
        </member>
        <member name="M:RDR2.Vehicle.Explode">
            <summary>
            Explode this <see cref="T:RDR2.Vehicle"/> instantaneously.
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.Driver">
            <summary>
            Gets the driver of this <see cref="T:RDR2.Vehicle"/>
            </summary>
        </member>
        <member name="M:RDR2.Vehicle.GetPedInSeat(RDR2.eVehicleSeat)">
            <summary>
            Gets the <see cref="T:RDR2.Ped"/> thats in the specified <see cref="T:RDR2.eVehicleSeat"/>
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.Occupants">
            <summary>
            Returns an <see cref="T:System.Array"/> of all occupants in this <see cref="T:RDR2.Vehicle"/>, INCLUDING the driver
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.Passengers">
            <summary>
            Returns an <see cref="T:System.Array"/> of all passengers in this <see cref="T:RDR2.Vehicle"/>, EXCLUDING the driver
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.PassengerCount">
            <summary>
            Gets the current number of passengers in this <see cref="T:RDR2.Vehicle"/>
            </summary>
        </member>
        <member name="P:RDR2.Vehicle.PassengerSeats">
            <summary>
            Gets the max number of passengers this <see cref="T:RDR2.Vehicle"/> can have
            </summary>
        </member>
        <member name="P:RDR2.Game.FrameTime">
            <summary>
            Get the interval in seconds from the last frame to the current one
            </summary>
        </member>
        <member name="P:RDR2.Game.DeltaTime">
            <summary>
            Get the interval in seconds from the last frame to the current one
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Game.FrameTime"/></remarks>
        </member>
        <member name="P:RDR2.Game.FPS">
            <summary>
            Gets the current frame rate in frames per second.
            </summary>
        </member>
        <member name="P:RDR2.Game.GameTime">
            <summary>
            Gets how many milliseconds the game has been open in this session
            </summary>
        </member>
        <member name="P:RDR2.Game.FrameCount">
            <summary>
            Gets the total number of frames that have been rendered in this session.
            </summary>
        </member>
        <member name="P:RDR2.Game.ScreenResolution">
            <summary>
            Gets the game window screen resolution
            </summary>
        </member>
        <member name="P:RDR2.Game.Player">
            <summary>
            Gets the main <see cref="T:RDR2.Player"/> that you are controlling.
            </summary>
        </member>
        <member name="P:RDR2.Game.PlayerBlip">
            <summary>
            Gets the blip of the <see cref="T:RDR2.Player"/> that you are controlling.
            </summary>
        </member>
        <member name="P:RDR2.Game.Version">
            <summary>
            Gets the version of the game.
            </summary>
        </member>
        <member name="P:RDR2.Game.Globals">
            <summary>
            Get the games script globals as a collection
            </summary>
        </member>
        <member name="M:RDR2.Game.GetGlobalPtr(System.Int32)">
            <summary>
            Gets an instance of a <see cref="T:RDR2.Global"/> that holds data to a script global.
            </summary>
            <remarks>Make sure that you check the game version before accessing globals. ID's may differ between patches.</remarks>
            <param name="globalId">The script global index</param>
            <returns>An instance to a script <see cref="T:RDR2.Global"/></returns>
        </member>
        <member name="P:RDR2.Game.IsCutsceneActive">
            <summary>
            Gets a value indicating whether a cutscene is currently playing.
            </summary>
        </member>
        <member name="P:RDR2.Game.InCutscene">
            <summary>
            Gets a value indicating whether a cutscene is currently playing.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Game.IsCutsceneActive"/></remarks>
        </member>
        <member name="P:RDR2.Game.IsPaused">
            <summary>
            Gets or sets a value indicating whether the pause menu is active.
            </summary>
        </member>
        <member name="M:RDR2.Game.Pause(System.Boolean)">
            <summary>
            Pause/resume the game.
            </summary>
        </member>
        <member name="M:RDR2.Game.PauseClock(System.Boolean)">
            <summary>
            Pause/resume the in-game clock
            </summary>
        </member>
        <member name="P:RDR2.Game.IsLoading">
            <summary>
            Gets a value indicating whether there is a loading screen being displayed.
            </summary>
        </member>
        <member name="P:RDR2.Game.IsScreenFadedIn">
            <summary>
            Gets a value indicating whether the screen is currently faded in
            </summary>
        </member>
        <member name="P:RDR2.Game.IsScreenFadedOut">
            <summary>
            Gets a value indicating whether the screen is currently faded out
            </summary>
        </member>
        <member name="P:RDR2.Game.IsScreenFadingIn">
            <summary>
            Gets a value indicating whether the screen is currently fading in
            </summary>
        </member>
        <member name="P:RDR2.Game.IsScreenFadingOut">
            <summary>
            Gets a value indicating whether the screen is currently fading out
            </summary>
        </member>
        <member name="M:RDR2.Game.FadeScreenIn(System.Int32)">
            <summary>
            Fade the screen in
            </summary>
        </member>
        <member name="M:RDR2.Game.FadeScreenOut(System.Int32)">
            <summary>
            Fade the screen out
            </summary>
        </member>
        <member name="P:RDR2.Game.IsWaypointActive">
            <summary>
            Gets a value indicating whether there is a waypoint set on the map.
            </summary>
        </member>
        <member name="P:RDR2.Game.TimeScale">
            <summary>
            Gets the time scale of the game.
            </summary>
        </member>
        <member name="P:RDR2.Game.RadarZoom">
            <summary>
            Set the zoom on the minimap/radar
            </summary>
        </member>
        <member name="P:RDR2.Game.MinimapZoom">
            <summary>
            Set the zoom on the minimap/radar
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Game.RadarZoom"/></remarks>
        </member>
        <member name="P:RDR2.Game.IsMissionActive">
            <summary>
            Gets or sets a value informing the engine if a mission is in progress.
            </summary>
        </member>
        <member name="P:RDR2.Game.InMission">
            <summary>
            Gets or sets a value informing the engine if a mission is in progress.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Game.IsMissionActive"/></remarks>
        </member>
        <member name="P:RDR2.Game.ShowsPoliceBlipsOnRadar">
            <summary>
            Set whether police/lawmen blips should appear on the radar/minimap.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetUserInput(System.Int32)">
            <summary>
            Creates an onscreen keyboard for the user to input text.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetUserInput(System.String,System.Int32)">
            <summary>
            Creates an onscreen keyboard for the user to input text.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetUserInput(System.String,System.String,System.Int32)">
            <summary>
            Creates an onscreen keyboard for the user to input text.
            </summary>
        </member>
        <member name="P:RDR2.Game.LastInputMethod">
            <summary>
            Gets whether the last input was made with a GamePad or keyboard and mouse.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetControlValue(RDR2.eInputType)">
            <summary>
            Gets an analog value of a <see cref="T:RDR2.eInputType"/> input.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetControlNormal(RDR2.eInputType)">
            <summary>
            Gets an analog value of a <see cref="T:RDR2.eInputType"/> input between -1.0f and 1.0f.
            </summary>
        </member>
        <member name="M:RDR2.Game.GetDisabledControlNormal(RDR2.eInputType)">
            <summary>
            Gets an analog value of a disabled <see cref="T:RDR2.eInputType"/> input between -1.0f and 1.0f.
            </summary>
        </member>
        <member name="M:RDR2.Game.SetControlNormal(RDR2.eInputType,System.Single)">
            <summary>
            Override a <see cref="T:RDR2.eInputType"/> by giving it a user-defined value for this frame.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsControlEnabled(RDR2.eInputType)">
            <summary>
            Gets whether a <see cref="T:RDR2.eInputType"/> control is currently enabled.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsControlPressed(RDR2.eInputType)">
            <summary>
            Gets whether a enabled <see cref="T:RDR2.eInputType"/> control is currently pressed.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsControlJustPressed(RDR2.eInputType)">
            <summary>
            Gets whether a enabled <see cref="T:RDR2.eInputType"/> control was just pressed.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsControlJustReleased(RDR2.eInputType)">
            <summary>
            Gets whether a enabled <see cref="T:RDR2.eInputType"/> control was just released.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsControlReleased(RDR2.eInputType)">
            <summary>
            Gets whether a enabled <see cref="T:RDR2.eInputType"/> control is not pressed.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsDisabledControlPressed(RDR2.eInputType)">
            <summary>
            Gets whether a disabled <see cref="T:RDR2.eInputType"/> control is currently pressed.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsDisabledControlJustPressed(RDR2.eInputType)">
            <summary>
            Gets whether a disabled <see cref="T:RDR2.eInputType"/> control was just pressed.
            </summary>
        </member>
        <member name="M:RDR2.Game.IsDisabledControlJustReleased(RDR2.eInputType)">
            <summary>
            Gets whether a disabled <see cref="T:RDR2.eInputType"/> control was just released.
            </summary>
        </member>
        <member name="M:RDR2.Game.EnableControlThisFrame(RDR2.eInputType)">
            <summary>
            Enable a given <see cref="T:RDR2.eInputType"/> control for one frame
            </summary>
        </member>
        <member name="M:RDR2.Game.DisableControlThisFrame(RDR2.eInputType)">
            <summary>
            Disable a given <see cref="T:RDR2.eInputType"/> control for one frame
            </summary>
        </member>
        <member name="M:RDR2.Game.DisableAllControlsThisFrame">
            <summary>
            Disables all <see cref="T:RDR2.eInputType"/> controls this frame.
            </summary>
        </member>
        <member name="P:RDR2.Game.LastInputTime">
            <summary>
            Get how long ago since any input was given in milliseconds
            </summary>
        </member>
        <member name="P:RDR2.Game.IsUsingKeyboardAndMouse">
            <summary>
            Gets a value indicating whether the game is using keyboard and mouse input
            </summary>
        </member>
        <member name="M:RDR2.Game.Joaat(System.String)">
            <summary>
            Create a (case-insensitive) Jenkins-One-at-a-Time hash key
            </summary>
        </member>
        <member name="M:RDR2.Game.GetGXTEntry(System.String)">
            <summary>
            Get a GXT label entry
            </summary>
        </member>
        <member name="M:RDR2.Game.DoesGXTEntryExist(System.String)">
            <summary>
            Check whether the given GXT label entry exists
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.FieldOfView">
            <summary>
            Gets the field of view of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsRendering">
            <summary>
            Gets a value indicating whether the <see cref="T:RDR2.GameplayCamera"/> is rendering.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsAimCamActive">
            <summary>
            Gets a value indicating whether the aiming camera is rendering.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsFirstPersonAimCamActive">
            <summary>
            Gets a value indicating whether the first person aiming camera is rendering.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsLookingBehind">
            <summary>
            Gets a value indicating whether the <see cref="T:RDR2.GameplayCamera"/> is looking behind.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsShaking">
            <summary>
            Gets a value indicating whether the <see cref="T:RDR2.GameplayCamera"/> is shaking.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsInFirstPerson">
            <summary>
            Gets a value indicating whether the <see cref="T:RDR2.GameplayCamera"/> is in first person.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.IsInThirdPerson">
            <summary>
            Gets a value indicating whether the <see cref="T:RDR2.GameplayCamera"/> is in third person.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.Zoom">
            <summary>
            Set the zoom of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.Position">
            <summary>
            Gets the position of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.Rotation">
            <summary>
            Gets the rotation of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.Direction">
            <summary>
            Gets the direction the <see cref="T:RDR2.GameplayCamera"/> is pointing in.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.ForwardVector">
            <summary>
            Gets the forward vector of the <see cref="T:RDR2.GameplayCamera"/>, see also <seealso cref="P:RDR2.GameplayCamera.Direction"/>.
            </summary>
        </member>
        <member name="M:RDR2.GameplayCamera.ClampYaw(System.Single,System.Single)">
            <summary>
            Clamps the yaw of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
            <param name="min">The minimum yaw value.</param>
            <param name="max">The maximum yaw value.</param>
        </member>
        <member name="M:RDR2.GameplayCamera.ClampPitch(System.Single,System.Single)">
            <summary>
            Clamps the pitch of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
            <param name="min">The minimum pitch value.</param>
            <param name="max">The maximum pitch value.</param>
        </member>
        <member name="P:RDR2.GameplayCamera.RelativePitch">
            <summary>
            Gets or sets the relative pitch of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="P:RDR2.GameplayCamera.RelativeHeading">
            <summary>
            Gets or sets the relative heading of the <see cref="T:RDR2.GameplayCamera"/>.
            </summary>
        </member>
        <member name="M:RDR2.GlobalCollection.Get(System.Int32)">
            <summary>
            Returns an instance of <see cref="T:RDR2.Global"/> to a script global.
            </summary>
            <remarks>Make sure that you check the game version before accessing globals. ID's may differ between patches.</remarks>
            <param name="globalId">The script global index</param>
        </member>
        <member name="P:RDR2.Player.Name">
            <summary>
            Gets the Social Club name of this <see cref="T:RDR2.Player"/>.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsDead">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is dead.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsAlive">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is alive.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsAiming">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is aiming with a weapon.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsClimbing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is climbing.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsRidingTrain">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is riding a train.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsTargettingAnything">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is targetting something.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsFreeFocusing">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is free focusing on something.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsInDeadEye">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is currently in Dead Eye.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsInEagleEye">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is currently in Eagle Eye.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsWanted">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is currently wanted by police/lawmen.
            </summary>
        </member>
        <member name="P:RDR2.Player.IsPlaying">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is playing.
            </summary>
        </member>
        <member name="P:RDR2.Player.CanStartMission">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> can start a story mission.
            </summary>
        </member>
        <member name="P:RDR2.Player.LastVehicle">
            <summary>
            Gets the <see cref="T:RDR2.Vehicle"/> that this <see cref="T:RDR2.Player"/> last entered.
            </summary>
        </member>
        <member name="P:RDR2.Player.ActiveHorse">
            <summary>
            Gets the <see cref="T:RDR2.Player"/>'s currently active horse
            </summary>
        </member>
        <member name="P:RDR2.Player.IsControlOn">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> can control himself.
            </summary>
            <remarks>Use <see cref="M:RDR2.Player.SetPlayerControl(System.Boolean,RDR2.eSetPlayerControlFlags,System.Boolean)"/> to change this value.</remarks>
        </member>
        <member name="P:RDR2.Player.Character">
            <summary>
            Gets the <see cref="T:RDR2.Ped"/> this <see cref="T:RDR2.Player"/> is controlling.
            </summary>
        </member>
        <member name="P:RDR2.Player.Ped">
            <summary>
            Gets the <see cref="T:RDR2.Ped"/> this <see cref="T:RDR2.Player"/> is controlling.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Player.Character"/></remarks>
        </member>
        <member name="P:RDR2.Player.Money">
            <summary>
            Gets or sets how much money this <see cref="T:RDR2.Player"/> has.
            </summary>
        </member>
        <member name="P:RDR2.Player.Cash">
            <summary>
            Gets or sets how much money this <see cref="T:RDR2.Player"/> has.
            </summary>
            <remarks>This is an alias for <see cref="P:RDR2.Player.Money"/></remarks>
        </member>
        <member name="P:RDR2.Player.Bounty">
            <summary>
            Gets or sets this <see cref="T:RDR2.Player"/>'s bounty amount.
            </summary>
        </member>
        <member name="P:RDR2.Player.Invincible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:RDR2.Player"/> is invincible.
            </summary>
        </member>
        <member name="P:RDR2.Player.IgnoredByEveryone">
            <summary>
            Sets a value indicating whether this <see cref="T:RDR2.Player"/> is ignored by everyone.
            </summary>
            <remarks>This should be set every frame (if possible) to take full effect</remarks>
        </member>
        <member name="P:RDR2.Player.CanUseCover">
            <summary>
            Sets a value indicating whether this <see cref="T:RDR2.Player"/> can use cover.
            </summary>
        </member>
        <member name="M:RDR2.Player.SetPlayerControl(System.Boolean,RDR2.eSetPlayerControlFlags,System.Boolean)">
            <summary>
            Set whether this <see cref="T:RDR2.Player"/> can control himself or not.
            </summary>
            <param name="bEnabled">Whether control is enabled or not.</param>
            <param name="iFlags">Flags that affect how player control is handled</param>
            <param name="bPreventHeadingChange">Whether the player can still rotate his <see cref="P:RDR2.Player.Character"/>.</param>
        </member>
        <member name="M:RDR2.Player.ChangeModel(RDR2.Model)">
            <summary>
            Attempts to change the <see cref="T:RDR2.Model"/> of this <see cref="T:RDR2.Player"/>.
            </summary>
            <param name="model">The <see cref="T:RDR2.Model"/> to change this <see cref="T:RDR2.Player"/> to.</param>
            <returns><see langword="true" /> if the change was successful; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:RDR2.Player.IsAimingAtEntity(RDR2.Entity)">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Player"/> is aiming at the passed <see cref="T:RDR2.Entity"/>.
            </summary>
        </member>
        <member name="M:RDR2.Player.GetFreeAimEntity">
            <summary>
            Gets the <see cref="T:RDR2.Entity"/> that this <see cref="T:RDR2.Player"/> is aiming at.
            </summary>
        </member>
        <member name="M:RDR2.Player.GetInteractionLockonTargetEntity">
            <summary>
            Gets the <see cref="T:RDR2.Entity"/> that this <see cref="T:RDR2.Player"/> is locking onto via interaction.
            </summary>
        </member>
        <member name="M:RDR2.Player.DisableFiringThisFrame(System.Boolean)">
            <summary>
            Prevents this <see cref="T:RDR2.Player"/> from firing for one frame.
            </summary>
        </member>
        <member name="M:RDR2.Player.SetSuperJumpThisFrame">
            <summary>
            Allows this <see cref="T:RDR2.Player"/> jump really high for one frame.
            </summary>
        </member>
        <member name="T:RDR2.ISpatial">
            <summary>
            An object with position and rotation information.
            </summary>
        </member>
        <member name="T:RDR2.IExistable">
            <summary>
            An object that can exist in the world.
            </summary>
        </member>
        <member name="T:RDR2.IDeletable">
            <summary>
            An object that can be deleted from the world.
            </summary>
        </member>
        <member name="T:RDR2.PoolObject">
            <summary>
            An object that resides in one of the available object pools.
            </summary>
        </member>
        <member name="P:RDR2.PoolObject.Handle">
            <summary>
            The handle of the object.
            </summary>
        </member>
        <member name="P:RDR2.PoolObject.NativeValue">
            <summary>
            The handle of the object translated to a native value.
            </summary>
        </member>
        <member name="T:RDR2.Script">
            <summary>
            A base class for all user scripts to inherit.
            Only scripts that inherit directly from this class and have a default (parameterless) public constructor will be detected and started.
            </summary>
        </member>
        <member name="E:RDR2.Script.Tick">
            <summary>
            An event that is raised every tick of the script.
            Put code that needs to be looped each frame in here.
            </summary>
        </member>
        <member name="E:RDR2.Script.Aborted">
            <summary>
            An event that is raised when this <see cref="T:RDR2.Script"/> gets aborted for any reason.
            This should be used for cleaning up anything created during this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="E:RDR2.Script.KeyUp">
            <summary>
            An event that is raised when a key is lifted.
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> contains the key that was lifted.
            </summary>
        </member>
        <member name="E:RDR2.Script.KeyDown">
            <summary>
            An event that is raised when a key is first pressed.
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> contains the key that was pressed.
            </summary>
        </member>
        <member name="P:RDR2.Script.Name">
            <summary>
            Gets the name of this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="P:RDR2.Script.FileName">
            <summary>
            Gets the file name of this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="P:RDR2.Script.BaseDirectory">
            <summary>
            Gets the Directory where this <see cref="T:RDR2.Script"/> is stored.
            </summary>
        </member>
        <member name="P:RDR2.Script.IsPaused">
            <summary>
            Checks if this <see cref="T:RDR2.Script"/> is paused.
            </summary>
        </member>
        <member name="P:RDR2.Script.IsRunning">
            <summary>
            Checks if this <see cref="T:RDR2.Script"/> is running.
            </summary>
        </member>
        <member name="P:RDR2.Script.IsExecuting">
            <summary>
            Checks if this <see cref="T:RDR2.Script"/> is executing.
            </summary>
        </member>
        <member name="P:RDR2.Script.Settings">
            <summary>
            Gets an INI file associated with this <see cref="T:RDR2.Script"/>.
            The File will be in the same location as this <see cref="T:RDR2.Script"/> but with an extension of ".ini".
            Use this to save and load settings for this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="P:RDR2.Script.Interval">
            <summary>
            Gets or sets the interval in ms between <see cref="E:RDR2.Script.Tick"/> for this <see cref="T:RDR2.Script"/>.
            Default value is 0 meaning the event will execute once each frame.
            </summary>
        </member>
        <member name="M:RDR2.Script.ToString">
            <summary>
            Returns a string that represents this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="M:RDR2.Script.GetRelativeFilePath(System.String)">
            <summary>
            Gets the full file path for a file relative to this <see cref="T:RDR2.Script"/>.
            e.g: <c>GetRelativeFilePath("ScriptFiles\texture1.png")</c> may return <c>"C:\Program Files\Rockstar Games\Red Dead Redemption 2\scripts\ScriptFiles\texture1.png"</c>.
            </summary>
            <param name="filePath">The file path relative to the location of this <see cref="T:RDR2.Script"/>.</param>
        </member>
        <member name="M:RDR2.Script.Abort">
            <summary>
            Aborts execution of this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="M:RDR2.Script.Pause">
            <summary>
            Pause execution of this <see cref="T:RDR2.Script"/>.
            </summary>
        </member>
        <member name="M:RDR2.Script.Resume">
            <summary>
            Starts execution of this <see cref="T:RDR2.Script"/> after it has been Paused.
            </summary>
        </member>
        <member name="M:RDR2.Script.Wait(System.Int32)">
            <summary>
            Pauses execution of the <see cref="T:RDR2.Script"/> for a specific amount of time.
            Must be called inside the main script loop (the <see cref="E:RDR2.Script.Tick"/> event or any sub methods called from it).
            </summary>
            <param name="ms">The time in milliseconds to pause for.</param>
        </member>
        <member name="M:RDR2.Script.Yield">
            <summary>
            Yields the execution of the script for 1 frame.
            </summary>
        </member>
        <member name="M:RDR2.Script.InstantiateScript``1">
            <summary>
            Spawns a new <see cref="T:RDR2.Script"/> instance of the specified type.
            </summary>
        </member>
        <member name="M:RDR2.ScriptSettings.Load(System.String)">
            <summary>
            Loads a <see cref="T:RDR2.ScriptSettings"/> from the specified file.
            </summary>
            <param name="filename">The filename to load the settings from.</param>
        </member>
        <member name="M:RDR2.ScriptSettings.Save">
            <summary>
            Saves this <see cref="T:RDR2.ScriptSettings"/> to file.
            </summary>
            <returns><see langword="true" /> if the file saved successfully; otherwise, <see langword="false" /></returns>
        </member>
        <member name="M:RDR2.ScriptSettings.GetValue``1(System.String,System.String,``0)">
            <summary>
            Reads a value from this <see cref="T:RDR2.ScriptSettings"/>.
            </summary>
            <param name="section">The section where the value is.</param>
            <param name="name">The name of the key the value is saved at.</param>
            <param name="defaultvalue">The fall-back value if the key doesn't exist or casting to type <typeparamref name="T"/> fails.</param>
        </member>
        <member name="M:RDR2.ScriptSettings.SetValue``1(System.String,System.String,``0)">
            <summary>
            Sets a value in this <see cref="T:RDR2.ScriptSettings"/>.
            </summary>
            <param name="section">The section where the value is.</param>
            <param name="name">The name of the key the value is saved at.</param>
            <param name="value">The value to set the key to.</param>
        </member>
        <member name="M:RDR2.ScriptSettings.GetAllValues``1(System.String,System.String)">
            <summary>
            Reads all the values at a specified key and section from this <see cref="T:RDR2.ScriptSettings"/>.
            </summary>
            <param name="section">The section where the value is.</param>
            <param name="name">The name of the key the values are saved at.</param>
        </member>
        <member name="P:RDR2.Volume.Position">
            <summary>
            Gets or sets the position of this <see cref="T:RDR2.Volume"/>.
            </summary>
        </member>
        <member name="P:RDR2.Volume.Rotation">
            <summary>
            Gets or sets the rotation of this <see cref="T:RDR2.Volume"/>.
            </summary>
        </member>
        <member name="P:RDR2.Volume.Scale">
            <summary>
            Gets or sets the scale of this <see cref="T:RDR2.Volume"/>.
            </summary>
        </member>
        <member name="P:RDR2.Volume.IsAggregateVolume">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Volume"/> is aggregate.
            </summary>
        </member>
        <member name="P:RDR2.Volume.RelationshipGroup">
            <summary>
            Gets or sets the relationship group hash of this <see cref="T:RDR2.Volume"/>.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsValid">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is valid.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsGun">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> has flag CWeaponInfoFlags::Flags::Gun set.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsBow">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is a bow.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsMelee">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is a melee weapon.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsPistol">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is a pistol.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsRepeater">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is repeater.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsRifle">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is rifle.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsSniper">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is a sniper.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsShotgun">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is shotgun.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsKit">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is a kit weapon.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsOneHanded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is one handed.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsTwoHanded">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is two handed.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsThrowable">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> is throwable.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.ClipSize">
            <summary>
            Gets the amount of ammo this <see cref="T:RDR2.Weapon"/> can hold in its clip.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.CanBeTwirled">
            <summary>
            Gets a value indicating whether this <see cref="T:RDR2.Weapon"/> can be twirled.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.Model">
            <summary>
            Get the <see cref="T:RDR2.Model"/> of this <see cref="T:RDR2.Weapon"/>
            </summary>
        </member>
        <member name="P:RDR2.Weapon.Group">
            <summary>
            Get the <see cref="T:RDR2.eWeaponGroup"/> of this <see cref="T:RDR2.Weapon"/>
            </summary>
        </member>
        <member name="P:RDR2.Weapon.SlotHash">
            <summary>
            Get the slot hash of this <see cref="T:RDR2.Weapon"/>
            </summary>
        </member>
        <member name="P:RDR2.Weapon.Name">
            <summary>
            Get the name of this <see cref="T:RDR2.Weapon"/>
            </summary>
        </member>
        <member name="P:RDR2.Weapon.PedHasThisWeapon">
            <summary>
            Gets a value indicating whether the <see cref="P:RDR2.Weapon.Owner"/> has this <see cref="T:RDR2.Weapon"/>.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.IsBeingCarried">
            <summary>
            Gets a value indicating whether the <see cref="P:RDR2.Weapon.Owner"/> is carrying this <see cref="T:RDR2.Weapon"/>.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.DefaultAmmoType">
            <summary>
            Gets the <see cref="T:RDR2.eAmmoType"/> that this weapon uses by default.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.CurrentAmmoType">
            <summary>
            Gets the <see cref="T:RDR2.eAmmoType"/> that this weapon currently using.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.InfiniteAmmo">
            <summary>
            Sets this <see cref="T:RDR2.Weapon"/> to have infinite ammo.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.Ammo">
            <summary>
            Get or set the total amount of ammo that this <see cref="T:RDR2.Weapon"/> has.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.AmmoInClip">
            <summary>
            Get or set the amount of ammo that this <see cref="T:RDR2.Weapon"/> has in its clip.
            </summary>
        </member>
        <member name="P:RDR2.Weapon.MaxAmmo">
            <summary>
            Get the max amount of ammo that this <see cref="T:RDR2.Weapon"/> has.
            </summary>
        </member>
        <member name="M:RDR2.World.GetAllPeds">
            <summary>
            Gets all of the <see cref="T:RDR2.Ped"/>s currently spawned/loaded in the game world
            </summary>
            <returns>An <see cref="T:System.Array"/> of all <see cref="T:RDR2.Ped"/>s found</returns>
            <remarks>Note: This function can return <see cref="M:System.Array.Empty``1"/> if the internal call to worldGetAllPeds() failed</remarks>
        </member>
        <member name="M:RDR2.World.GetAllVehicles">
            <summary>
            Gets all of the <see cref="T:RDR2.Vehicle"/>s currently spawned/loaded in the game world
            </summary>
            <returns>An <see cref="T:System.Array"/> of all <see cref="T:RDR2.Vehicle"/>s found</returns>
            <remarks>Note: This function can return <see cref="M:System.Array.Empty``1"/> if the internal call to worldGetAllVehicles() failed</remarks>
        </member>
        <member name="M:RDR2.World.GetAllObjects">
            <summary>
            Gets all of the <see cref="T:RDR2.Prop"/>s currently spawned/loaded in the game world
            </summary>
            <returns>An <see cref="T:System.Array"/> of all <see cref="T:RDR2.Prop"/>s found</returns>
            <remarks>Note: This function can return <see cref="M:System.Array.Empty``1"/> if the internal call to worldGetAllObjects() failed</remarks>
        </member>
        <member name="M:RDR2.World.CreateProp(RDR2.Model,RDR2.Math.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Spawns a <see cref="T:RDR2.Prop"/> of the given <see cref="T:RDR2.Model"/> at the position specified.
            </summary>
            <param name="model">The <see cref="T:RDR2.Model"/> of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="position">The position to spawn the <see cref="T:RDR2.Prop"/> at.</param>
            <param name="dynamic">if set to <c>true</c> the <see cref="T:RDR2.Prop"/> will have physics; otherwise, it will be static.</param>
            <param name="placeOnGround">if set to <c>true</c> place the prop on the ground nearest to the <paramref name="position"/>.</param>
            <remarks>returns <c>null</c> if the <see cref="T:RDR2.Prop"/> could not be spawned</remarks>
        </member>
        <member name="M:RDR2.World.CreateProp(RDR2.Model,RDR2.Math.Vector3,RDR2.Math.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Spawns a <see cref="T:RDR2.Prop"/> of the given <see cref="T:RDR2.Model"/> at the position specified.
            </summary>
            <param name="model">The <see cref="T:RDR2.Model"/> of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="position">The position to spawn the <see cref="T:RDR2.Prop"/> at.</param>
            <param name="rotation">The rotation of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="dynamic">if set to <c>true</c> the <see cref="T:RDR2.Prop"/> will have physics; otherwise, it will be static.</param>
            <param name="placeOnGround">if set to <c>true</c> place the prop on the ground nearest to the <paramref name="position"/>.</param>
            <remarks>returns <c>null</c> if the <see cref="T:RDR2.Prop"/> could not be spawned</remarks>
        </member>
        <member name="M:RDR2.World.CreatePropNoOffset(RDR2.Model,RDR2.Math.Vector3,System.Boolean)">
            <summary>
            Spawns a <see cref="T:RDR2.Prop"/> of the given <see cref="T:RDR2.Model"/> at the position specified without any offset.
            </summary>
            <param name="model">The <see cref="T:RDR2.Model"/> of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="position">The position to spawn the <see cref="T:RDR2.Prop"/> at.</param>
            <param name="dynamic">if set to <c>true</c> the <see cref="T:RDR2.Prop"/> will have physics; otherwise, it will be static.</param>
            <remarks>returns <c>null</c> if the <see cref="T:RDR2.Prop"/> could not be spawned</remarks>
        </member>
        <member name="M:RDR2.World.CreatePropNoOffset(RDR2.Model,RDR2.Math.Vector3,RDR2.Math.Vector3,System.Boolean)">
            <summary>
            Spawns a <see cref="T:RDR2.Prop"/> of the given <see cref="T:RDR2.Model"/> at the position specified without any offset.
            </summary>
            <param name="model">The <see cref="T:RDR2.Model"/> of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="position">The position to spawn the <see cref="T:RDR2.Prop"/> at.</param>
            <param name="rotation">The rotation of the <see cref="T:RDR2.Prop"/>.</param>
            <param name="dynamic">if set to <c>true</c> the <see cref="T:RDR2.Prop"/> will have physics; otherwise, it will be static.</param>
            <remarks>returns <c>null</c> if the <see cref="T:RDR2.Prop"/> could not be spawned</remarks>
        </member>
        <member name="M:RDR2.World.DrawMarker(RDR2.MarkerType,RDR2.Math.Vector3,RDR2.Math.Vector3,RDR2.Math.Vector3,RDR2.Math.Vector3,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Draws a marker in the world, this needs to be done on a per frame basis
            </summary>
            <param name="type">The type of marker.</param>
            <param name="pos">The position of the marker.</param>
            <param name="dir">The direction the marker points in.</param>
            <param name="rot">The rotation of the marker.</param>
            <param name="scale">The amount to scale the marker by.</param>
            <param name="color">The color of the marker.</param>
            <param name="bobUpAndDown">if set to <c>true</c> the marker will bob up and down.</param>
            <param name="faceCamera">if set to <c>true</c> the marker will always face the camera, regardless of its rotation.</param>
            <param name="rotateY">if set to <c>true</c> rotates only on the y axis(heading).</param>
            <param name="textueDict">Name of texture dictionary to load the texture from, leave null for no texture in the marker.</param>
            <param name="textureName">Name of texture inside the dictionary to load the texture from, leave null for no texture in the marker.</param>
            <param name="drawOnEntity">if set to <c>true</c> draw on any <see cref="T:RDR2.Entity"/> that intersects the marker.</param>
        </member>
    </members>
</doc>
